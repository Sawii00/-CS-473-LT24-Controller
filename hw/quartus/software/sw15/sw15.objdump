
sw15.elf:     file format elf32-littlenios2
sw15.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100244

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x0000f9b4 memsz 0x0000f9b4 flags r-x
    LOAD off    0x000109d4 vaddr 0x1010f9d4 paddr 0x101114c0 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012fac vaddr 0x10112fac paddr 0x10112fac align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f470  10100244  10100244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000320  1010f6b4  1010f6b4  000106b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  1010f9d4  101114c0  000109d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10112fac  10112fac  00012fac  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  1011310c  1011310c  000124c0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000124c0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e98  00000000  00000000  000124e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000233fb  00000000  00000000  00013380  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008f02  00000000  00000000  0003677b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b3a2  00000000  00000000  0003f67d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002144  00000000  00000000  0004aa20  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000037a1  00000000  00000000  0004cb64  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017868  00000000  00000000  00050305  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00067b70  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018c0  00000000  00000000  00067ba0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c502  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c505  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c511  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c512  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006c513  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006c51e  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006c529  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006c534  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000040  00000000  00000000  0006c53e  2**0
                  CONTENTS, READONLY
 26 .jdi          0000596f  00000000  00000000  0006c57e  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0027e094  00000000  00000000  00071eed  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100244 l    d  .text	00000000 .text
1010f6b4 l    d  .rodata	00000000 .rodata
1010f9d4 l    d  .rwdata	00000000 .rwdata
10112fac l    d  .bss	00000000 .bss
1011310c l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../sw15_bsp//obj/HAL/src/crt0.o
1010028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010f71a l     O .rodata	00000010 zeroes.4404
10102ae0 l     F .text	000000bc __sbprintf
1010f72a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10102cf0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10104820 l     F .text	00000008 __fp_unlock
10104834 l     F .text	0000019c __sinit.part.1
101049d0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1010f9d4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
1010fe18 l     O .rwdata	00000020 lc_ctype_charset
1010fdf8 l     O .rwdata	00000020 lc_message_charset
1010fe38 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1010f75c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
10107dcc l     F .text	000000fc __sprint_r.part.0
1010f890 l     O .rodata	00000010 blanks.4348
1010f880 l     O .rodata	00000010 zeroes.4349
10109358 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010d014 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010d120 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010d14c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1010d238 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010d318 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010d404 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010d5d8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
101114b0 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010d824 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010d958 l     F .text	00000034 alt_dev_reg
10110420 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010dc30 l     F .text	0000020c altera_avalon_jtag_uart_irq
1010de3c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010e5e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010ea5c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010eb9c l     F .text	0000003c alt_get_errno
1010ebd8 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10112fe0 g     O .bss	00000004 alt_instruction_exception_handler
10107410 g     F .text	00000074 _mprec_log10
101074fc g     F .text	0000008c __any_on
101098f4 g     F .text	00000054 _isatty_r
1010f768 g     O .rodata	00000028 __mprec_tinytens
1010d514 g     F .text	0000007c alt_main
10100760 g     F .text	000000c0 _puts_r
1011300c g     O .bss	00000100 alt_irq
10109948 g     F .text	00000060 _lseek_r
101114c0 g       *ABS*	00000000 __flash_rwdata_start
101002dc g     F .text	00000068 reset_lcd
1010bb40 g     F .text	00000088 .hidden __eqdf2
1011310c g       *ABS*	00000000 __alt_heap_start
10100724 g     F .text	0000003c printf
10109b60 g     F .text	0000009c _wcrtomb_r
10107c8c g     F .text	0000005c __sseek
10104b70 g     F .text	00000010 __sinit
10109a08 g     F .text	00000140 __swbuf_r
10105638 g     F .text	0000007c _setlocale_r
101049d8 g     F .text	00000068 __sfmoreglue
1010d5b4 g     F .text	00000024 __malloc_unlock
10106308 g     F .text	0000015c memmove
10104b58 g     F .text	00000018 _cleanup
1010658c g     F .text	000000a8 _Balloc
1010bbc8 g     F .text	000000dc .hidden __gtdf2
1010ef94 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000001c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
10109898 g     F .text	0000005c _fstat_r
10112fc4 g     O .bss	00000004 errno
10107c08 g     F .text	00000008 __seofread
10112fcc g     O .bss	00000004 alt_argv
10119480 g       *ABS*	00000000 _gp
101102a0 g     O .rwdata	00000180 alt_fd_list
1010efb8 g     F .text	00000090 alt_find_dev
101061c0 g     F .text	00000148 memcpy
10104828 g     F .text	0000000c _cleanup_r
1010ce2c g     F .text	000000dc .hidden __floatsidf
1010eb20 g     F .text	0000007c alt_io_redirect
1010bca4 g     F .text	000000f4 .hidden __ltdf2
1010f6b4 g       *ABS*	00000000 __DTOR_END__
10100820 g     F .text	00000014 puts
1010f284 g     F .text	0000009c alt_exception_cause_generated_bad_addr
10107aec g     F .text	00000074 __fpclassifyd
1010736c g     F .text	000000a4 __ratio
1010933c g     F .text	0000001c __vfiprintf_internal
1010e034 g     F .text	0000021c altera_avalon_jtag_uart_read
101006f4 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1010a8f0 g     F .text	00000064 .hidden __udivsi3
1010d274 g     F .text	000000a4 isatty
1010f7b8 g     O .rodata	000000c8 __mprec_tens
101056b4 g     F .text	0000000c __locale_charset
1010f1f4 g     F .text	00000090 alt_icache_flush
10112fc0 g     O .bss	00000004 __malloc_top_pad
10111488 g     O .rwdata	00000004 __mb_cur_max
101056e4 g     F .text	0000000c _localeconv_r
10106998 g     F .text	0000003c __i2b
10104ff4 g     F .text	000004bc __sfvwrite_r
10107b60 g     F .text	00000054 _sbrk_r
101099a8 g     F .text	00000060 _read_r
101114a8 g     O .rwdata	00000004 alt_max_fd
1010958c g     F .text	000000f0 _fclose_r
101047f0 g     F .text	00000030 fflush
10112fbc g     O .bss	00000004 __malloc_max_sbrked_mem
1010a9ac g     F .text	000008ac .hidden __adddf3
10107114 g     F .text	0000010c __b2d
1010a2c0 g     F .text	00000538 .hidden __umoddi3
1010d440 g     F .text	000000d4 lseek
10111480 g     O .rwdata	00000004 _global_impure_ptr
10107588 g     F .text	00000564 _realloc_r
1011310c g       *ABS*	00000000 __bss_end
1010e96c g     F .text	000000f0 alt_iic_isr_register
1010ee8c g     F .text	00000108 alt_tick
10109d48 g     F .text	00000578 .hidden __udivdi3
101097f4 g     F .text	00000024 _fputwc_r
1010f790 g     O .rodata	00000028 __mprec_bigtens
1010677c g     F .text	00000104 __s2b
1010cf08 g     F .text	000000a8 .hidden __floatunsidf
10106e54 g     F .text	00000060 __mcmp
10104b90 g     F .text	00000018 __fp_lock_all
1010e920 g     F .text	0000004c alt_ic_irq_enabled
1010edf0 g     F .text	0000009c alt_alarm_stop
10112fd4 g     O .bss	00000004 alt_irq_active
101000fc g     F .exceptions	000000d4 alt_irq_handler
10110278 g     O .rwdata	00000028 alt_dev_null
1010e5a0 g     F .text	00000048 alt_dcache_flush_all
10106880 g     F .text	00000068 __hi0bits
1010cdac g     F .text	00000080 .hidden __fixdfsi
101114c0 g       *ABS*	00000000 __ram_rwdata_end
101114a0 g     O .rwdata	00000008 alt_dev_list
1010d860 g     F .text	000000f8 write
1010f9d4 g       *ABS*	00000000 __ram_rodata_end
1010d188 g     F .text	000000b0 fstat
1010bca4 g     F .text	000000f4 .hidden __ledf2
10106bcc g     F .text	00000140 __pow5mult
10107ee0 g     F .text	0000145c ___vfiprintf_internal_r
10112fb4 g     O .bss	00000004 __nlocale_changed
1010a954 g     F .text	00000058 .hidden __umodsi3
1011310c g       *ABS*	00000000 end
1010db70 g     F .text	000000c0 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
1010f6b4 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010cfb0 g     F .text	00000064 .hidden __clzsi2
1010e250 g     F .text	00000224 altera_avalon_jtag_uart_write
10104b80 g     F .text	00000004 __sfp_lock_acquire
101060dc g     F .text	000000e4 memchr
101008cc g     F .text	000021f8 ___vfprintf_internal_r
10104ce4 g     F .text	00000310 _free_r
101056c0 g     F .text	00000010 __locale_mb_cur_max
1010f500 g     F .text	00000180 __call_exitprocs
10112fb0 g     O .bss	00000004 __mlocale_changed
1011148c g     O .rwdata	00000004 __malloc_sbrk_base
10100244 g     F .text	0000004c _start
10112fd8 g     O .bss	00000004 _alt_tick_rate
10106d0c g     F .text	00000148 __lshift
10112fdc g     O .bss	00000004 _alt_nticks
1010d614 g     F .text	000000fc read
1010d9c4 g     F .text	00000048 alt_sys_init
1010f3e8 g     F .text	00000118 __register_exitproc
101069d4 g     F .text	000001f8 __multiply
1010dedc g     F .text	00000068 altera_avalon_jtag_uart_close
1010f9d4 g       *ABS*	00000000 __ram_rwdata_start
1010f6b4 g       *ABS*	00000000 __ram_rodata_start
10112fe4 g     O .bss	00000028 __malloc_current_mallinfo
10107220 g     F .text	0000014c __d2b
1010da0c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1010f150 g     F .text	000000a4 alt_get_fd
10109474 g     F .text	00000054 _close_r
1010f36c g     F .text	0000007c memcmp
1010dacc g     F .text	00000050 altera_avalon_jtag_uart_close_fd
1011310c g       *ABS*	00000000 __alt_stack_base
1010db1c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10102b9c g     F .text	00000154 __swsetup_r
1010b258 g     F .text	000008e8 .hidden __divdf3
10104a40 g     F .text	00000118 __sfp
10107484 g     F .text	00000078 __copybits
1010fe70 g     O .rwdata	00000408 __malloc_av_
10104b8c g     F .text	00000004 __sinit_lock_release
1010bd98 g     F .text	00000718 .hidden __muldf3
10107bb4 g     F .text	00000054 __sread
1010f048 g     F .text	00000108 alt_find_file
1010e624 g     F .text	000000a4 alt_dev_llist_insert
1010d590 g     F .text	00000024 __malloc_lock
1010d774 g     F .text	000000b0 sbrk
10104794 g     F .text	0000005c _fflush_r
101094c8 g     F .text	000000c4 _calloc_r
10100344 g     F .text	000000f8 send_command
10112fac g       *ABS*	00000000 __bss_start
10106464 g     F .text	00000128 memset
101006ac g     F .text	00000048 main
10112fd0 g     O .bss	00000004 alt_envp
10112fb8 g     O .bss	00000004 __malloc_max_total_mem
1010da6c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10109b48 g     F .text	00000018 __swbuf
10107ce8 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
1010967c g     F .text	00000014 fclose
10102ef0 g     F .text	00001688 _dtoa_r
101058d0 g     F .text	0000080c _malloc_r
10109cbc g     F .text	00000030 __ascii_wctomb
101114ac g     O .rwdata	00000004 alt_errno
101054b0 g     F .text	000000c4 _fwalk
1010a7f8 g     F .text	00000084 .hidden __divsi3
10104bc0 g     F .text	00000124 _malloc_trim_r
1010f6b4 g       *ABS*	00000000 __CTOR_END__
10107cf0 g     F .text	000000dc strcmp
1010f6b4 g       *ABS*	00000000 __flash_rodata_start
1010f6b4 g       *ABS*	00000000 __DTOR_LIST__
1010bb40 g     F .text	00000088 .hidden __nedf2
1010d98c g     F .text	00000038 alt_irq_init
1010d710 g     F .text	00000064 alt_release_fd
1010f8a0 g     O .rodata	00000100 .hidden __clz_tab
10112fac g     O .bss	00000004 _PathLocale
1010043c g     F .text	000000ac start_lcd
1010f320 g     F .text	00000014 atexit
10109414 g     F .text	00000060 _write_r
101056f0 g     F .text	00000018 setlocale
101005bc g     F .text	0000006c init_image
10111484 g     O .rwdata	00000004 _impure_ptr
10112fc8 g     O .bss	00000004 alt_argc
10104578 g     F .text	0000021c __sflush_r
1010e728 g     F .text	00000060 _do_dtors
101056dc g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
101070b0 g     F .text	00000064 __ulp
10104ba8 g     F .text	00000018 __fp_unlock_all
10111498 g     O .rwdata	00000008 alt_fs_list
10100020 g       *ABS*	00000000 __ram_exceptions_start
10105708 g     F .text	0000000c localeconv
1010e7bc g     F .text	00000050 alt_ic_isr_register
101114c0 g       *ABS*	00000000 _edata
1011310c g       *ABS*	00000000 _end
10100574 g     F .text	00000048 configure_image
10109690 g     F .text	00000164 __fputwc
10100244 g       *ABS*	00000000 __ram_exceptions_end
1010df44 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
10100628 g     F .text	00000084 fill_memory
1010e894 g     F .text	0000008c alt_ic_irq_disable
10107c10 g     F .text	0000007c __swrite
10111490 g     O .rwdata	00000004 __malloc_trim_threshold
101056d0 g     F .text	0000000c __locale_msgcharset
1010f334 g     F .text	00000038 exit
10105574 g     F .text	000000c4 _fwalk_reent
10106eb4 g     F .text	000001fc __mdiff
1010a87c g     F .text	00000074 .hidden __modsi3
101004e8 g     F .text	0000008c init_lcd
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
10104b84 g     F .text	00000004 __sfp_lock_release
1010f680 g     F .text	00000034 _exit
1010e474 g     F .text	0000012c alt_alarm_start
10105714 g     F .text	000001bc __smakebuf_r
10100834 g     F .text	00000098 strlen
1010ec9c g     F .text	00000154 open
1010bbc8 g     F .text	000000dc .hidden __gedf2
10111494 g     O .rwdata	00000004 __wctomb
10107ec8 g     F .text	00000018 __sprint_r
1010e788 g     F .text	00000034 alt_icache_flush_all
101114b4 g     O .rwdata	00000004 alt_priority_mask
10100290 g     F .text	0000004c set_flag
1010e80c g     F .text	00000088 alt_ic_irq_enable
10102ac4 g     F .text	0000001c __vfprintf_internal
10109cec g     F .text	0000005c _wctomb_r
1010c4b0 g     F .text	000008fc .hidden __subdf3
101068e8 g     F .text	000000b0 __lo0bits
101114b8 g     O .rwdata	00000008 alt_alarm_list
1010e6c8 g     F .text	00000060 _do_ctors
10109bfc g     F .text	000000c0 wcrtomb
1010d050 g     F .text	000000d0 close
1010d380 g     F .text	00000084 alt_load
10109818 g     F .text	00000080 fputwc
10104b88 g     F .text	00000004 __sinit_lock_acquire
1010665c g     F .text	00000120 __multadd
10106634 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10100000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10100000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10100004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10100008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1010000c:	00bffd16 	blt	zero,r2,10100004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100010:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100014:	08409114 	ori	at,at,580
    jmp r1
10100018:	0800683a 	jmp	at
1010001c:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	108c0304 	addi	r2,r2,12300
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	108c0304 	addi	r2,r2,12300
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
101001e4:	000531fa 	rdctl	r2,exception
101001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
101001ec:	e0bffd17 	ldw	r2,-12(fp)
101001f0:	10801f0c 	andi	r2,r2,124
101001f4:	1004d0ba 	srli	r2,r2,2
101001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
101001fc:	0005333a 	rdctl	r2,badaddr
10100200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
10100204:	d0a6d817 	ldw	r2,-25760(gp)
10100208:	10000726 	beq	r2,zero,10100228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
1010020c:	d0a6d817 	ldw	r2,-25760(gp)
10100210:	e0fffd17 	ldw	r3,-12(fp)
10100214:	e1bffe17 	ldw	r6,-8(fp)
10100218:	e17fff17 	ldw	r5,-4(fp)
1010021c:	1809883a 	mov	r4,r3
10100220:	103ee83a 	callr	r2
10100224:	00000206 	br	10100230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
1010022c:	0005883a 	mov	r2,zero
}
10100230:	e037883a 	mov	sp,fp
10100234:	dfc00117 	ldw	ra,4(sp)
10100238:	df000017 	ldw	fp,0(sp)
1010023c:	dec00204 	addi	sp,sp,8
10100240:	f800283a 	ret

Disassembly of section .text:

10100244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10100244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
10100248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
1010024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10100250:	00bffd16 	blt	zero,r2,10100248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100254:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
1010025c:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
10100260:	d6a52014 	ori	gp,gp,38016
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100264:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100268:	108beb14 	ori	r2,r2,12204

    movhi r3, %hi(__bss_end)
1010026c:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
10100270:	18cc4314 	ori	r3,r3,12556

    beq r2, r3, 1f
10100274:	10c00326 	beq	r2,r3,10100284 <_start+0x40>

0:
    stw zero, (r2)
10100278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
1010027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10100280:	10fffd36 	bltu	r2,r3,10100278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100284:	010d3800 	call	1010d380 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100288:	010d5140 	call	1010d514 <alt_main>

1010028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
1010028c:	003fff06 	br	1010028c <__alt_data_end+0xfffe028c>

10100290 <set_flag>:
#define COMMAND_REG 10
#define N_PARAMS 12
#define PARAM(n) 14 + n * 2

void set_flag(uint16_t val)
{
10100290:	defffd04 	addi	sp,sp,-12
10100294:	df000215 	stw	fp,8(sp)
10100298:	df000204 	addi	fp,sp,8
1010029c:	2005883a 	mov	r2,r4
101002a0:	e0bfff0d 	sth	r2,-4(fp)
	uint16_t flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
101002a4:	00840034 	movhi	r2,4096
101002a8:	10824204 	addi	r2,r2,2312
101002ac:	1080002b 	ldhuio	r2,0(r2)
101002b0:	10bfffcc 	andi	r2,r2,65535
101002b4:	e0bffe0d 	sth	r2,-8(fp)
	IOWR_16DIRECT(LCD_0_BASE, FLAGS,  val);
101002b8:	e0ffff0b 	ldhu	r3,-4(fp)
101002bc:	00840034 	movhi	r2,4096
101002c0:	10824204 	addi	r2,r2,2312
101002c4:	10c0002d 	sthio	r3,0(r2)
}
101002c8:	0001883a 	nop
101002cc:	e037883a 	mov	sp,fp
101002d0:	df000017 	ldw	fp,0(sp)
101002d4:	dec00104 	addi	sp,sp,4
101002d8:	f800283a 	ret

101002dc <reset_lcd>:

void reset_lcd()
{
101002dc:	defffd04 	addi	sp,sp,-12
101002e0:	dfc00215 	stw	ra,8(sp)
101002e4:	df000115 	stw	fp,4(sp)
101002e8:	df000104 	addi	fp,sp,4
	set_flag(0x4);
101002ec:	01000104 	movi	r4,4
101002f0:	01002900 	call	10100290 <set_flag>
	uint16_t flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
101002f4:	00840034 	movhi	r2,4096
101002f8:	10824204 	addi	r2,r2,2312
101002fc:	1080002b 	ldhuio	r2,0(r2)
10100300:	10bfffcc 	andi	r2,r2,65535
10100304:	e0bfff0d 	sth	r2,-4(fp)

	while(flags & 0x4)
10100308:	00000506 	br	10100320 <reset_lcd+0x44>
	{
		flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
1010030c:	00840034 	movhi	r2,4096
10100310:	10824204 	addi	r2,r2,2312
10100314:	1080002b 	ldhuio	r2,0(r2)
10100318:	10bfffcc 	andi	r2,r2,65535
1010031c:	e0bfff0d 	sth	r2,-4(fp)
void reset_lcd()
{
	set_flag(0x4);
	uint16_t flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);

	while(flags & 0x4)
10100320:	e0bfff0b 	ldhu	r2,-4(fp)
10100324:	1080010c 	andi	r2,r2,4
10100328:	103ff81e 	bne	r2,zero,1010030c <__alt_data_end+0xfffe030c>
	{
		flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
	}
}
1010032c:	0001883a 	nop
10100330:	e037883a 	mov	sp,fp
10100334:	dfc00117 	ldw	ra,4(sp)
10100338:	df000017 	ldw	fp,0(sp)
1010033c:	dec00204 	addi	sp,sp,8
10100340:	f800283a 	ret

10100344 <send_command>:
	}
}
*/

void send_command(uint16_t cmd, uint16_t n, uint16_t* params)
{
10100344:	defffb04 	addi	sp,sp,-20
10100348:	df000415 	stw	fp,16(sp)
1010034c:	df000404 	addi	fp,sp,16
10100350:	2007883a 	mov	r3,r4
10100354:	2805883a 	mov	r2,r5
10100358:	e1bfff15 	stw	r6,-4(fp)
1010035c:	e0fffd0d 	sth	r3,-12(fp)
10100360:	e0bffe0d 	sth	r2,-8(fp)
	uint16_t i = 0;
10100364:	e03ffc0d 	sth	zero,-16(fp)



	IOWR_16DIRECT(LCD_0_BASE, COMMAND_REG, cmd);
10100368:	e0fffd0b 	ldhu	r3,-12(fp)
1010036c:	00840034 	movhi	r2,4096
10100370:	10824284 	addi	r2,r2,2314
10100374:	10c0002d 	sthio	r3,0(r2)
	IOWR_16DIRECT(LCD_0_BASE, N_PARAMS, n);
10100378:	e0fffe0b 	ldhu	r3,-8(fp)
1010037c:	00840034 	movhi	r2,4096
10100380:	10824304 	addi	r2,r2,2316
10100384:	10c0002d 	sthio	r3,0(r2)


	while(i < n)
10100388:	00001206 	br	101003d4 <send_command+0x90>
	{
		IOWR_16DIRECT(LCD_0_BASE, PARAM(i), params[i]);
1010038c:	e0bffc0b 	ldhu	r2,-16(fp)
10100390:	108001c4 	addi	r2,r2,7
10100394:	1085883a 	add	r2,r2,r2
10100398:	1007883a 	mov	r3,r2
1010039c:	00840034 	movhi	r2,4096
101003a0:	10824004 	addi	r2,r2,2304
101003a4:	1887883a 	add	r3,r3,r2
101003a8:	e0bffc0b 	ldhu	r2,-16(fp)
101003ac:	1085883a 	add	r2,r2,r2
101003b0:	1009883a 	mov	r4,r2
101003b4:	e0bfff17 	ldw	r2,-4(fp)
101003b8:	1105883a 	add	r2,r2,r4
101003bc:	1080000b 	ldhu	r2,0(r2)
101003c0:	10bfffcc 	andi	r2,r2,65535
101003c4:	1880002d 	sthio	r2,0(r3)
		++i;
101003c8:	e0bffc0b 	ldhu	r2,-16(fp)
101003cc:	10800044 	addi	r2,r2,1
101003d0:	e0bffc0d 	sth	r2,-16(fp)

	IOWR_16DIRECT(LCD_0_BASE, COMMAND_REG, cmd);
	IOWR_16DIRECT(LCD_0_BASE, N_PARAMS, n);


	while(i < n)
101003d4:	e0fffc0b 	ldhu	r3,-16(fp)
101003d8:	e0bffe0b 	ldhu	r2,-8(fp)
101003dc:	18bfeb36 	bltu	r3,r2,1010038c <__alt_data_end+0xfffe038c>
	{
		IOWR_16DIRECT(LCD_0_BASE, PARAM(i), params[i]);
		++i;
	}
	IOWR_16DIRECT(LCD_0_BASE, FLAGS, 0x1); //send command flag
101003e0:	00c00044 	movi	r3,1
101003e4:	00840034 	movhi	r2,4096
101003e8:	10824204 	addi	r2,r2,2312
101003ec:	10c0002d 	sthio	r3,0(r2)
	uint16_t flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
101003f0:	00840034 	movhi	r2,4096
101003f4:	10824204 	addi	r2,r2,2312
101003f8:	1080002b 	ldhuio	r2,0(r2)
101003fc:	10bfffcc 	andi	r2,r2,65535
10100400:	e0bffc8d 	sth	r2,-14(fp)
	while(flags & 0x2)
10100404:	00000506 	br	1010041c <send_command+0xd8>
	{
		flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
10100408:	00840034 	movhi	r2,4096
1010040c:	10824204 	addi	r2,r2,2312
10100410:	1080002b 	ldhuio	r2,0(r2)
10100414:	10bfffcc 	andi	r2,r2,65535
10100418:	e0bffc8d 	sth	r2,-14(fp)
		IOWR_16DIRECT(LCD_0_BASE, PARAM(i), params[i]);
		++i;
	}
	IOWR_16DIRECT(LCD_0_BASE, FLAGS, 0x1); //send command flag
	uint16_t flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
	while(flags & 0x2)
1010041c:	e0bffc8b 	ldhu	r2,-14(fp)
10100420:	1080008c 	andi	r2,r2,2
10100424:	103ff81e 	bne	r2,zero,10100408 <__alt_data_end+0xfffe0408>
	{
		flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
	}
}
10100428:	0001883a 	nop
1010042c:	e037883a 	mov	sp,fp
10100430:	df000017 	ldw	fp,0(sp)
10100434:	dec00104 	addi	sp,sp,4
10100438:	f800283a 	ret

1010043c <start_lcd>:

void start_lcd()
{
1010043c:	defffd04 	addi	sp,sp,-12
10100440:	dfc00215 	stw	ra,8(sp)
10100444:	df000115 	stw	fp,4(sp)
10100448:	df000104 	addi	fp,sp,4
	//set_flag(0x1);
	uint16_t flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
1010044c:	00840034 	movhi	r2,4096
10100450:	10824204 	addi	r2,r2,2312
10100454:	1080002b 	ldhuio	r2,0(r2)
10100458:	10bfffcc 	andi	r2,r2,65535
1010045c:	e0bfff0d 	sth	r2,-4(fp)
	printf("flags: %x \n", flags);
10100460:	e0bfff0b 	ldhu	r2,-4(fp)
10100464:	100b883a 	mov	r5,r2
10100468:	01040474 	movhi	r4,4113
1010046c:	213dad04 	addi	r4,r4,-2380
10100470:	01007240 	call	10100724 <printf>
	IOWR_16DIRECT(LCD_0_BASE, FLAGS,0x2);
10100474:	00c00084 	movi	r3,2
10100478:	00840034 	movhi	r2,4096
1010047c:	10824204 	addi	r2,r2,2312
10100480:	10c0002d 	sthio	r3,0(r2)
	flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
10100484:	00840034 	movhi	r2,4096
10100488:	10824204 	addi	r2,r2,2312
1010048c:	1080002b 	ldhuio	r2,0(r2)
10100490:	10bfffcc 	andi	r2,r2,65535
10100494:	e0bfff0d 	sth	r2,-4(fp)
	printf("flags: %x \n", flags);
10100498:	e0bfff0b 	ldhu	r2,-4(fp)
1010049c:	100b883a 	mov	r5,r2
101004a0:	01040474 	movhi	r4,4113
101004a4:	213dad04 	addi	r4,r4,-2380
101004a8:	01007240 	call	10100724 <printf>

	while(flags & 0x1)
101004ac:	00000506 	br	101004c4 <start_lcd+0x88>
	{

		flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
101004b0:	00840034 	movhi	r2,4096
101004b4:	10824204 	addi	r2,r2,2312
101004b8:	1080002b 	ldhuio	r2,0(r2)
101004bc:	10bfffcc 	andi	r2,r2,65535
101004c0:	e0bfff0d 	sth	r2,-4(fp)
	printf("flags: %x \n", flags);
	IOWR_16DIRECT(LCD_0_BASE, FLAGS,0x2);
	flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
	printf("flags: %x \n", flags);

	while(flags & 0x1)
101004c4:	e0bfff0b 	ldhu	r2,-4(fp)
101004c8:	1080004c 	andi	r2,r2,1
101004cc:	103ff81e 	bne	r2,zero,101004b0 <__alt_data_end+0xfffe04b0>
	{

		flags = IORD_16DIRECT(LCD_0_BASE, FLAGS);
	}
}
101004d0:	0001883a 	nop
101004d4:	e037883a 	mov	sp,fp
101004d8:	dfc00117 	ldw	ra,4(sp)
101004dc:	df000017 	ldw	fp,0(sp)
101004e0:	dec00204 	addi	sp,sp,8
101004e4:	f800283a 	ret

101004e8 <init_lcd>:

void init_lcd()
{
101004e8:	defffb04 	addi	sp,sp,-20
101004ec:	dfc00415 	stw	ra,16(sp)
101004f0:	df000315 	stw	fp,12(sp)
101004f4:	df000304 	addi	fp,sp,12
	send_command(0x11, 0, (uint16_t []){ 0x09, 0x0a});
101004f8:	00800244 	movi	r2,9
101004fc:	e0bffe8d 	sth	r2,-6(fp)
10100500:	00800284 	movi	r2,10
10100504:	e0bfff0d 	sth	r2,-4(fp)
10100508:	e0bffe84 	addi	r2,fp,-6
1010050c:	100d883a 	mov	r6,r2
10100510:	000b883a 	mov	r5,zero
10100514:	01000444 	movi	r4,17
10100518:	01003440 	call	10100344 <send_command>
	send_command(0xcf, 3, (uint16_t []){ 0x0, 0x81, 0xc0});
1010051c:	e03ffd0d 	sth	zero,-12(fp)
10100520:	00802044 	movi	r2,129
10100524:	e0bffd8d 	sth	r2,-10(fp)
10100528:	00803004 	movi	r2,192
1010052c:	e0bffe0d 	sth	r2,-8(fp)
10100530:	e1bffd04 	addi	r6,fp,-12
10100534:	014000c4 	movi	r5,3
10100538:	010033c4 	movi	r4,207
1010053c:	01003440 	call	10100344 <send_command>
	send_command(0x2a, 4, (uint16_t []){ 0x0, 0x0, 0x0, 0xef});
	send_command(0x2b, 4, (uint16_t []){ 0x0, 0x0, 0x01, 0x3f});
	send_command(0x3a, 1, (uint16_t []){ 0x55}); //RGB
	send_command(0xf6, 3, (uint16_t []){ 0x01, 0x30, 0x0});
	send_command(0x29, 0, (uint16_t []){ });*/
	printf("--");
10100540:	01040474 	movhi	r4,4113
10100544:	213db004 	addi	r4,r4,-2368
10100548:	01007240 	call	10100724 <printf>
	IOWR_16DIRECT(LCD_0_BASE, FLAGS,0x0);
1010054c:	0007883a 	mov	r3,zero
10100550:	00840034 	movhi	r2,4096
10100554:	10824204 	addi	r2,r2,2312
10100558:	10c0002d 	sthio	r3,0(r2)
}
1010055c:	0001883a 	nop
10100560:	e037883a 	mov	sp,fp
10100564:	dfc00117 	ldw	ra,4(sp)
10100568:	df000017 	ldw	fp,0(sp)
1010056c:	dec00204 	addi	sp,sp,8
10100570:	f800283a 	ret

10100574 <configure_image>:
void configure_image(uint32_t image_address, uint32_t image_size)
{
10100574:	defffd04 	addi	sp,sp,-12
10100578:	df000215 	stw	fp,8(sp)
1010057c:	df000204 	addi	fp,sp,8
10100580:	e13ffe15 	stw	r4,-8(fp)
10100584:	e17fff15 	stw	r5,-4(fp)
	IOWR_32DIRECT(LCD_0_BASE, IMAGE_ADDRESS, image_address);
10100588:	e0fffe17 	ldw	r3,-8(fp)
1010058c:	00840034 	movhi	r2,4096
10100590:	10824004 	addi	r2,r2,2304
10100594:	10c00035 	stwio	r3,0(r2)
	IOWR_32DIRECT(LCD_0_BASE, IMAGE_LENGTH, image_size);
10100598:	e0ffff17 	ldw	r3,-4(fp)
1010059c:	00840034 	movhi	r2,4096
101005a0:	10824104 	addi	r2,r2,2308
101005a4:	10c00035 	stwio	r3,0(r2)
}
101005a8:	0001883a 	nop
101005ac:	e037883a 	mov	sp,fp
101005b0:	df000017 	ldw	fp,0(sp)
101005b4:	dec00104 	addi	sp,sp,4
101005b8:	f800283a 	ret

101005bc <init_image>:

void init_image(uint32_t *image_address, uint32_t image_size)
{
101005bc:	defffc04 	addi	sp,sp,-16
101005c0:	df000315 	stw	fp,12(sp)
101005c4:	df000304 	addi	fp,sp,12
101005c8:	e13ffe15 	stw	r4,-8(fp)
101005cc:	e17fff15 	stw	r5,-4(fp)
	uint32_t i = 0;
101005d0:	e03ffd15 	stw	zero,-12(fp)
	while(i < image_size / sizeof(uint16_t))
101005d4:	00000b06 	br	10100604 <init_image+0x48>
	{
		image_address[i] = 0xAB;
101005d8:	e0bffd17 	ldw	r2,-12(fp)
101005dc:	1085883a 	add	r2,r2,r2
101005e0:	1085883a 	add	r2,r2,r2
101005e4:	1007883a 	mov	r3,r2
101005e8:	e0bffe17 	ldw	r2,-8(fp)
101005ec:	10c5883a 	add	r2,r2,r3
101005f0:	00c02ac4 	movi	r3,171
101005f4:	10c00015 	stw	r3,0(r2)
		++i;
101005f8:	e0bffd17 	ldw	r2,-12(fp)
101005fc:	10800044 	addi	r2,r2,1
10100600:	e0bffd15 	stw	r2,-12(fp)
}

void init_image(uint32_t *image_address, uint32_t image_size)
{
	uint32_t i = 0;
	while(i < image_size / sizeof(uint16_t))
10100604:	e0bfff17 	ldw	r2,-4(fp)
10100608:	1004d07a 	srli	r2,r2,1
1010060c:	e0fffd17 	ldw	r3,-12(fp)
10100610:	18bff136 	bltu	r3,r2,101005d8 <__alt_data_end+0xfffe05d8>
	{
		image_address[i] = 0xAB;
		++i;
	}
}
10100614:	0001883a 	nop
10100618:	e037883a 	mov	sp,fp
1010061c:	df000017 	ldw	fp,0(sp)
10100620:	dec00104 	addi	sp,sp,4
10100624:	f800283a 	ret

10100628 <fill_memory>:

void fill_memory(uint32_t image_size){
10100628:	defffb04 	addi	sp,sp,-20
1010062c:	dfc00415 	stw	ra,16(sp)
10100630:	df000315 	stw	fp,12(sp)
10100634:	df000304 	addi	fp,sp,12
10100638:	e13fff15 	stw	r4,-4(fp)
int check;
	for(uint32_t i=0; i< image_size;i=i+4){
1010063c:	e03ffd15 	stw	zero,-12(fp)
10100640:	00001106 	br	10100688 <fill_memory+0x60>
		IOWR_32DIRECT(HPS_0_BRIDGES_BASE,i,0xF800F800);
10100644:	e0fffd17 	ldw	r3,-12(fp)
10100648:	00be0074 	movhi	r2,63489
1010064c:	10be0004 	addi	r2,r2,-2048
10100650:	18800035 	stwio	r2,0(r3)
		check = IORD_32DIRECT(HPS_0_BRIDGES_BASE, i);
10100654:	e0bffd17 	ldw	r2,-12(fp)
10100658:	10800037 	ldwio	r2,0(r2)
1010065c:	e0bffe15 	stw	r2,-8(fp)
		if(check != 0xf800f800){
10100660:	e0fffe17 	ldw	r3,-8(fp)
10100664:	00be0074 	movhi	r2,63489
10100668:	10be0004 	addi	r2,r2,-2048
1010066c:	18800326 	beq	r3,r2,1010067c <fill_memory+0x54>
			printf("--");
10100670:	01040474 	movhi	r4,4113
10100674:	213db004 	addi	r4,r4,-2368
10100678:	01007240 	call	10100724 <printf>
	}
}

void fill_memory(uint32_t image_size){
int check;
	for(uint32_t i=0; i< image_size;i=i+4){
1010067c:	e0bffd17 	ldw	r2,-12(fp)
10100680:	10800104 	addi	r2,r2,4
10100684:	e0bffd15 	stw	r2,-12(fp)
10100688:	e0fffd17 	ldw	r3,-12(fp)
1010068c:	e0bfff17 	ldw	r2,-4(fp)
10100690:	18bfec36 	bltu	r3,r2,10100644 <__alt_data_end+0xfffe0644>
		check = IORD_32DIRECT(HPS_0_BRIDGES_BASE, i);
		if(check != 0xf800f800){
			printf("--");
		}
	}
}
10100694:	0001883a 	nop
10100698:	e037883a 	mov	sp,fp
1010069c:	dfc00117 	ldw	ra,4(sp)
101006a0:	df000017 	ldw	fp,0(sp)
101006a4:	dec00204 	addi	sp,sp,8
101006a8:	f800283a 	ret

101006ac <main>:


int main()
{
101006ac:	defffe04 	addi	sp,sp,-8
101006b0:	dfc00115 	stw	ra,4(sp)
101006b4:	df000015 	stw	fp,0(sp)
101006b8:	d839883a 	mov	fp,sp

	printf("reset\n");
101006bc:	01040474 	movhi	r4,4113
101006c0:	213db104 	addi	r4,r4,-2364
101006c4:	01008200 	call	10100820 <puts>
	reset_lcd();
101006c8:	01002dc0 	call	101002dc <reset_lcd>
	printf("init\n");
101006cc:	01040474 	movhi	r4,4113
101006d0:	213db304 	addi	r4,r4,-2356
101006d4:	01008200 	call	10100820 <puts>
	init_lcd();
101006d8:	01004e80 	call	101004e8 <init_lcd>
101006dc:	0005883a 	mov	r2,zero
	printf("start");
	configure_image(HPS_0_BRIDGES_BASE, image_size);
	start_lcd();
	printf("start done\n");
	return 0;*/
}
101006e0:	e037883a 	mov	sp,fp
101006e4:	dfc00117 	ldw	ra,4(sp)
101006e8:	df000017 	ldw	fp,0(sp)
101006ec:	dec00204 	addi	sp,sp,8
101006f0:	f800283a 	ret

101006f4 <_printf_r>:
101006f4:	defffd04 	addi	sp,sp,-12
101006f8:	2805883a 	mov	r2,r5
101006fc:	dfc00015 	stw	ra,0(sp)
10100700:	d9800115 	stw	r6,4(sp)
10100704:	d9c00215 	stw	r7,8(sp)
10100708:	21400217 	ldw	r5,8(r4)
1010070c:	d9c00104 	addi	r7,sp,4
10100710:	100d883a 	mov	r6,r2
10100714:	01008cc0 	call	101008cc <___vfprintf_internal_r>
10100718:	dfc00017 	ldw	ra,0(sp)
1010071c:	dec00304 	addi	sp,sp,12
10100720:	f800283a 	ret

10100724 <printf>:
10100724:	defffc04 	addi	sp,sp,-16
10100728:	dfc00015 	stw	ra,0(sp)
1010072c:	d9400115 	stw	r5,4(sp)
10100730:	d9800215 	stw	r6,8(sp)
10100734:	d9c00315 	stw	r7,12(sp)
10100738:	00840474 	movhi	r2,4113
1010073c:	10852104 	addi	r2,r2,5252
10100740:	10800017 	ldw	r2,0(r2)
10100744:	200b883a 	mov	r5,r4
10100748:	d9800104 	addi	r6,sp,4
1010074c:	11000217 	ldw	r4,8(r2)
10100750:	0102ac40 	call	10102ac4 <__vfprintf_internal>
10100754:	dfc00017 	ldw	ra,0(sp)
10100758:	dec00404 	addi	sp,sp,16
1010075c:	f800283a 	ret

10100760 <_puts_r>:
10100760:	defff604 	addi	sp,sp,-40
10100764:	dc000715 	stw	r16,28(sp)
10100768:	2021883a 	mov	r16,r4
1010076c:	2809883a 	mov	r4,r5
10100770:	dc400815 	stw	r17,32(sp)
10100774:	dfc00915 	stw	ra,36(sp)
10100778:	2823883a 	mov	r17,r5
1010077c:	01008340 	call	10100834 <strlen>
10100780:	10c00044 	addi	r3,r2,1
10100784:	d8800115 	stw	r2,4(sp)
10100788:	00840474 	movhi	r2,4113
1010078c:	10bdb504 	addi	r2,r2,-2348
10100790:	d8800215 	stw	r2,8(sp)
10100794:	00800044 	movi	r2,1
10100798:	d8800315 	stw	r2,12(sp)
1010079c:	00800084 	movi	r2,2
101007a0:	dc400015 	stw	r17,0(sp)
101007a4:	d8c00615 	stw	r3,24(sp)
101007a8:	dec00415 	stw	sp,16(sp)
101007ac:	d8800515 	stw	r2,20(sp)
101007b0:	80000226 	beq	r16,zero,101007bc <_puts_r+0x5c>
101007b4:	80800e17 	ldw	r2,56(r16)
101007b8:	10001426 	beq	r2,zero,1010080c <_puts_r+0xac>
101007bc:	81400217 	ldw	r5,8(r16)
101007c0:	2880030b 	ldhu	r2,12(r5)
101007c4:	10c8000c 	andi	r3,r2,8192
101007c8:	1800061e 	bne	r3,zero,101007e4 <_puts_r+0x84>
101007cc:	29001917 	ldw	r4,100(r5)
101007d0:	00f7ffc4 	movi	r3,-8193
101007d4:	10880014 	ori	r2,r2,8192
101007d8:	20c6703a 	and	r3,r4,r3
101007dc:	2880030d 	sth	r2,12(r5)
101007e0:	28c01915 	stw	r3,100(r5)
101007e4:	d9800404 	addi	r6,sp,16
101007e8:	8009883a 	mov	r4,r16
101007ec:	0104ff40 	call	10104ff4 <__sfvwrite_r>
101007f0:	1000091e 	bne	r2,zero,10100818 <_puts_r+0xb8>
101007f4:	00800284 	movi	r2,10
101007f8:	dfc00917 	ldw	ra,36(sp)
101007fc:	dc400817 	ldw	r17,32(sp)
10100800:	dc000717 	ldw	r16,28(sp)
10100804:	dec00a04 	addi	sp,sp,40
10100808:	f800283a 	ret
1010080c:	8009883a 	mov	r4,r16
10100810:	0104b700 	call	10104b70 <__sinit>
10100814:	003fe906 	br	101007bc <__alt_data_end+0xfffe07bc>
10100818:	00bfffc4 	movi	r2,-1
1010081c:	003ff606 	br	101007f8 <__alt_data_end+0xfffe07f8>

10100820 <puts>:
10100820:	00840474 	movhi	r2,4113
10100824:	10852104 	addi	r2,r2,5252
10100828:	200b883a 	mov	r5,r4
1010082c:	11000017 	ldw	r4,0(r2)
10100830:	01007601 	jmpi	10100760 <_puts_r>

10100834 <strlen>:
10100834:	208000cc 	andi	r2,r4,3
10100838:	10002026 	beq	r2,zero,101008bc <strlen+0x88>
1010083c:	20800007 	ldb	r2,0(r4)
10100840:	10002026 	beq	r2,zero,101008c4 <strlen+0x90>
10100844:	2005883a 	mov	r2,r4
10100848:	00000206 	br	10100854 <strlen+0x20>
1010084c:	10c00007 	ldb	r3,0(r2)
10100850:	18001826 	beq	r3,zero,101008b4 <strlen+0x80>
10100854:	10800044 	addi	r2,r2,1
10100858:	10c000cc 	andi	r3,r2,3
1010085c:	183ffb1e 	bne	r3,zero,1010084c <__alt_data_end+0xfffe084c>
10100860:	10c00017 	ldw	r3,0(r2)
10100864:	01ffbff4 	movhi	r7,65279
10100868:	39ffbfc4 	addi	r7,r7,-257
1010086c:	00ca303a 	nor	r5,zero,r3
10100870:	01a02074 	movhi	r6,32897
10100874:	19c7883a 	add	r3,r3,r7
10100878:	31a02004 	addi	r6,r6,-32640
1010087c:	1946703a 	and	r3,r3,r5
10100880:	1986703a 	and	r3,r3,r6
10100884:	1800091e 	bne	r3,zero,101008ac <strlen+0x78>
10100888:	10800104 	addi	r2,r2,4
1010088c:	10c00017 	ldw	r3,0(r2)
10100890:	19cb883a 	add	r5,r3,r7
10100894:	00c6303a 	nor	r3,zero,r3
10100898:	28c6703a 	and	r3,r5,r3
1010089c:	1986703a 	and	r3,r3,r6
101008a0:	183ff926 	beq	r3,zero,10100888 <__alt_data_end+0xfffe0888>
101008a4:	00000106 	br	101008ac <strlen+0x78>
101008a8:	10800044 	addi	r2,r2,1
101008ac:	10c00007 	ldb	r3,0(r2)
101008b0:	183ffd1e 	bne	r3,zero,101008a8 <__alt_data_end+0xfffe08a8>
101008b4:	1105c83a 	sub	r2,r2,r4
101008b8:	f800283a 	ret
101008bc:	2005883a 	mov	r2,r4
101008c0:	003fe706 	br	10100860 <__alt_data_end+0xfffe0860>
101008c4:	0005883a 	mov	r2,zero
101008c8:	f800283a 	ret

101008cc <___vfprintf_internal_r>:
101008cc:	deffb804 	addi	sp,sp,-288
101008d0:	dfc04715 	stw	ra,284(sp)
101008d4:	ddc04515 	stw	r23,276(sp)
101008d8:	dd404315 	stw	r21,268(sp)
101008dc:	d9002c15 	stw	r4,176(sp)
101008e0:	282f883a 	mov	r23,r5
101008e4:	302b883a 	mov	r21,r6
101008e8:	d9c02d15 	stw	r7,180(sp)
101008ec:	df004615 	stw	fp,280(sp)
101008f0:	dd804415 	stw	r22,272(sp)
101008f4:	dd004215 	stw	r20,264(sp)
101008f8:	dcc04115 	stw	r19,260(sp)
101008fc:	dc804015 	stw	r18,256(sp)
10100900:	dc403f15 	stw	r17,252(sp)
10100904:	dc003e15 	stw	r16,248(sp)
10100908:	01056e40 	call	101056e4 <_localeconv_r>
1010090c:	10800017 	ldw	r2,0(r2)
10100910:	1009883a 	mov	r4,r2
10100914:	d8803415 	stw	r2,208(sp)
10100918:	01008340 	call	10100834 <strlen>
1010091c:	d8803715 	stw	r2,220(sp)
10100920:	d8802c17 	ldw	r2,176(sp)
10100924:	10000226 	beq	r2,zero,10100930 <___vfprintf_internal_r+0x64>
10100928:	10800e17 	ldw	r2,56(r2)
1010092c:	1000f926 	beq	r2,zero,10100d14 <___vfprintf_internal_r+0x448>
10100930:	b880030b 	ldhu	r2,12(r23)
10100934:	10c8000c 	andi	r3,r2,8192
10100938:	1800061e 	bne	r3,zero,10100954 <___vfprintf_internal_r+0x88>
1010093c:	b9001917 	ldw	r4,100(r23)
10100940:	00f7ffc4 	movi	r3,-8193
10100944:	10880014 	ori	r2,r2,8192
10100948:	20c6703a 	and	r3,r4,r3
1010094c:	b880030d 	sth	r2,12(r23)
10100950:	b8c01915 	stw	r3,100(r23)
10100954:	10c0020c 	andi	r3,r2,8
10100958:	1800c126 	beq	r3,zero,10100c60 <___vfprintf_internal_r+0x394>
1010095c:	b8c00417 	ldw	r3,16(r23)
10100960:	1800bf26 	beq	r3,zero,10100c60 <___vfprintf_internal_r+0x394>
10100964:	1080068c 	andi	r2,r2,26
10100968:	00c00284 	movi	r3,10
1010096c:	10c0c426 	beq	r2,r3,10100c80 <___vfprintf_internal_r+0x3b4>
10100970:	d8c00404 	addi	r3,sp,16
10100974:	05040474 	movhi	r20,4113
10100978:	d9001e04 	addi	r4,sp,120
1010097c:	a53dc684 	addi	r20,r20,-2278
10100980:	d8c01e15 	stw	r3,120(sp)
10100984:	d8002015 	stw	zero,128(sp)
10100988:	d8001f15 	stw	zero,124(sp)
1010098c:	d8003315 	stw	zero,204(sp)
10100990:	d8003615 	stw	zero,216(sp)
10100994:	d8003815 	stw	zero,224(sp)
10100998:	1811883a 	mov	r8,r3
1010099c:	d8003915 	stw	zero,228(sp)
101009a0:	d8003a15 	stw	zero,232(sp)
101009a4:	d8002f15 	stw	zero,188(sp)
101009a8:	d9002815 	stw	r4,160(sp)
101009ac:	a8800007 	ldb	r2,0(r21)
101009b0:	10027b26 	beq	r2,zero,101013a0 <___vfprintf_internal_r+0xad4>
101009b4:	00c00944 	movi	r3,37
101009b8:	a821883a 	mov	r16,r21
101009bc:	10c0021e 	bne	r2,r3,101009c8 <___vfprintf_internal_r+0xfc>
101009c0:	00001406 	br	10100a14 <___vfprintf_internal_r+0x148>
101009c4:	10c00326 	beq	r2,r3,101009d4 <___vfprintf_internal_r+0x108>
101009c8:	84000044 	addi	r16,r16,1
101009cc:	80800007 	ldb	r2,0(r16)
101009d0:	103ffc1e 	bne	r2,zero,101009c4 <__alt_data_end+0xfffe09c4>
101009d4:	8563c83a 	sub	r17,r16,r21
101009d8:	88000e26 	beq	r17,zero,10100a14 <___vfprintf_internal_r+0x148>
101009dc:	d8c02017 	ldw	r3,128(sp)
101009e0:	d8801f17 	ldw	r2,124(sp)
101009e4:	45400015 	stw	r21,0(r8)
101009e8:	1c47883a 	add	r3,r3,r17
101009ec:	10800044 	addi	r2,r2,1
101009f0:	d8c02015 	stw	r3,128(sp)
101009f4:	44400115 	stw	r17,4(r8)
101009f8:	d8801f15 	stw	r2,124(sp)
101009fc:	00c001c4 	movi	r3,7
10100a00:	1880a716 	blt	r3,r2,10100ca0 <___vfprintf_internal_r+0x3d4>
10100a04:	42000204 	addi	r8,r8,8
10100a08:	d9402f17 	ldw	r5,188(sp)
10100a0c:	2c4b883a 	add	r5,r5,r17
10100a10:	d9402f15 	stw	r5,188(sp)
10100a14:	80800007 	ldb	r2,0(r16)
10100a18:	1000a826 	beq	r2,zero,10100cbc <___vfprintf_internal_r+0x3f0>
10100a1c:	84400047 	ldb	r17,1(r16)
10100a20:	00bfffc4 	movi	r2,-1
10100a24:	85400044 	addi	r21,r16,1
10100a28:	d8002785 	stb	zero,158(sp)
10100a2c:	0007883a 	mov	r3,zero
10100a30:	000f883a 	mov	r7,zero
10100a34:	d8802915 	stw	r2,164(sp)
10100a38:	d8003115 	stw	zero,196(sp)
10100a3c:	0025883a 	mov	r18,zero
10100a40:	01401604 	movi	r5,88
10100a44:	01800244 	movi	r6,9
10100a48:	02800a84 	movi	r10,42
10100a4c:	02401b04 	movi	r9,108
10100a50:	ad400044 	addi	r21,r21,1
10100a54:	88bff804 	addi	r2,r17,-32
10100a58:	28830436 	bltu	r5,r2,1010166c <___vfprintf_internal_r+0xda0>
10100a5c:	100490ba 	slli	r2,r2,2
10100a60:	01040434 	movhi	r4,4112
10100a64:	21029d04 	addi	r4,r4,2676
10100a68:	1105883a 	add	r2,r2,r4
10100a6c:	10800017 	ldw	r2,0(r2)
10100a70:	1000683a 	jmp	r2
10100a74:	1010158c 	andi	zero,r2,16470
10100a78:	1010166c 	andhi	zero,r2,16473
10100a7c:	1010166c 	andhi	zero,r2,16473
10100a80:	101015ac 	andhi	zero,r2,16470
10100a84:	1010166c 	andhi	zero,r2,16473
10100a88:	1010166c 	andhi	zero,r2,16473
10100a8c:	1010166c 	andhi	zero,r2,16473
10100a90:	1010166c 	andhi	zero,r2,16473
10100a94:	1010166c 	andhi	zero,r2,16473
10100a98:	1010166c 	andhi	zero,r2,16473
10100a9c:	10100d20 	cmpeqi	zero,r2,16436
10100aa0:	101014c8 	cmpgei	zero,r2,16467
10100aa4:	1010166c 	andhi	zero,r2,16473
10100aa8:	10100be8 	cmpgeui	zero,r2,16431
10100aac:	10100d48 	cmpgei	zero,r2,16437
10100ab0:	1010166c 	andhi	zero,r2,16473
10100ab4:	10100d88 	cmpgei	zero,r2,16438
10100ab8:	10100d94 	ori	zero,r2,16438
10100abc:	10100d94 	ori	zero,r2,16438
10100ac0:	10100d94 	ori	zero,r2,16438
10100ac4:	10100d94 	ori	zero,r2,16438
10100ac8:	10100d94 	ori	zero,r2,16438
10100acc:	10100d94 	ori	zero,r2,16438
10100ad0:	10100d94 	ori	zero,r2,16438
10100ad4:	10100d94 	ori	zero,r2,16438
10100ad8:	10100d94 	ori	zero,r2,16438
10100adc:	1010166c 	andhi	zero,r2,16473
10100ae0:	1010166c 	andhi	zero,r2,16473
10100ae4:	1010166c 	andhi	zero,r2,16473
10100ae8:	1010166c 	andhi	zero,r2,16473
10100aec:	1010166c 	andhi	zero,r2,16473
10100af0:	1010166c 	andhi	zero,r2,16473
10100af4:	1010166c 	andhi	zero,r2,16473
10100af8:	1010166c 	andhi	zero,r2,16473
10100afc:	1010166c 	andhi	zero,r2,16473
10100b00:	1010166c 	andhi	zero,r2,16473
10100b04:	10100dc8 	cmpgei	zero,r2,16439
10100b08:	10100e84 	addi	zero,r2,16442
10100b0c:	1010166c 	andhi	zero,r2,16473
10100b10:	10100e84 	addi	zero,r2,16442
10100b14:	1010166c 	andhi	zero,r2,16473
10100b18:	1010166c 	andhi	zero,r2,16473
10100b1c:	1010166c 	andhi	zero,r2,16473
10100b20:	1010166c 	andhi	zero,r2,16473
10100b24:	10100f24 	muli	zero,r2,16444
10100b28:	1010166c 	andhi	zero,r2,16473
10100b2c:	1010166c 	andhi	zero,r2,16473
10100b30:	10100f30 	cmpltui	zero,r2,16444
10100b34:	1010166c 	andhi	zero,r2,16473
10100b38:	1010166c 	andhi	zero,r2,16473
10100b3c:	1010166c 	andhi	zero,r2,16473
10100b40:	1010166c 	andhi	zero,r2,16473
10100b44:	1010166c 	andhi	zero,r2,16473
10100b48:	101013a8 	cmpgeui	zero,r2,16462
10100b4c:	1010166c 	andhi	zero,r2,16473
10100b50:	1010166c 	andhi	zero,r2,16473
10100b54:	10101408 	cmpgei	zero,r2,16464
10100b58:	1010166c 	andhi	zero,r2,16473
10100b5c:	1010166c 	andhi	zero,r2,16473
10100b60:	1010166c 	andhi	zero,r2,16473
10100b64:	1010166c 	andhi	zero,r2,16473
10100b68:	1010166c 	andhi	zero,r2,16473
10100b6c:	1010166c 	andhi	zero,r2,16473
10100b70:	1010166c 	andhi	zero,r2,16473
10100b74:	1010166c 	andhi	zero,r2,16473
10100b78:	1010166c 	andhi	zero,r2,16473
10100b7c:	1010166c 	andhi	zero,r2,16473
10100b80:	10101618 	cmpnei	zero,r2,16472
10100b84:	101015b8 	rdprs	zero,r2,16470
10100b88:	10100e84 	addi	zero,r2,16442
10100b8c:	10100e84 	addi	zero,r2,16442
10100b90:	10100e84 	addi	zero,r2,16442
10100b94:	101015c8 	cmpgei	zero,r2,16471
10100b98:	101015b8 	rdprs	zero,r2,16470
10100b9c:	1010166c 	andhi	zero,r2,16473
10100ba0:	1010166c 	andhi	zero,r2,16473
10100ba4:	101015d4 	ori	zero,r2,16471
10100ba8:	1010166c 	andhi	zero,r2,16473
10100bac:	101015e4 	muli	zero,r2,16471
10100bb0:	101014b8 	rdprs	zero,r2,16466
10100bb4:	10100bf4 	orhi	zero,r2,16431
10100bb8:	101014d8 	cmpnei	zero,r2,16467
10100bbc:	1010166c 	andhi	zero,r2,16473
10100bc0:	101014e4 	muli	zero,r2,16467
10100bc4:	1010166c 	andhi	zero,r2,16473
10100bc8:	10101540 	call	11010154 <__alt_data_end+0xef0154>
10100bcc:	1010166c 	andhi	zero,r2,16473
10100bd0:	1010166c 	andhi	zero,r2,16473
10100bd4:	10101550 	cmplti	zero,r2,16469
10100bd8:	d9003117 	ldw	r4,196(sp)
10100bdc:	d8802d15 	stw	r2,180(sp)
10100be0:	0109c83a 	sub	r4,zero,r4
10100be4:	d9003115 	stw	r4,196(sp)
10100be8:	94800114 	ori	r18,r18,4
10100bec:	ac400007 	ldb	r17,0(r21)
10100bf0:	003f9706 	br	10100a50 <__alt_data_end+0xfffe0a50>
10100bf4:	00800c04 	movi	r2,48
10100bf8:	d9002d17 	ldw	r4,180(sp)
10100bfc:	d9402917 	ldw	r5,164(sp)
10100c00:	d8802705 	stb	r2,156(sp)
10100c04:	00801e04 	movi	r2,120
10100c08:	d8802745 	stb	r2,157(sp)
10100c0c:	d8002785 	stb	zero,158(sp)
10100c10:	20c00104 	addi	r3,r4,4
10100c14:	24c00017 	ldw	r19,0(r4)
10100c18:	002d883a 	mov	r22,zero
10100c1c:	90800094 	ori	r2,r18,2
10100c20:	28029a16 	blt	r5,zero,1010168c <___vfprintf_internal_r+0xdc0>
10100c24:	00bfdfc4 	movi	r2,-129
10100c28:	90a4703a 	and	r18,r18,r2
10100c2c:	d8c02d15 	stw	r3,180(sp)
10100c30:	94800094 	ori	r18,r18,2
10100c34:	9802871e 	bne	r19,zero,10101654 <___vfprintf_internal_r+0xd88>
10100c38:	00840474 	movhi	r2,4113
10100c3c:	10bdbf04 	addi	r2,r2,-2308
10100c40:	d8803915 	stw	r2,228(sp)
10100c44:	04401e04 	movi	r17,120
10100c48:	d8802917 	ldw	r2,164(sp)
10100c4c:	0039883a 	mov	fp,zero
10100c50:	1001e926 	beq	r2,zero,101013f8 <___vfprintf_internal_r+0xb2c>
10100c54:	0027883a 	mov	r19,zero
10100c58:	002d883a 	mov	r22,zero
10100c5c:	00020506 	br	10101474 <___vfprintf_internal_r+0xba8>
10100c60:	d9002c17 	ldw	r4,176(sp)
10100c64:	b80b883a 	mov	r5,r23
10100c68:	0102b9c0 	call	10102b9c <__swsetup_r>
10100c6c:	1005ac1e 	bne	r2,zero,10102320 <___vfprintf_internal_r+0x1a54>
10100c70:	b880030b 	ldhu	r2,12(r23)
10100c74:	00c00284 	movi	r3,10
10100c78:	1080068c 	andi	r2,r2,26
10100c7c:	10ff3c1e 	bne	r2,r3,10100970 <__alt_data_end+0xfffe0970>
10100c80:	b880038f 	ldh	r2,14(r23)
10100c84:	103f3a16 	blt	r2,zero,10100970 <__alt_data_end+0xfffe0970>
10100c88:	d9c02d17 	ldw	r7,180(sp)
10100c8c:	d9002c17 	ldw	r4,176(sp)
10100c90:	a80d883a 	mov	r6,r21
10100c94:	b80b883a 	mov	r5,r23
10100c98:	0102ae00 	call	10102ae0 <__sbprintf>
10100c9c:	00001106 	br	10100ce4 <___vfprintf_internal_r+0x418>
10100ca0:	d9002c17 	ldw	r4,176(sp)
10100ca4:	d9801e04 	addi	r6,sp,120
10100ca8:	b80b883a 	mov	r5,r23
10100cac:	0107ec80 	call	10107ec8 <__sprint_r>
10100cb0:	1000081e 	bne	r2,zero,10100cd4 <___vfprintf_internal_r+0x408>
10100cb4:	da000404 	addi	r8,sp,16
10100cb8:	003f5306 	br	10100a08 <__alt_data_end+0xfffe0a08>
10100cbc:	d8802017 	ldw	r2,128(sp)
10100cc0:	10000426 	beq	r2,zero,10100cd4 <___vfprintf_internal_r+0x408>
10100cc4:	d9002c17 	ldw	r4,176(sp)
10100cc8:	d9801e04 	addi	r6,sp,120
10100ccc:	b80b883a 	mov	r5,r23
10100cd0:	0107ec80 	call	10107ec8 <__sprint_r>
10100cd4:	b880030b 	ldhu	r2,12(r23)
10100cd8:	1080100c 	andi	r2,r2,64
10100cdc:	1005901e 	bne	r2,zero,10102320 <___vfprintf_internal_r+0x1a54>
10100ce0:	d8802f17 	ldw	r2,188(sp)
10100ce4:	dfc04717 	ldw	ra,284(sp)
10100ce8:	df004617 	ldw	fp,280(sp)
10100cec:	ddc04517 	ldw	r23,276(sp)
10100cf0:	dd804417 	ldw	r22,272(sp)
10100cf4:	dd404317 	ldw	r21,268(sp)
10100cf8:	dd004217 	ldw	r20,264(sp)
10100cfc:	dcc04117 	ldw	r19,260(sp)
10100d00:	dc804017 	ldw	r18,256(sp)
10100d04:	dc403f17 	ldw	r17,252(sp)
10100d08:	dc003e17 	ldw	r16,248(sp)
10100d0c:	dec04804 	addi	sp,sp,288
10100d10:	f800283a 	ret
10100d14:	d9002c17 	ldw	r4,176(sp)
10100d18:	0104b700 	call	10104b70 <__sinit>
10100d1c:	003f0406 	br	10100930 <__alt_data_end+0xfffe0930>
10100d20:	d8802d17 	ldw	r2,180(sp)
10100d24:	d9002d17 	ldw	r4,180(sp)
10100d28:	10800017 	ldw	r2,0(r2)
10100d2c:	d8803115 	stw	r2,196(sp)
10100d30:	20800104 	addi	r2,r4,4
10100d34:	d9003117 	ldw	r4,196(sp)
10100d38:	203fa716 	blt	r4,zero,10100bd8 <__alt_data_end+0xfffe0bd8>
10100d3c:	d8802d15 	stw	r2,180(sp)
10100d40:	ac400007 	ldb	r17,0(r21)
10100d44:	003f4206 	br	10100a50 <__alt_data_end+0xfffe0a50>
10100d48:	ac400007 	ldb	r17,0(r21)
10100d4c:	aac00044 	addi	r11,r21,1
10100d50:	8a872826 	beq	r17,r10,101029f4 <___vfprintf_internal_r+0x2128>
10100d54:	88bff404 	addi	r2,r17,-48
10100d58:	0009883a 	mov	r4,zero
10100d5c:	30867d36 	bltu	r6,r2,10102754 <___vfprintf_internal_r+0x1e88>
10100d60:	5c400007 	ldb	r17,0(r11)
10100d64:	210002a4 	muli	r4,r4,10
10100d68:	5d400044 	addi	r21,r11,1
10100d6c:	a817883a 	mov	r11,r21
10100d70:	2089883a 	add	r4,r4,r2
10100d74:	88bff404 	addi	r2,r17,-48
10100d78:	30bff92e 	bgeu	r6,r2,10100d60 <__alt_data_end+0xfffe0d60>
10100d7c:	2005c916 	blt	r4,zero,101024a4 <___vfprintf_internal_r+0x1bd8>
10100d80:	d9002915 	stw	r4,164(sp)
10100d84:	003f3306 	br	10100a54 <__alt_data_end+0xfffe0a54>
10100d88:	94802014 	ori	r18,r18,128
10100d8c:	ac400007 	ldb	r17,0(r21)
10100d90:	003f2f06 	br	10100a50 <__alt_data_end+0xfffe0a50>
10100d94:	a809883a 	mov	r4,r21
10100d98:	d8003115 	stw	zero,196(sp)
10100d9c:	88bff404 	addi	r2,r17,-48
10100da0:	0017883a 	mov	r11,zero
10100da4:	24400007 	ldb	r17,0(r4)
10100da8:	5ac002a4 	muli	r11,r11,10
10100dac:	ad400044 	addi	r21,r21,1
10100db0:	a809883a 	mov	r4,r21
10100db4:	12d7883a 	add	r11,r2,r11
10100db8:	88bff404 	addi	r2,r17,-48
10100dbc:	30bff92e 	bgeu	r6,r2,10100da4 <__alt_data_end+0xfffe0da4>
10100dc0:	dac03115 	stw	r11,196(sp)
10100dc4:	003f2306 	br	10100a54 <__alt_data_end+0xfffe0a54>
10100dc8:	18c03fcc 	andi	r3,r3,255
10100dcc:	18072b1e 	bne	r3,zero,10102a7c <___vfprintf_internal_r+0x21b0>
10100dd0:	94800414 	ori	r18,r18,16
10100dd4:	9080080c 	andi	r2,r18,32
10100dd8:	10037b26 	beq	r2,zero,10101bc8 <___vfprintf_internal_r+0x12fc>
10100ddc:	d9402d17 	ldw	r5,180(sp)
10100de0:	28800117 	ldw	r2,4(r5)
10100de4:	2cc00017 	ldw	r19,0(r5)
10100de8:	29400204 	addi	r5,r5,8
10100dec:	d9402d15 	stw	r5,180(sp)
10100df0:	102d883a 	mov	r22,r2
10100df4:	10044b16 	blt	r2,zero,10101f24 <___vfprintf_internal_r+0x1658>
10100df8:	d9402917 	ldw	r5,164(sp)
10100dfc:	df002783 	ldbu	fp,158(sp)
10100e00:	2803bc16 	blt	r5,zero,10101cf4 <___vfprintf_internal_r+0x1428>
10100e04:	00ffdfc4 	movi	r3,-129
10100e08:	9d84b03a 	or	r2,r19,r22
10100e0c:	90e4703a 	and	r18,r18,r3
10100e10:	10017726 	beq	r2,zero,101013f0 <___vfprintf_internal_r+0xb24>
10100e14:	b0038326 	beq	r22,zero,10101c24 <___vfprintf_internal_r+0x1358>
10100e18:	dc402a15 	stw	r17,168(sp)
10100e1c:	dc001e04 	addi	r16,sp,120
10100e20:	b023883a 	mov	r17,r22
10100e24:	402d883a 	mov	r22,r8
10100e28:	9809883a 	mov	r4,r19
10100e2c:	880b883a 	mov	r5,r17
10100e30:	01800284 	movi	r6,10
10100e34:	000f883a 	mov	r7,zero
10100e38:	010a2c00 	call	1010a2c0 <__umoddi3>
10100e3c:	10800c04 	addi	r2,r2,48
10100e40:	843fffc4 	addi	r16,r16,-1
10100e44:	9809883a 	mov	r4,r19
10100e48:	880b883a 	mov	r5,r17
10100e4c:	80800005 	stb	r2,0(r16)
10100e50:	01800284 	movi	r6,10
10100e54:	000f883a 	mov	r7,zero
10100e58:	0109d480 	call	10109d48 <__udivdi3>
10100e5c:	1027883a 	mov	r19,r2
10100e60:	10c4b03a 	or	r2,r2,r3
10100e64:	1823883a 	mov	r17,r3
10100e68:	103fef1e 	bne	r2,zero,10100e28 <__alt_data_end+0xfffe0e28>
10100e6c:	d8c02817 	ldw	r3,160(sp)
10100e70:	dc402a17 	ldw	r17,168(sp)
10100e74:	b011883a 	mov	r8,r22
10100e78:	1c07c83a 	sub	r3,r3,r16
10100e7c:	d8c02e15 	stw	r3,184(sp)
10100e80:	00005906 	br	10100fe8 <___vfprintf_internal_r+0x71c>
10100e84:	18c03fcc 	andi	r3,r3,255
10100e88:	1806fa1e 	bne	r3,zero,10102a74 <___vfprintf_internal_r+0x21a8>
10100e8c:	9080020c 	andi	r2,r18,8
10100e90:	10048a26 	beq	r2,zero,101020bc <___vfprintf_internal_r+0x17f0>
10100e94:	d8c02d17 	ldw	r3,180(sp)
10100e98:	d9002d17 	ldw	r4,180(sp)
10100e9c:	d9402d17 	ldw	r5,180(sp)
10100ea0:	18c00017 	ldw	r3,0(r3)
10100ea4:	21000117 	ldw	r4,4(r4)
10100ea8:	29400204 	addi	r5,r5,8
10100eac:	d8c03615 	stw	r3,216(sp)
10100eb0:	d9003815 	stw	r4,224(sp)
10100eb4:	d9402d15 	stw	r5,180(sp)
10100eb8:	d9003617 	ldw	r4,216(sp)
10100ebc:	d9403817 	ldw	r5,224(sp)
10100ec0:	da003d15 	stw	r8,244(sp)
10100ec4:	04000044 	movi	r16,1
10100ec8:	0107aec0 	call	10107aec <__fpclassifyd>
10100ecc:	da003d17 	ldw	r8,244(sp)
10100ed0:	14041f1e 	bne	r2,r16,10101f50 <___vfprintf_internal_r+0x1684>
10100ed4:	d9003617 	ldw	r4,216(sp)
10100ed8:	d9403817 	ldw	r5,224(sp)
10100edc:	000d883a 	mov	r6,zero
10100ee0:	000f883a 	mov	r7,zero
10100ee4:	010bca40 	call	1010bca4 <__ledf2>
10100ee8:	da003d17 	ldw	r8,244(sp)
10100eec:	1005be16 	blt	r2,zero,101025e8 <___vfprintf_internal_r+0x1d1c>
10100ef0:	df002783 	ldbu	fp,158(sp)
10100ef4:	008011c4 	movi	r2,71
10100ef8:	1445330e 	bge	r2,r17,101023c8 <___vfprintf_internal_r+0x1afc>
10100efc:	04040474 	movhi	r16,4113
10100f00:	843db704 	addi	r16,r16,-2340
10100f04:	00c000c4 	movi	r3,3
10100f08:	00bfdfc4 	movi	r2,-129
10100f0c:	d8c02a15 	stw	r3,168(sp)
10100f10:	90a4703a 	and	r18,r18,r2
10100f14:	d8c02e15 	stw	r3,184(sp)
10100f18:	d8002915 	stw	zero,164(sp)
10100f1c:	d8003215 	stw	zero,200(sp)
10100f20:	00003706 	br	10101000 <___vfprintf_internal_r+0x734>
10100f24:	94800214 	ori	r18,r18,8
10100f28:	ac400007 	ldb	r17,0(r21)
10100f2c:	003ec806 	br	10100a50 <__alt_data_end+0xfffe0a50>
10100f30:	18c03fcc 	andi	r3,r3,255
10100f34:	1806db1e 	bne	r3,zero,10102aa4 <___vfprintf_internal_r+0x21d8>
10100f38:	94800414 	ori	r18,r18,16
10100f3c:	9080080c 	andi	r2,r18,32
10100f40:	1002d826 	beq	r2,zero,10101aa4 <___vfprintf_internal_r+0x11d8>
10100f44:	d9402d17 	ldw	r5,180(sp)
10100f48:	d8c02917 	ldw	r3,164(sp)
10100f4c:	d8002785 	stb	zero,158(sp)
10100f50:	28800204 	addi	r2,r5,8
10100f54:	2cc00017 	ldw	r19,0(r5)
10100f58:	2d800117 	ldw	r22,4(r5)
10100f5c:	18048f16 	blt	r3,zero,1010219c <___vfprintf_internal_r+0x18d0>
10100f60:	013fdfc4 	movi	r4,-129
10100f64:	9d86b03a 	or	r3,r19,r22
10100f68:	d8802d15 	stw	r2,180(sp)
10100f6c:	9124703a 	and	r18,r18,r4
10100f70:	1802d91e 	bne	r3,zero,10101ad8 <___vfprintf_internal_r+0x120c>
10100f74:	d8c02917 	ldw	r3,164(sp)
10100f78:	0039883a 	mov	fp,zero
10100f7c:	1805c326 	beq	r3,zero,1010268c <___vfprintf_internal_r+0x1dc0>
10100f80:	0027883a 	mov	r19,zero
10100f84:	002d883a 	mov	r22,zero
10100f88:	dc001e04 	addi	r16,sp,120
10100f8c:	9806d0fa 	srli	r3,r19,3
10100f90:	b008977a 	slli	r4,r22,29
10100f94:	b02cd0fa 	srli	r22,r22,3
10100f98:	9cc001cc 	andi	r19,r19,7
10100f9c:	98800c04 	addi	r2,r19,48
10100fa0:	843fffc4 	addi	r16,r16,-1
10100fa4:	20e6b03a 	or	r19,r4,r3
10100fa8:	80800005 	stb	r2,0(r16)
10100fac:	9d86b03a 	or	r3,r19,r22
10100fb0:	183ff61e 	bne	r3,zero,10100f8c <__alt_data_end+0xfffe0f8c>
10100fb4:	90c0004c 	andi	r3,r18,1
10100fb8:	18013b26 	beq	r3,zero,101014a8 <___vfprintf_internal_r+0xbdc>
10100fbc:	10803fcc 	andi	r2,r2,255
10100fc0:	1080201c 	xori	r2,r2,128
10100fc4:	10bfe004 	addi	r2,r2,-128
10100fc8:	00c00c04 	movi	r3,48
10100fcc:	10c13626 	beq	r2,r3,101014a8 <___vfprintf_internal_r+0xbdc>
10100fd0:	80ffffc5 	stb	r3,-1(r16)
10100fd4:	d8c02817 	ldw	r3,160(sp)
10100fd8:	80bfffc4 	addi	r2,r16,-1
10100fdc:	1021883a 	mov	r16,r2
10100fe0:	1887c83a 	sub	r3,r3,r2
10100fe4:	d8c02e15 	stw	r3,184(sp)
10100fe8:	d8802e17 	ldw	r2,184(sp)
10100fec:	d9002917 	ldw	r4,164(sp)
10100ff0:	1100010e 	bge	r2,r4,10100ff8 <___vfprintf_internal_r+0x72c>
10100ff4:	2005883a 	mov	r2,r4
10100ff8:	d8802a15 	stw	r2,168(sp)
10100ffc:	d8003215 	stw	zero,200(sp)
10101000:	e7003fcc 	andi	fp,fp,255
10101004:	e700201c 	xori	fp,fp,128
10101008:	e73fe004 	addi	fp,fp,-128
1010100c:	e0000326 	beq	fp,zero,1010101c <___vfprintf_internal_r+0x750>
10101010:	d8c02a17 	ldw	r3,168(sp)
10101014:	18c00044 	addi	r3,r3,1
10101018:	d8c02a15 	stw	r3,168(sp)
1010101c:	90c0008c 	andi	r3,r18,2
10101020:	d8c02b15 	stw	r3,172(sp)
10101024:	18000326 	beq	r3,zero,10101034 <___vfprintf_internal_r+0x768>
10101028:	d8c02a17 	ldw	r3,168(sp)
1010102c:	18c00084 	addi	r3,r3,2
10101030:	d8c02a15 	stw	r3,168(sp)
10101034:	90c0210c 	andi	r3,r18,132
10101038:	d8c03015 	stw	r3,192(sp)
1010103c:	1801a31e 	bne	r3,zero,101016cc <___vfprintf_internal_r+0xe00>
10101040:	d9003117 	ldw	r4,196(sp)
10101044:	d8c02a17 	ldw	r3,168(sp)
10101048:	20e7c83a 	sub	r19,r4,r3
1010104c:	04c19f0e 	bge	zero,r19,101016cc <___vfprintf_internal_r+0xe00>
10101050:	02400404 	movi	r9,16
10101054:	d8c02017 	ldw	r3,128(sp)
10101058:	d8801f17 	ldw	r2,124(sp)
1010105c:	4cc50d0e 	bge	r9,r19,10102494 <___vfprintf_internal_r+0x1bc8>
10101060:	01440474 	movhi	r5,4113
10101064:	297dca84 	addi	r5,r5,-2262
10101068:	dc403b15 	stw	r17,236(sp)
1010106c:	d9403515 	stw	r5,212(sp)
10101070:	9823883a 	mov	r17,r19
10101074:	482d883a 	mov	r22,r9
10101078:	9027883a 	mov	r19,r18
1010107c:	070001c4 	movi	fp,7
10101080:	8025883a 	mov	r18,r16
10101084:	dc002c17 	ldw	r16,176(sp)
10101088:	00000306 	br	10101098 <___vfprintf_internal_r+0x7cc>
1010108c:	8c7ffc04 	addi	r17,r17,-16
10101090:	42000204 	addi	r8,r8,8
10101094:	b440130e 	bge	r22,r17,101010e4 <___vfprintf_internal_r+0x818>
10101098:	01040474 	movhi	r4,4113
1010109c:	18c00404 	addi	r3,r3,16
101010a0:	10800044 	addi	r2,r2,1
101010a4:	213dca84 	addi	r4,r4,-2262
101010a8:	41000015 	stw	r4,0(r8)
101010ac:	45800115 	stw	r22,4(r8)
101010b0:	d8c02015 	stw	r3,128(sp)
101010b4:	d8801f15 	stw	r2,124(sp)
101010b8:	e0bff40e 	bge	fp,r2,1010108c <__alt_data_end+0xfffe108c>
101010bc:	d9801e04 	addi	r6,sp,120
101010c0:	b80b883a 	mov	r5,r23
101010c4:	8009883a 	mov	r4,r16
101010c8:	0107ec80 	call	10107ec8 <__sprint_r>
101010cc:	103f011e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
101010d0:	8c7ffc04 	addi	r17,r17,-16
101010d4:	d8c02017 	ldw	r3,128(sp)
101010d8:	d8801f17 	ldw	r2,124(sp)
101010dc:	da000404 	addi	r8,sp,16
101010e0:	b47fed16 	blt	r22,r17,10101098 <__alt_data_end+0xfffe1098>
101010e4:	9021883a 	mov	r16,r18
101010e8:	9825883a 	mov	r18,r19
101010ec:	8827883a 	mov	r19,r17
101010f0:	dc403b17 	ldw	r17,236(sp)
101010f4:	d9403517 	ldw	r5,212(sp)
101010f8:	98c7883a 	add	r3,r19,r3
101010fc:	10800044 	addi	r2,r2,1
10101100:	41400015 	stw	r5,0(r8)
10101104:	44c00115 	stw	r19,4(r8)
10101108:	d8c02015 	stw	r3,128(sp)
1010110c:	d8801f15 	stw	r2,124(sp)
10101110:	010001c4 	movi	r4,7
10101114:	2082a316 	blt	r4,r2,10101ba4 <___vfprintf_internal_r+0x12d8>
10101118:	df002787 	ldb	fp,158(sp)
1010111c:	42000204 	addi	r8,r8,8
10101120:	e0000c26 	beq	fp,zero,10101154 <___vfprintf_internal_r+0x888>
10101124:	d8801f17 	ldw	r2,124(sp)
10101128:	d9002784 	addi	r4,sp,158
1010112c:	18c00044 	addi	r3,r3,1
10101130:	10800044 	addi	r2,r2,1
10101134:	41000015 	stw	r4,0(r8)
10101138:	01000044 	movi	r4,1
1010113c:	41000115 	stw	r4,4(r8)
10101140:	d8c02015 	stw	r3,128(sp)
10101144:	d8801f15 	stw	r2,124(sp)
10101148:	010001c4 	movi	r4,7
1010114c:	20823c16 	blt	r4,r2,10101a40 <___vfprintf_internal_r+0x1174>
10101150:	42000204 	addi	r8,r8,8
10101154:	d8802b17 	ldw	r2,172(sp)
10101158:	10000c26 	beq	r2,zero,1010118c <___vfprintf_internal_r+0x8c0>
1010115c:	d8801f17 	ldw	r2,124(sp)
10101160:	d9002704 	addi	r4,sp,156
10101164:	18c00084 	addi	r3,r3,2
10101168:	10800044 	addi	r2,r2,1
1010116c:	41000015 	stw	r4,0(r8)
10101170:	01000084 	movi	r4,2
10101174:	41000115 	stw	r4,4(r8)
10101178:	d8c02015 	stw	r3,128(sp)
1010117c:	d8801f15 	stw	r2,124(sp)
10101180:	010001c4 	movi	r4,7
10101184:	20823616 	blt	r4,r2,10101a60 <___vfprintf_internal_r+0x1194>
10101188:	42000204 	addi	r8,r8,8
1010118c:	d9003017 	ldw	r4,192(sp)
10101190:	00802004 	movi	r2,128
10101194:	20819926 	beq	r4,r2,101017fc <___vfprintf_internal_r+0xf30>
10101198:	d9402917 	ldw	r5,164(sp)
1010119c:	d8802e17 	ldw	r2,184(sp)
101011a0:	28adc83a 	sub	r22,r5,r2
101011a4:	0580310e 	bge	zero,r22,1010126c <___vfprintf_internal_r+0x9a0>
101011a8:	07000404 	movi	fp,16
101011ac:	d8801f17 	ldw	r2,124(sp)
101011b0:	e584140e 	bge	fp,r22,10102204 <___vfprintf_internal_r+0x1938>
101011b4:	01440474 	movhi	r5,4113
101011b8:	297dc684 	addi	r5,r5,-2278
101011bc:	dc402915 	stw	r17,164(sp)
101011c0:	d9402b15 	stw	r5,172(sp)
101011c4:	b023883a 	mov	r17,r22
101011c8:	04c001c4 	movi	r19,7
101011cc:	a82d883a 	mov	r22,r21
101011d0:	902b883a 	mov	r21,r18
101011d4:	8025883a 	mov	r18,r16
101011d8:	dc002c17 	ldw	r16,176(sp)
101011dc:	00000306 	br	101011ec <___vfprintf_internal_r+0x920>
101011e0:	8c7ffc04 	addi	r17,r17,-16
101011e4:	42000204 	addi	r8,r8,8
101011e8:	e440110e 	bge	fp,r17,10101230 <___vfprintf_internal_r+0x964>
101011ec:	18c00404 	addi	r3,r3,16
101011f0:	10800044 	addi	r2,r2,1
101011f4:	45000015 	stw	r20,0(r8)
101011f8:	47000115 	stw	fp,4(r8)
101011fc:	d8c02015 	stw	r3,128(sp)
10101200:	d8801f15 	stw	r2,124(sp)
10101204:	98bff60e 	bge	r19,r2,101011e0 <__alt_data_end+0xfffe11e0>
10101208:	d9801e04 	addi	r6,sp,120
1010120c:	b80b883a 	mov	r5,r23
10101210:	8009883a 	mov	r4,r16
10101214:	0107ec80 	call	10107ec8 <__sprint_r>
10101218:	103eae1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
1010121c:	8c7ffc04 	addi	r17,r17,-16
10101220:	d8c02017 	ldw	r3,128(sp)
10101224:	d8801f17 	ldw	r2,124(sp)
10101228:	da000404 	addi	r8,sp,16
1010122c:	e47fef16 	blt	fp,r17,101011ec <__alt_data_end+0xfffe11ec>
10101230:	9021883a 	mov	r16,r18
10101234:	a825883a 	mov	r18,r21
10101238:	b02b883a 	mov	r21,r22
1010123c:	882d883a 	mov	r22,r17
10101240:	dc402917 	ldw	r17,164(sp)
10101244:	d9002b17 	ldw	r4,172(sp)
10101248:	1d87883a 	add	r3,r3,r22
1010124c:	10800044 	addi	r2,r2,1
10101250:	41000015 	stw	r4,0(r8)
10101254:	45800115 	stw	r22,4(r8)
10101258:	d8c02015 	stw	r3,128(sp)
1010125c:	d8801f15 	stw	r2,124(sp)
10101260:	010001c4 	movi	r4,7
10101264:	2081ee16 	blt	r4,r2,10101a20 <___vfprintf_internal_r+0x1154>
10101268:	42000204 	addi	r8,r8,8
1010126c:	9080400c 	andi	r2,r18,256
10101270:	1001181e 	bne	r2,zero,101016d4 <___vfprintf_internal_r+0xe08>
10101274:	d9402e17 	ldw	r5,184(sp)
10101278:	d8801f17 	ldw	r2,124(sp)
1010127c:	44000015 	stw	r16,0(r8)
10101280:	1947883a 	add	r3,r3,r5
10101284:	10800044 	addi	r2,r2,1
10101288:	41400115 	stw	r5,4(r8)
1010128c:	d8c02015 	stw	r3,128(sp)
10101290:	d8801f15 	stw	r2,124(sp)
10101294:	010001c4 	movi	r4,7
10101298:	2081d316 	blt	r4,r2,101019e8 <___vfprintf_internal_r+0x111c>
1010129c:	42000204 	addi	r8,r8,8
101012a0:	9480010c 	andi	r18,r18,4
101012a4:	90003226 	beq	r18,zero,10101370 <___vfprintf_internal_r+0xaa4>
101012a8:	d9403117 	ldw	r5,196(sp)
101012ac:	d8802a17 	ldw	r2,168(sp)
101012b0:	28a1c83a 	sub	r16,r5,r2
101012b4:	04002e0e 	bge	zero,r16,10101370 <___vfprintf_internal_r+0xaa4>
101012b8:	04400404 	movi	r17,16
101012bc:	d8801f17 	ldw	r2,124(sp)
101012c0:	8c04a20e 	bge	r17,r16,1010254c <___vfprintf_internal_r+0x1c80>
101012c4:	01440474 	movhi	r5,4113
101012c8:	297dca84 	addi	r5,r5,-2262
101012cc:	d9403515 	stw	r5,212(sp)
101012d0:	048001c4 	movi	r18,7
101012d4:	dcc02c17 	ldw	r19,176(sp)
101012d8:	00000306 	br	101012e8 <___vfprintf_internal_r+0xa1c>
101012dc:	843ffc04 	addi	r16,r16,-16
101012e0:	42000204 	addi	r8,r8,8
101012e4:	8c00130e 	bge	r17,r16,10101334 <___vfprintf_internal_r+0xa68>
101012e8:	01040474 	movhi	r4,4113
101012ec:	18c00404 	addi	r3,r3,16
101012f0:	10800044 	addi	r2,r2,1
101012f4:	213dca84 	addi	r4,r4,-2262
101012f8:	41000015 	stw	r4,0(r8)
101012fc:	44400115 	stw	r17,4(r8)
10101300:	d8c02015 	stw	r3,128(sp)
10101304:	d8801f15 	stw	r2,124(sp)
10101308:	90bff40e 	bge	r18,r2,101012dc <__alt_data_end+0xfffe12dc>
1010130c:	d9801e04 	addi	r6,sp,120
10101310:	b80b883a 	mov	r5,r23
10101314:	9809883a 	mov	r4,r19
10101318:	0107ec80 	call	10107ec8 <__sprint_r>
1010131c:	103e6d1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101320:	843ffc04 	addi	r16,r16,-16
10101324:	d8c02017 	ldw	r3,128(sp)
10101328:	d8801f17 	ldw	r2,124(sp)
1010132c:	da000404 	addi	r8,sp,16
10101330:	8c3fed16 	blt	r17,r16,101012e8 <__alt_data_end+0xfffe12e8>
10101334:	d9403517 	ldw	r5,212(sp)
10101338:	1c07883a 	add	r3,r3,r16
1010133c:	10800044 	addi	r2,r2,1
10101340:	41400015 	stw	r5,0(r8)
10101344:	44000115 	stw	r16,4(r8)
10101348:	d8c02015 	stw	r3,128(sp)
1010134c:	d8801f15 	stw	r2,124(sp)
10101350:	010001c4 	movi	r4,7
10101354:	2080060e 	bge	r4,r2,10101370 <___vfprintf_internal_r+0xaa4>
10101358:	d9002c17 	ldw	r4,176(sp)
1010135c:	d9801e04 	addi	r6,sp,120
10101360:	b80b883a 	mov	r5,r23
10101364:	0107ec80 	call	10107ec8 <__sprint_r>
10101368:	103e5a1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
1010136c:	d8c02017 	ldw	r3,128(sp)
10101370:	d8803117 	ldw	r2,196(sp)
10101374:	d9002a17 	ldw	r4,168(sp)
10101378:	1100010e 	bge	r2,r4,10101380 <___vfprintf_internal_r+0xab4>
1010137c:	2005883a 	mov	r2,r4
10101380:	d9402f17 	ldw	r5,188(sp)
10101384:	288b883a 	add	r5,r5,r2
10101388:	d9402f15 	stw	r5,188(sp)
1010138c:	18019e1e 	bne	r3,zero,10101a08 <___vfprintf_internal_r+0x113c>
10101390:	a8800007 	ldb	r2,0(r21)
10101394:	d8001f15 	stw	zero,124(sp)
10101398:	da000404 	addi	r8,sp,16
1010139c:	103d851e 	bne	r2,zero,101009b4 <__alt_data_end+0xfffe09b4>
101013a0:	a821883a 	mov	r16,r21
101013a4:	003d9b06 	br	10100a14 <__alt_data_end+0xfffe0a14>
101013a8:	18c03fcc 	andi	r3,r3,255
101013ac:	1805c11e 	bne	r3,zero,10102ab4 <___vfprintf_internal_r+0x21e8>
101013b0:	94800414 	ori	r18,r18,16
101013b4:	9080080c 	andi	r2,r18,32
101013b8:	10020c26 	beq	r2,zero,10101bec <___vfprintf_internal_r+0x1320>
101013bc:	d8802d17 	ldw	r2,180(sp)
101013c0:	d9002917 	ldw	r4,164(sp)
101013c4:	d8002785 	stb	zero,158(sp)
101013c8:	10c00204 	addi	r3,r2,8
101013cc:	14c00017 	ldw	r19,0(r2)
101013d0:	15800117 	ldw	r22,4(r2)
101013d4:	20040f16 	blt	r4,zero,10102414 <___vfprintf_internal_r+0x1b48>
101013d8:	013fdfc4 	movi	r4,-129
101013dc:	9d84b03a 	or	r2,r19,r22
101013e0:	d8c02d15 	stw	r3,180(sp)
101013e4:	9124703a 	and	r18,r18,r4
101013e8:	0039883a 	mov	fp,zero
101013ec:	103e891e 	bne	r2,zero,10100e14 <__alt_data_end+0xfffe0e14>
101013f0:	d9002917 	ldw	r4,164(sp)
101013f4:	2002c11e 	bne	r4,zero,10101efc <___vfprintf_internal_r+0x1630>
101013f8:	d8002915 	stw	zero,164(sp)
101013fc:	d8002e15 	stw	zero,184(sp)
10101400:	dc001e04 	addi	r16,sp,120
10101404:	003ef806 	br	10100fe8 <__alt_data_end+0xfffe0fe8>
10101408:	18c03fcc 	andi	r3,r3,255
1010140c:	18059d1e 	bne	r3,zero,10102a84 <___vfprintf_internal_r+0x21b8>
10101410:	01440474 	movhi	r5,4113
10101414:	297dba04 	addi	r5,r5,-2328
10101418:	d9403915 	stw	r5,228(sp)
1010141c:	9080080c 	andi	r2,r18,32
10101420:	10005226 	beq	r2,zero,1010156c <___vfprintf_internal_r+0xca0>
10101424:	d8802d17 	ldw	r2,180(sp)
10101428:	14c00017 	ldw	r19,0(r2)
1010142c:	15800117 	ldw	r22,4(r2)
10101430:	10800204 	addi	r2,r2,8
10101434:	d8802d15 	stw	r2,180(sp)
10101438:	9080004c 	andi	r2,r18,1
1010143c:	10019026 	beq	r2,zero,10101a80 <___vfprintf_internal_r+0x11b4>
10101440:	9d84b03a 	or	r2,r19,r22
10101444:	10036926 	beq	r2,zero,101021ec <___vfprintf_internal_r+0x1920>
10101448:	d8c02917 	ldw	r3,164(sp)
1010144c:	00800c04 	movi	r2,48
10101450:	d8802705 	stb	r2,156(sp)
10101454:	dc402745 	stb	r17,157(sp)
10101458:	d8002785 	stb	zero,158(sp)
1010145c:	90800094 	ori	r2,r18,2
10101460:	18045d16 	blt	r3,zero,101025d8 <___vfprintf_internal_r+0x1d0c>
10101464:	00bfdfc4 	movi	r2,-129
10101468:	90a4703a 	and	r18,r18,r2
1010146c:	94800094 	ori	r18,r18,2
10101470:	0039883a 	mov	fp,zero
10101474:	d9003917 	ldw	r4,228(sp)
10101478:	dc001e04 	addi	r16,sp,120
1010147c:	988003cc 	andi	r2,r19,15
10101480:	b006973a 	slli	r3,r22,28
10101484:	2085883a 	add	r2,r4,r2
10101488:	9826d13a 	srli	r19,r19,4
1010148c:	10800003 	ldbu	r2,0(r2)
10101490:	b02cd13a 	srli	r22,r22,4
10101494:	843fffc4 	addi	r16,r16,-1
10101498:	1ce6b03a 	or	r19,r3,r19
1010149c:	80800005 	stb	r2,0(r16)
101014a0:	9d84b03a 	or	r2,r19,r22
101014a4:	103ff51e 	bne	r2,zero,1010147c <__alt_data_end+0xfffe147c>
101014a8:	d8c02817 	ldw	r3,160(sp)
101014ac:	1c07c83a 	sub	r3,r3,r16
101014b0:	d8c02e15 	stw	r3,184(sp)
101014b4:	003ecc06 	br	10100fe8 <__alt_data_end+0xfffe0fe8>
101014b8:	18c03fcc 	andi	r3,r3,255
101014bc:	183e9f26 	beq	r3,zero,10100f3c <__alt_data_end+0xfffe0f3c>
101014c0:	d9c02785 	stb	r7,158(sp)
101014c4:	003e9d06 	br	10100f3c <__alt_data_end+0xfffe0f3c>
101014c8:	00c00044 	movi	r3,1
101014cc:	01c00ac4 	movi	r7,43
101014d0:	ac400007 	ldb	r17,0(r21)
101014d4:	003d5e06 	br	10100a50 <__alt_data_end+0xfffe0a50>
101014d8:	94800814 	ori	r18,r18,32
101014dc:	ac400007 	ldb	r17,0(r21)
101014e0:	003d5b06 	br	10100a50 <__alt_data_end+0xfffe0a50>
101014e4:	d8c02d17 	ldw	r3,180(sp)
101014e8:	d8002785 	stb	zero,158(sp)
101014ec:	1c000017 	ldw	r16,0(r3)
101014f0:	1cc00104 	addi	r19,r3,4
101014f4:	80041926 	beq	r16,zero,1010255c <___vfprintf_internal_r+0x1c90>
101014f8:	d9002917 	ldw	r4,164(sp)
101014fc:	2003d016 	blt	r4,zero,10102440 <___vfprintf_internal_r+0x1b74>
10101500:	200d883a 	mov	r6,r4
10101504:	000b883a 	mov	r5,zero
10101508:	8009883a 	mov	r4,r16
1010150c:	da003d15 	stw	r8,244(sp)
10101510:	01060dc0 	call	101060dc <memchr>
10101514:	da003d17 	ldw	r8,244(sp)
10101518:	10045426 	beq	r2,zero,1010266c <___vfprintf_internal_r+0x1da0>
1010151c:	1405c83a 	sub	r2,r2,r16
10101520:	d8802e15 	stw	r2,184(sp)
10101524:	1003cc16 	blt	r2,zero,10102458 <___vfprintf_internal_r+0x1b8c>
10101528:	df002783 	ldbu	fp,158(sp)
1010152c:	d8802a15 	stw	r2,168(sp)
10101530:	dcc02d15 	stw	r19,180(sp)
10101534:	d8002915 	stw	zero,164(sp)
10101538:	d8003215 	stw	zero,200(sp)
1010153c:	003eb006 	br	10101000 <__alt_data_end+0xfffe1000>
10101540:	18c03fcc 	andi	r3,r3,255
10101544:	183f9b26 	beq	r3,zero,101013b4 <__alt_data_end+0xfffe13b4>
10101548:	d9c02785 	stb	r7,158(sp)
1010154c:	003f9906 	br	101013b4 <__alt_data_end+0xfffe13b4>
10101550:	18c03fcc 	andi	r3,r3,255
10101554:	1805551e 	bne	r3,zero,10102aac <___vfprintf_internal_r+0x21e0>
10101558:	01440474 	movhi	r5,4113
1010155c:	297dbf04 	addi	r5,r5,-2308
10101560:	d9403915 	stw	r5,228(sp)
10101564:	9080080c 	andi	r2,r18,32
10101568:	103fae1e 	bne	r2,zero,10101424 <__alt_data_end+0xfffe1424>
1010156c:	9080040c 	andi	r2,r18,16
10101570:	1002de26 	beq	r2,zero,101020ec <___vfprintf_internal_r+0x1820>
10101574:	d8c02d17 	ldw	r3,180(sp)
10101578:	002d883a 	mov	r22,zero
1010157c:	1cc00017 	ldw	r19,0(r3)
10101580:	18c00104 	addi	r3,r3,4
10101584:	d8c02d15 	stw	r3,180(sp)
10101588:	003fab06 	br	10101438 <__alt_data_end+0xfffe1438>
1010158c:	38803fcc 	andi	r2,r7,255
10101590:	1080201c 	xori	r2,r2,128
10101594:	10bfe004 	addi	r2,r2,-128
10101598:	1002d21e 	bne	r2,zero,101020e4 <___vfprintf_internal_r+0x1818>
1010159c:	00c00044 	movi	r3,1
101015a0:	01c00804 	movi	r7,32
101015a4:	ac400007 	ldb	r17,0(r21)
101015a8:	003d2906 	br	10100a50 <__alt_data_end+0xfffe0a50>
101015ac:	94800054 	ori	r18,r18,1
101015b0:	ac400007 	ldb	r17,0(r21)
101015b4:	003d2606 	br	10100a50 <__alt_data_end+0xfffe0a50>
101015b8:	18c03fcc 	andi	r3,r3,255
101015bc:	183e0526 	beq	r3,zero,10100dd4 <__alt_data_end+0xfffe0dd4>
101015c0:	d9c02785 	stb	r7,158(sp)
101015c4:	003e0306 	br	10100dd4 <__alt_data_end+0xfffe0dd4>
101015c8:	94801014 	ori	r18,r18,64
101015cc:	ac400007 	ldb	r17,0(r21)
101015d0:	003d1f06 	br	10100a50 <__alt_data_end+0xfffe0a50>
101015d4:	ac400007 	ldb	r17,0(r21)
101015d8:	8a438726 	beq	r17,r9,101023f8 <___vfprintf_internal_r+0x1b2c>
101015dc:	94800414 	ori	r18,r18,16
101015e0:	003d1b06 	br	10100a50 <__alt_data_end+0xfffe0a50>
101015e4:	18c03fcc 	andi	r3,r3,255
101015e8:	1805341e 	bne	r3,zero,10102abc <___vfprintf_internal_r+0x21f0>
101015ec:	9080080c 	andi	r2,r18,32
101015f0:	1002cd26 	beq	r2,zero,10102128 <___vfprintf_internal_r+0x185c>
101015f4:	d9402d17 	ldw	r5,180(sp)
101015f8:	d9002f17 	ldw	r4,188(sp)
101015fc:	28800017 	ldw	r2,0(r5)
10101600:	2007d7fa 	srai	r3,r4,31
10101604:	29400104 	addi	r5,r5,4
10101608:	d9402d15 	stw	r5,180(sp)
1010160c:	11000015 	stw	r4,0(r2)
10101610:	10c00115 	stw	r3,4(r2)
10101614:	003ce506 	br	101009ac <__alt_data_end+0xfffe09ac>
10101618:	d8c02d17 	ldw	r3,180(sp)
1010161c:	d9002d17 	ldw	r4,180(sp)
10101620:	d8002785 	stb	zero,158(sp)
10101624:	18800017 	ldw	r2,0(r3)
10101628:	21000104 	addi	r4,r4,4
1010162c:	00c00044 	movi	r3,1
10101630:	d8c02a15 	stw	r3,168(sp)
10101634:	d8801405 	stb	r2,80(sp)
10101638:	d9002d15 	stw	r4,180(sp)
1010163c:	d8c02e15 	stw	r3,184(sp)
10101640:	d8002915 	stw	zero,164(sp)
10101644:	d8003215 	stw	zero,200(sp)
10101648:	dc001404 	addi	r16,sp,80
1010164c:	0039883a 	mov	fp,zero
10101650:	003e7206 	br	1010101c <__alt_data_end+0xfffe101c>
10101654:	01040474 	movhi	r4,4113
10101658:	213dbf04 	addi	r4,r4,-2308
1010165c:	0039883a 	mov	fp,zero
10101660:	d9003915 	stw	r4,228(sp)
10101664:	04401e04 	movi	r17,120
10101668:	003f8206 	br	10101474 <__alt_data_end+0xfffe1474>
1010166c:	18c03fcc 	andi	r3,r3,255
10101670:	1805061e 	bne	r3,zero,10102a8c <___vfprintf_internal_r+0x21c0>
10101674:	883d9126 	beq	r17,zero,10100cbc <__alt_data_end+0xfffe0cbc>
10101678:	00c00044 	movi	r3,1
1010167c:	d8c02a15 	stw	r3,168(sp)
10101680:	dc401405 	stb	r17,80(sp)
10101684:	d8002785 	stb	zero,158(sp)
10101688:	003fec06 	br	1010163c <__alt_data_end+0xfffe163c>
1010168c:	01440474 	movhi	r5,4113
10101690:	297dbf04 	addi	r5,r5,-2308
10101694:	d9403915 	stw	r5,228(sp)
10101698:	d8c02d15 	stw	r3,180(sp)
1010169c:	1025883a 	mov	r18,r2
101016a0:	04401e04 	movi	r17,120
101016a4:	9d84b03a 	or	r2,r19,r22
101016a8:	1000fc1e 	bne	r2,zero,10101a9c <___vfprintf_internal_r+0x11d0>
101016ac:	0039883a 	mov	fp,zero
101016b0:	00800084 	movi	r2,2
101016b4:	10803fcc 	andi	r2,r2,255
101016b8:	00c00044 	movi	r3,1
101016bc:	10c20f26 	beq	r2,r3,10101efc <___vfprintf_internal_r+0x1630>
101016c0:	00c00084 	movi	r3,2
101016c4:	10fd6326 	beq	r2,r3,10100c54 <__alt_data_end+0xfffe0c54>
101016c8:	003e2d06 	br	10100f80 <__alt_data_end+0xfffe0f80>
101016cc:	d8c02017 	ldw	r3,128(sp)
101016d0:	003e9306 	br	10101120 <__alt_data_end+0xfffe1120>
101016d4:	00801944 	movi	r2,101
101016d8:	14407e0e 	bge	r2,r17,101018d4 <___vfprintf_internal_r+0x1008>
101016dc:	d9003617 	ldw	r4,216(sp)
101016e0:	d9403817 	ldw	r5,224(sp)
101016e4:	000d883a 	mov	r6,zero
101016e8:	000f883a 	mov	r7,zero
101016ec:	d8c03c15 	stw	r3,240(sp)
101016f0:	da003d15 	stw	r8,244(sp)
101016f4:	010bb400 	call	1010bb40 <__eqdf2>
101016f8:	d8c03c17 	ldw	r3,240(sp)
101016fc:	da003d17 	ldw	r8,244(sp)
10101700:	1000f71e 	bne	r2,zero,10101ae0 <___vfprintf_internal_r+0x1214>
10101704:	d8801f17 	ldw	r2,124(sp)
10101708:	01040474 	movhi	r4,4113
1010170c:	213dc604 	addi	r4,r4,-2280
10101710:	18c00044 	addi	r3,r3,1
10101714:	10800044 	addi	r2,r2,1
10101718:	41000015 	stw	r4,0(r8)
1010171c:	01000044 	movi	r4,1
10101720:	41000115 	stw	r4,4(r8)
10101724:	d8c02015 	stw	r3,128(sp)
10101728:	d8801f15 	stw	r2,124(sp)
1010172c:	010001c4 	movi	r4,7
10101730:	2082b816 	blt	r4,r2,10102214 <___vfprintf_internal_r+0x1948>
10101734:	42000204 	addi	r8,r8,8
10101738:	d8802617 	ldw	r2,152(sp)
1010173c:	d9403317 	ldw	r5,204(sp)
10101740:	11400216 	blt	r2,r5,1010174c <___vfprintf_internal_r+0xe80>
10101744:	9080004c 	andi	r2,r18,1
10101748:	103ed526 	beq	r2,zero,101012a0 <__alt_data_end+0xfffe12a0>
1010174c:	d8803717 	ldw	r2,220(sp)
10101750:	d9003417 	ldw	r4,208(sp)
10101754:	d9403717 	ldw	r5,220(sp)
10101758:	1887883a 	add	r3,r3,r2
1010175c:	d8801f17 	ldw	r2,124(sp)
10101760:	41000015 	stw	r4,0(r8)
10101764:	41400115 	stw	r5,4(r8)
10101768:	10800044 	addi	r2,r2,1
1010176c:	d8c02015 	stw	r3,128(sp)
10101770:	d8801f15 	stw	r2,124(sp)
10101774:	010001c4 	movi	r4,7
10101778:	20832916 	blt	r4,r2,10102420 <___vfprintf_internal_r+0x1b54>
1010177c:	42000204 	addi	r8,r8,8
10101780:	d8803317 	ldw	r2,204(sp)
10101784:	143fffc4 	addi	r16,r2,-1
10101788:	043ec50e 	bge	zero,r16,101012a0 <__alt_data_end+0xfffe12a0>
1010178c:	04400404 	movi	r17,16
10101790:	d8801f17 	ldw	r2,124(sp)
10101794:	8c00880e 	bge	r17,r16,101019b8 <___vfprintf_internal_r+0x10ec>
10101798:	01440474 	movhi	r5,4113
1010179c:	297dc684 	addi	r5,r5,-2278
101017a0:	d9402b15 	stw	r5,172(sp)
101017a4:	058001c4 	movi	r22,7
101017a8:	dcc02c17 	ldw	r19,176(sp)
101017ac:	00000306 	br	101017bc <___vfprintf_internal_r+0xef0>
101017b0:	42000204 	addi	r8,r8,8
101017b4:	843ffc04 	addi	r16,r16,-16
101017b8:	8c00820e 	bge	r17,r16,101019c4 <___vfprintf_internal_r+0x10f8>
101017bc:	18c00404 	addi	r3,r3,16
101017c0:	10800044 	addi	r2,r2,1
101017c4:	45000015 	stw	r20,0(r8)
101017c8:	44400115 	stw	r17,4(r8)
101017cc:	d8c02015 	stw	r3,128(sp)
101017d0:	d8801f15 	stw	r2,124(sp)
101017d4:	b0bff60e 	bge	r22,r2,101017b0 <__alt_data_end+0xfffe17b0>
101017d8:	d9801e04 	addi	r6,sp,120
101017dc:	b80b883a 	mov	r5,r23
101017e0:	9809883a 	mov	r4,r19
101017e4:	0107ec80 	call	10107ec8 <__sprint_r>
101017e8:	103d3a1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
101017ec:	d8c02017 	ldw	r3,128(sp)
101017f0:	d8801f17 	ldw	r2,124(sp)
101017f4:	da000404 	addi	r8,sp,16
101017f8:	003fee06 	br	101017b4 <__alt_data_end+0xfffe17b4>
101017fc:	d9403117 	ldw	r5,196(sp)
10101800:	d8802a17 	ldw	r2,168(sp)
10101804:	28adc83a 	sub	r22,r5,r2
10101808:	05be630e 	bge	zero,r22,10101198 <__alt_data_end+0xfffe1198>
1010180c:	07000404 	movi	fp,16
10101810:	d8801f17 	ldw	r2,124(sp)
10101814:	e5838f0e 	bge	fp,r22,10102654 <___vfprintf_internal_r+0x1d88>
10101818:	01440474 	movhi	r5,4113
1010181c:	297dc684 	addi	r5,r5,-2278
10101820:	dc403015 	stw	r17,192(sp)
10101824:	d9402b15 	stw	r5,172(sp)
10101828:	b023883a 	mov	r17,r22
1010182c:	04c001c4 	movi	r19,7
10101830:	a82d883a 	mov	r22,r21
10101834:	902b883a 	mov	r21,r18
10101838:	8025883a 	mov	r18,r16
1010183c:	dc002c17 	ldw	r16,176(sp)
10101840:	00000306 	br	10101850 <___vfprintf_internal_r+0xf84>
10101844:	8c7ffc04 	addi	r17,r17,-16
10101848:	42000204 	addi	r8,r8,8
1010184c:	e440110e 	bge	fp,r17,10101894 <___vfprintf_internal_r+0xfc8>
10101850:	18c00404 	addi	r3,r3,16
10101854:	10800044 	addi	r2,r2,1
10101858:	45000015 	stw	r20,0(r8)
1010185c:	47000115 	stw	fp,4(r8)
10101860:	d8c02015 	stw	r3,128(sp)
10101864:	d8801f15 	stw	r2,124(sp)
10101868:	98bff60e 	bge	r19,r2,10101844 <__alt_data_end+0xfffe1844>
1010186c:	d9801e04 	addi	r6,sp,120
10101870:	b80b883a 	mov	r5,r23
10101874:	8009883a 	mov	r4,r16
10101878:	0107ec80 	call	10107ec8 <__sprint_r>
1010187c:	103d151e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101880:	8c7ffc04 	addi	r17,r17,-16
10101884:	d8c02017 	ldw	r3,128(sp)
10101888:	d8801f17 	ldw	r2,124(sp)
1010188c:	da000404 	addi	r8,sp,16
10101890:	e47fef16 	blt	fp,r17,10101850 <__alt_data_end+0xfffe1850>
10101894:	9021883a 	mov	r16,r18
10101898:	a825883a 	mov	r18,r21
1010189c:	b02b883a 	mov	r21,r22
101018a0:	882d883a 	mov	r22,r17
101018a4:	dc403017 	ldw	r17,192(sp)
101018a8:	d9002b17 	ldw	r4,172(sp)
101018ac:	1d87883a 	add	r3,r3,r22
101018b0:	10800044 	addi	r2,r2,1
101018b4:	41000015 	stw	r4,0(r8)
101018b8:	45800115 	stw	r22,4(r8)
101018bc:	d8c02015 	stw	r3,128(sp)
101018c0:	d8801f15 	stw	r2,124(sp)
101018c4:	010001c4 	movi	r4,7
101018c8:	20818e16 	blt	r4,r2,10101f04 <___vfprintf_internal_r+0x1638>
101018cc:	42000204 	addi	r8,r8,8
101018d0:	003e3106 	br	10101198 <__alt_data_end+0xfffe1198>
101018d4:	d9403317 	ldw	r5,204(sp)
101018d8:	00800044 	movi	r2,1
101018dc:	18c00044 	addi	r3,r3,1
101018e0:	1141530e 	bge	r2,r5,10101e30 <___vfprintf_internal_r+0x1564>
101018e4:	dc401f17 	ldw	r17,124(sp)
101018e8:	00800044 	movi	r2,1
101018ec:	40800115 	stw	r2,4(r8)
101018f0:	8c400044 	addi	r17,r17,1
101018f4:	44000015 	stw	r16,0(r8)
101018f8:	d8c02015 	stw	r3,128(sp)
101018fc:	dc401f15 	stw	r17,124(sp)
10101900:	008001c4 	movi	r2,7
10101904:	14416b16 	blt	r2,r17,10101eb4 <___vfprintf_internal_r+0x15e8>
10101908:	42000204 	addi	r8,r8,8
1010190c:	d8803717 	ldw	r2,220(sp)
10101910:	d9003417 	ldw	r4,208(sp)
10101914:	8c400044 	addi	r17,r17,1
10101918:	10c7883a 	add	r3,r2,r3
1010191c:	40800115 	stw	r2,4(r8)
10101920:	41000015 	stw	r4,0(r8)
10101924:	d8c02015 	stw	r3,128(sp)
10101928:	dc401f15 	stw	r17,124(sp)
1010192c:	008001c4 	movi	r2,7
10101930:	14416916 	blt	r2,r17,10101ed8 <___vfprintf_internal_r+0x160c>
10101934:	45800204 	addi	r22,r8,8
10101938:	d9003617 	ldw	r4,216(sp)
1010193c:	d9403817 	ldw	r5,224(sp)
10101940:	000d883a 	mov	r6,zero
10101944:	000f883a 	mov	r7,zero
10101948:	d8c03c15 	stw	r3,240(sp)
1010194c:	010bb400 	call	1010bb40 <__eqdf2>
10101950:	d8c03c17 	ldw	r3,240(sp)
10101954:	1000bc26 	beq	r2,zero,10101c48 <___vfprintf_internal_r+0x137c>
10101958:	d9403317 	ldw	r5,204(sp)
1010195c:	84000044 	addi	r16,r16,1
10101960:	8c400044 	addi	r17,r17,1
10101964:	28bfffc4 	addi	r2,r5,-1
10101968:	1887883a 	add	r3,r3,r2
1010196c:	b0800115 	stw	r2,4(r22)
10101970:	b4000015 	stw	r16,0(r22)
10101974:	d8c02015 	stw	r3,128(sp)
10101978:	dc401f15 	stw	r17,124(sp)
1010197c:	008001c4 	movi	r2,7
10101980:	14414316 	blt	r2,r17,10101e90 <___vfprintf_internal_r+0x15c4>
10101984:	b5800204 	addi	r22,r22,8
10101988:	d9003a17 	ldw	r4,232(sp)
1010198c:	df0022c4 	addi	fp,sp,139
10101990:	8c400044 	addi	r17,r17,1
10101994:	20c7883a 	add	r3,r4,r3
10101998:	b7000015 	stw	fp,0(r22)
1010199c:	b1000115 	stw	r4,4(r22)
101019a0:	d8c02015 	stw	r3,128(sp)
101019a4:	dc401f15 	stw	r17,124(sp)
101019a8:	008001c4 	movi	r2,7
101019ac:	14400e16 	blt	r2,r17,101019e8 <___vfprintf_internal_r+0x111c>
101019b0:	b2000204 	addi	r8,r22,8
101019b4:	003e3a06 	br	101012a0 <__alt_data_end+0xfffe12a0>
101019b8:	01040474 	movhi	r4,4113
101019bc:	213dc684 	addi	r4,r4,-2278
101019c0:	d9002b15 	stw	r4,172(sp)
101019c4:	d9002b17 	ldw	r4,172(sp)
101019c8:	1c07883a 	add	r3,r3,r16
101019cc:	44000115 	stw	r16,4(r8)
101019d0:	41000015 	stw	r4,0(r8)
101019d4:	10800044 	addi	r2,r2,1
101019d8:	d8c02015 	stw	r3,128(sp)
101019dc:	d8801f15 	stw	r2,124(sp)
101019e0:	010001c4 	movi	r4,7
101019e4:	20be2d0e 	bge	r4,r2,1010129c <__alt_data_end+0xfffe129c>
101019e8:	d9002c17 	ldw	r4,176(sp)
101019ec:	d9801e04 	addi	r6,sp,120
101019f0:	b80b883a 	mov	r5,r23
101019f4:	0107ec80 	call	10107ec8 <__sprint_r>
101019f8:	103cb61e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
101019fc:	d8c02017 	ldw	r3,128(sp)
10101a00:	da000404 	addi	r8,sp,16
10101a04:	003e2606 	br	101012a0 <__alt_data_end+0xfffe12a0>
10101a08:	d9002c17 	ldw	r4,176(sp)
10101a0c:	d9801e04 	addi	r6,sp,120
10101a10:	b80b883a 	mov	r5,r23
10101a14:	0107ec80 	call	10107ec8 <__sprint_r>
10101a18:	103e5d26 	beq	r2,zero,10101390 <__alt_data_end+0xfffe1390>
10101a1c:	003cad06 	br	10100cd4 <__alt_data_end+0xfffe0cd4>
10101a20:	d9002c17 	ldw	r4,176(sp)
10101a24:	d9801e04 	addi	r6,sp,120
10101a28:	b80b883a 	mov	r5,r23
10101a2c:	0107ec80 	call	10107ec8 <__sprint_r>
10101a30:	103ca81e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101a34:	d8c02017 	ldw	r3,128(sp)
10101a38:	da000404 	addi	r8,sp,16
10101a3c:	003e0b06 	br	1010126c <__alt_data_end+0xfffe126c>
10101a40:	d9002c17 	ldw	r4,176(sp)
10101a44:	d9801e04 	addi	r6,sp,120
10101a48:	b80b883a 	mov	r5,r23
10101a4c:	0107ec80 	call	10107ec8 <__sprint_r>
10101a50:	103ca01e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101a54:	d8c02017 	ldw	r3,128(sp)
10101a58:	da000404 	addi	r8,sp,16
10101a5c:	003dbd06 	br	10101154 <__alt_data_end+0xfffe1154>
10101a60:	d9002c17 	ldw	r4,176(sp)
10101a64:	d9801e04 	addi	r6,sp,120
10101a68:	b80b883a 	mov	r5,r23
10101a6c:	0107ec80 	call	10107ec8 <__sprint_r>
10101a70:	103c981e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101a74:	d8c02017 	ldw	r3,128(sp)
10101a78:	da000404 	addi	r8,sp,16
10101a7c:	003dc306 	br	1010118c <__alt_data_end+0xfffe118c>
10101a80:	d8802917 	ldw	r2,164(sp)
10101a84:	d8002785 	stb	zero,158(sp)
10101a88:	103f0616 	blt	r2,zero,101016a4 <__alt_data_end+0xfffe16a4>
10101a8c:	00ffdfc4 	movi	r3,-129
10101a90:	9d84b03a 	or	r2,r19,r22
10101a94:	90e4703a 	and	r18,r18,r3
10101a98:	103c6b26 	beq	r2,zero,10100c48 <__alt_data_end+0xfffe0c48>
10101a9c:	0039883a 	mov	fp,zero
10101aa0:	003e7406 	br	10101474 <__alt_data_end+0xfffe1474>
10101aa4:	9080040c 	andi	r2,r18,16
10101aa8:	1001b326 	beq	r2,zero,10102178 <___vfprintf_internal_r+0x18ac>
10101aac:	d9002d17 	ldw	r4,180(sp)
10101ab0:	d9402917 	ldw	r5,164(sp)
10101ab4:	d8002785 	stb	zero,158(sp)
10101ab8:	20800104 	addi	r2,r4,4
10101abc:	24c00017 	ldw	r19,0(r4)
10101ac0:	002d883a 	mov	r22,zero
10101ac4:	2801b516 	blt	r5,zero,1010219c <___vfprintf_internal_r+0x18d0>
10101ac8:	00ffdfc4 	movi	r3,-129
10101acc:	d8802d15 	stw	r2,180(sp)
10101ad0:	90e4703a 	and	r18,r18,r3
10101ad4:	983d2726 	beq	r19,zero,10100f74 <__alt_data_end+0xfffe0f74>
10101ad8:	0039883a 	mov	fp,zero
10101adc:	003d2a06 	br	10100f88 <__alt_data_end+0xfffe0f88>
10101ae0:	dc402617 	ldw	r17,152(sp)
10101ae4:	0441d30e 	bge	zero,r17,10102234 <___vfprintf_internal_r+0x1968>
10101ae8:	dc403217 	ldw	r17,200(sp)
10101aec:	d8803317 	ldw	r2,204(sp)
10101af0:	1440010e 	bge	r2,r17,10101af8 <___vfprintf_internal_r+0x122c>
10101af4:	1023883a 	mov	r17,r2
10101af8:	04400a0e 	bge	zero,r17,10101b24 <___vfprintf_internal_r+0x1258>
10101afc:	d8801f17 	ldw	r2,124(sp)
10101b00:	1c47883a 	add	r3,r3,r17
10101b04:	44000015 	stw	r16,0(r8)
10101b08:	10800044 	addi	r2,r2,1
10101b0c:	44400115 	stw	r17,4(r8)
10101b10:	d8c02015 	stw	r3,128(sp)
10101b14:	d8801f15 	stw	r2,124(sp)
10101b18:	010001c4 	movi	r4,7
10101b1c:	20826516 	blt	r4,r2,101024b4 <___vfprintf_internal_r+0x1be8>
10101b20:	42000204 	addi	r8,r8,8
10101b24:	88026116 	blt	r17,zero,101024ac <___vfprintf_internal_r+0x1be0>
10101b28:	d9003217 	ldw	r4,200(sp)
10101b2c:	2463c83a 	sub	r17,r4,r17
10101b30:	04407b0e 	bge	zero,r17,10101d20 <___vfprintf_internal_r+0x1454>
10101b34:	05800404 	movi	r22,16
10101b38:	d8801f17 	ldw	r2,124(sp)
10101b3c:	b4419d0e 	bge	r22,r17,101021b4 <___vfprintf_internal_r+0x18e8>
10101b40:	01040474 	movhi	r4,4113
10101b44:	213dc684 	addi	r4,r4,-2278
10101b48:	d9002b15 	stw	r4,172(sp)
10101b4c:	070001c4 	movi	fp,7
10101b50:	dcc02c17 	ldw	r19,176(sp)
10101b54:	00000306 	br	10101b64 <___vfprintf_internal_r+0x1298>
10101b58:	42000204 	addi	r8,r8,8
10101b5c:	8c7ffc04 	addi	r17,r17,-16
10101b60:	b441970e 	bge	r22,r17,101021c0 <___vfprintf_internal_r+0x18f4>
10101b64:	18c00404 	addi	r3,r3,16
10101b68:	10800044 	addi	r2,r2,1
10101b6c:	45000015 	stw	r20,0(r8)
10101b70:	45800115 	stw	r22,4(r8)
10101b74:	d8c02015 	stw	r3,128(sp)
10101b78:	d8801f15 	stw	r2,124(sp)
10101b7c:	e0bff60e 	bge	fp,r2,10101b58 <__alt_data_end+0xfffe1b58>
10101b80:	d9801e04 	addi	r6,sp,120
10101b84:	b80b883a 	mov	r5,r23
10101b88:	9809883a 	mov	r4,r19
10101b8c:	0107ec80 	call	10107ec8 <__sprint_r>
10101b90:	103c501e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101b94:	d8c02017 	ldw	r3,128(sp)
10101b98:	d8801f17 	ldw	r2,124(sp)
10101b9c:	da000404 	addi	r8,sp,16
10101ba0:	003fee06 	br	10101b5c <__alt_data_end+0xfffe1b5c>
10101ba4:	d9002c17 	ldw	r4,176(sp)
10101ba8:	d9801e04 	addi	r6,sp,120
10101bac:	b80b883a 	mov	r5,r23
10101bb0:	0107ec80 	call	10107ec8 <__sprint_r>
10101bb4:	103c471e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101bb8:	d8c02017 	ldw	r3,128(sp)
10101bbc:	df002787 	ldb	fp,158(sp)
10101bc0:	da000404 	addi	r8,sp,16
10101bc4:	003d5606 	br	10101120 <__alt_data_end+0xfffe1120>
10101bc8:	9080040c 	andi	r2,r18,16
10101bcc:	10016126 	beq	r2,zero,10102154 <___vfprintf_internal_r+0x1888>
10101bd0:	d8802d17 	ldw	r2,180(sp)
10101bd4:	14c00017 	ldw	r19,0(r2)
10101bd8:	10800104 	addi	r2,r2,4
10101bdc:	d8802d15 	stw	r2,180(sp)
10101be0:	982dd7fa 	srai	r22,r19,31
10101be4:	b005883a 	mov	r2,r22
10101be8:	003c8206 	br	10100df4 <__alt_data_end+0xfffe0df4>
10101bec:	9080040c 	andi	r2,r18,16
10101bf0:	10003526 	beq	r2,zero,10101cc8 <___vfprintf_internal_r+0x13fc>
10101bf4:	d9402d17 	ldw	r5,180(sp)
10101bf8:	d8c02917 	ldw	r3,164(sp)
10101bfc:	d8002785 	stb	zero,158(sp)
10101c00:	28800104 	addi	r2,r5,4
10101c04:	2cc00017 	ldw	r19,0(r5)
10101c08:	002d883a 	mov	r22,zero
10101c0c:	18003716 	blt	r3,zero,10101cec <___vfprintf_internal_r+0x1420>
10101c10:	00ffdfc4 	movi	r3,-129
10101c14:	d8802d15 	stw	r2,180(sp)
10101c18:	90e4703a 	and	r18,r18,r3
10101c1c:	0039883a 	mov	fp,zero
10101c20:	983df326 	beq	r19,zero,101013f0 <__alt_data_end+0xfffe13f0>
10101c24:	00800244 	movi	r2,9
10101c28:	14fc7b36 	bltu	r2,r19,10100e18 <__alt_data_end+0xfffe0e18>
10101c2c:	d8c02817 	ldw	r3,160(sp)
10101c30:	dc001dc4 	addi	r16,sp,119
10101c34:	9cc00c04 	addi	r19,r19,48
10101c38:	1c07c83a 	sub	r3,r3,r16
10101c3c:	dcc01dc5 	stb	r19,119(sp)
10101c40:	d8c02e15 	stw	r3,184(sp)
10101c44:	003ce806 	br	10100fe8 <__alt_data_end+0xfffe0fe8>
10101c48:	d8803317 	ldw	r2,204(sp)
10101c4c:	143fffc4 	addi	r16,r2,-1
10101c50:	043f4d0e 	bge	zero,r16,10101988 <__alt_data_end+0xfffe1988>
10101c54:	07000404 	movi	fp,16
10101c58:	e400810e 	bge	fp,r16,10101e60 <___vfprintf_internal_r+0x1594>
10101c5c:	01440474 	movhi	r5,4113
10101c60:	297dc684 	addi	r5,r5,-2278
10101c64:	d9402b15 	stw	r5,172(sp)
10101c68:	01c001c4 	movi	r7,7
10101c6c:	dcc02c17 	ldw	r19,176(sp)
10101c70:	00000306 	br	10101c80 <___vfprintf_internal_r+0x13b4>
10101c74:	b5800204 	addi	r22,r22,8
10101c78:	843ffc04 	addi	r16,r16,-16
10101c7c:	e4007b0e 	bge	fp,r16,10101e6c <___vfprintf_internal_r+0x15a0>
10101c80:	18c00404 	addi	r3,r3,16
10101c84:	8c400044 	addi	r17,r17,1
10101c88:	b5000015 	stw	r20,0(r22)
10101c8c:	b7000115 	stw	fp,4(r22)
10101c90:	d8c02015 	stw	r3,128(sp)
10101c94:	dc401f15 	stw	r17,124(sp)
10101c98:	3c7ff60e 	bge	r7,r17,10101c74 <__alt_data_end+0xfffe1c74>
10101c9c:	d9801e04 	addi	r6,sp,120
10101ca0:	b80b883a 	mov	r5,r23
10101ca4:	9809883a 	mov	r4,r19
10101ca8:	d9c03c15 	stw	r7,240(sp)
10101cac:	0107ec80 	call	10107ec8 <__sprint_r>
10101cb0:	d9c03c17 	ldw	r7,240(sp)
10101cb4:	103c071e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101cb8:	d8c02017 	ldw	r3,128(sp)
10101cbc:	dc401f17 	ldw	r17,124(sp)
10101cc0:	dd800404 	addi	r22,sp,16
10101cc4:	003fec06 	br	10101c78 <__alt_data_end+0xfffe1c78>
10101cc8:	9080100c 	andi	r2,r18,64
10101ccc:	d8002785 	stb	zero,158(sp)
10101cd0:	10010e26 	beq	r2,zero,1010210c <___vfprintf_internal_r+0x1840>
10101cd4:	d9002d17 	ldw	r4,180(sp)
10101cd8:	d9402917 	ldw	r5,164(sp)
10101cdc:	002d883a 	mov	r22,zero
10101ce0:	20800104 	addi	r2,r4,4
10101ce4:	24c0000b 	ldhu	r19,0(r4)
10101ce8:	283fc90e 	bge	r5,zero,10101c10 <__alt_data_end+0xfffe1c10>
10101cec:	d8802d15 	stw	r2,180(sp)
10101cf0:	0039883a 	mov	fp,zero
10101cf4:	9d84b03a 	or	r2,r19,r22
10101cf8:	103c461e 	bne	r2,zero,10100e14 <__alt_data_end+0xfffe0e14>
10101cfc:	00800044 	movi	r2,1
10101d00:	003e6c06 	br	101016b4 <__alt_data_end+0xfffe16b4>
10101d04:	d9002c17 	ldw	r4,176(sp)
10101d08:	d9801e04 	addi	r6,sp,120
10101d0c:	b80b883a 	mov	r5,r23
10101d10:	0107ec80 	call	10107ec8 <__sprint_r>
10101d14:	103bef1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101d18:	d8c02017 	ldw	r3,128(sp)
10101d1c:	da000404 	addi	r8,sp,16
10101d20:	d9003217 	ldw	r4,200(sp)
10101d24:	d8802617 	ldw	r2,152(sp)
10101d28:	d9403317 	ldw	r5,204(sp)
10101d2c:	8123883a 	add	r17,r16,r4
10101d30:	11400216 	blt	r2,r5,10101d3c <___vfprintf_internal_r+0x1470>
10101d34:	9100004c 	andi	r4,r18,1
10101d38:	20000d26 	beq	r4,zero,10101d70 <___vfprintf_internal_r+0x14a4>
10101d3c:	d9003717 	ldw	r4,220(sp)
10101d40:	d9403417 	ldw	r5,208(sp)
10101d44:	1907883a 	add	r3,r3,r4
10101d48:	d9001f17 	ldw	r4,124(sp)
10101d4c:	41400015 	stw	r5,0(r8)
10101d50:	d9403717 	ldw	r5,220(sp)
10101d54:	21000044 	addi	r4,r4,1
10101d58:	d8c02015 	stw	r3,128(sp)
10101d5c:	41400115 	stw	r5,4(r8)
10101d60:	d9001f15 	stw	r4,124(sp)
10101d64:	014001c4 	movi	r5,7
10101d68:	2901e816 	blt	r5,r4,1010250c <___vfprintf_internal_r+0x1c40>
10101d6c:	42000204 	addi	r8,r8,8
10101d70:	d9003317 	ldw	r4,204(sp)
10101d74:	8121883a 	add	r16,r16,r4
10101d78:	2085c83a 	sub	r2,r4,r2
10101d7c:	8461c83a 	sub	r16,r16,r17
10101d80:	1400010e 	bge	r2,r16,10101d88 <___vfprintf_internal_r+0x14bc>
10101d84:	1021883a 	mov	r16,r2
10101d88:	04000a0e 	bge	zero,r16,10101db4 <___vfprintf_internal_r+0x14e8>
10101d8c:	d9001f17 	ldw	r4,124(sp)
10101d90:	1c07883a 	add	r3,r3,r16
10101d94:	44400015 	stw	r17,0(r8)
10101d98:	21000044 	addi	r4,r4,1
10101d9c:	44000115 	stw	r16,4(r8)
10101da0:	d8c02015 	stw	r3,128(sp)
10101da4:	d9001f15 	stw	r4,124(sp)
10101da8:	014001c4 	movi	r5,7
10101dac:	2901fb16 	blt	r5,r4,1010259c <___vfprintf_internal_r+0x1cd0>
10101db0:	42000204 	addi	r8,r8,8
10101db4:	8001f716 	blt	r16,zero,10102594 <___vfprintf_internal_r+0x1cc8>
10101db8:	1421c83a 	sub	r16,r2,r16
10101dbc:	043d380e 	bge	zero,r16,101012a0 <__alt_data_end+0xfffe12a0>
10101dc0:	04400404 	movi	r17,16
10101dc4:	d8801f17 	ldw	r2,124(sp)
10101dc8:	8c3efb0e 	bge	r17,r16,101019b8 <__alt_data_end+0xfffe19b8>
10101dcc:	01440474 	movhi	r5,4113
10101dd0:	297dc684 	addi	r5,r5,-2278
10101dd4:	d9402b15 	stw	r5,172(sp)
10101dd8:	058001c4 	movi	r22,7
10101ddc:	dcc02c17 	ldw	r19,176(sp)
10101de0:	00000306 	br	10101df0 <___vfprintf_internal_r+0x1524>
10101de4:	42000204 	addi	r8,r8,8
10101de8:	843ffc04 	addi	r16,r16,-16
10101dec:	8c3ef50e 	bge	r17,r16,101019c4 <__alt_data_end+0xfffe19c4>
10101df0:	18c00404 	addi	r3,r3,16
10101df4:	10800044 	addi	r2,r2,1
10101df8:	45000015 	stw	r20,0(r8)
10101dfc:	44400115 	stw	r17,4(r8)
10101e00:	d8c02015 	stw	r3,128(sp)
10101e04:	d8801f15 	stw	r2,124(sp)
10101e08:	b0bff60e 	bge	r22,r2,10101de4 <__alt_data_end+0xfffe1de4>
10101e0c:	d9801e04 	addi	r6,sp,120
10101e10:	b80b883a 	mov	r5,r23
10101e14:	9809883a 	mov	r4,r19
10101e18:	0107ec80 	call	10107ec8 <__sprint_r>
10101e1c:	103bad1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101e20:	d8c02017 	ldw	r3,128(sp)
10101e24:	d8801f17 	ldw	r2,124(sp)
10101e28:	da000404 	addi	r8,sp,16
10101e2c:	003fee06 	br	10101de8 <__alt_data_end+0xfffe1de8>
10101e30:	9088703a 	and	r4,r18,r2
10101e34:	203eab1e 	bne	r4,zero,101018e4 <__alt_data_end+0xfffe18e4>
10101e38:	dc401f17 	ldw	r17,124(sp)
10101e3c:	40800115 	stw	r2,4(r8)
10101e40:	44000015 	stw	r16,0(r8)
10101e44:	8c400044 	addi	r17,r17,1
10101e48:	d8c02015 	stw	r3,128(sp)
10101e4c:	dc401f15 	stw	r17,124(sp)
10101e50:	008001c4 	movi	r2,7
10101e54:	14400e16 	blt	r2,r17,10101e90 <___vfprintf_internal_r+0x15c4>
10101e58:	45800204 	addi	r22,r8,8
10101e5c:	003eca06 	br	10101988 <__alt_data_end+0xfffe1988>
10101e60:	01040474 	movhi	r4,4113
10101e64:	213dc684 	addi	r4,r4,-2278
10101e68:	d9002b15 	stw	r4,172(sp)
10101e6c:	d8802b17 	ldw	r2,172(sp)
10101e70:	1c07883a 	add	r3,r3,r16
10101e74:	8c400044 	addi	r17,r17,1
10101e78:	b0800015 	stw	r2,0(r22)
10101e7c:	b4000115 	stw	r16,4(r22)
10101e80:	d8c02015 	stw	r3,128(sp)
10101e84:	dc401f15 	stw	r17,124(sp)
10101e88:	008001c4 	movi	r2,7
10101e8c:	147ebd0e 	bge	r2,r17,10101984 <__alt_data_end+0xfffe1984>
10101e90:	d9002c17 	ldw	r4,176(sp)
10101e94:	d9801e04 	addi	r6,sp,120
10101e98:	b80b883a 	mov	r5,r23
10101e9c:	0107ec80 	call	10107ec8 <__sprint_r>
10101ea0:	103b8c1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101ea4:	d8c02017 	ldw	r3,128(sp)
10101ea8:	dc401f17 	ldw	r17,124(sp)
10101eac:	dd800404 	addi	r22,sp,16
10101eb0:	003eb506 	br	10101988 <__alt_data_end+0xfffe1988>
10101eb4:	d9002c17 	ldw	r4,176(sp)
10101eb8:	d9801e04 	addi	r6,sp,120
10101ebc:	b80b883a 	mov	r5,r23
10101ec0:	0107ec80 	call	10107ec8 <__sprint_r>
10101ec4:	103b831e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101ec8:	d8c02017 	ldw	r3,128(sp)
10101ecc:	dc401f17 	ldw	r17,124(sp)
10101ed0:	da000404 	addi	r8,sp,16
10101ed4:	003e8d06 	br	1010190c <__alt_data_end+0xfffe190c>
10101ed8:	d9002c17 	ldw	r4,176(sp)
10101edc:	d9801e04 	addi	r6,sp,120
10101ee0:	b80b883a 	mov	r5,r23
10101ee4:	0107ec80 	call	10107ec8 <__sprint_r>
10101ee8:	103b7a1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101eec:	d8c02017 	ldw	r3,128(sp)
10101ef0:	dc401f17 	ldw	r17,124(sp)
10101ef4:	dd800404 	addi	r22,sp,16
10101ef8:	003e8f06 	br	10101938 <__alt_data_end+0xfffe1938>
10101efc:	0027883a 	mov	r19,zero
10101f00:	003f4a06 	br	10101c2c <__alt_data_end+0xfffe1c2c>
10101f04:	d9002c17 	ldw	r4,176(sp)
10101f08:	d9801e04 	addi	r6,sp,120
10101f0c:	b80b883a 	mov	r5,r23
10101f10:	0107ec80 	call	10107ec8 <__sprint_r>
10101f14:	103b6f1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10101f18:	d8c02017 	ldw	r3,128(sp)
10101f1c:	da000404 	addi	r8,sp,16
10101f20:	003c9d06 	br	10101198 <__alt_data_end+0xfffe1198>
10101f24:	04e7c83a 	sub	r19,zero,r19
10101f28:	9804c03a 	cmpne	r2,r19,zero
10101f2c:	05adc83a 	sub	r22,zero,r22
10101f30:	b0adc83a 	sub	r22,r22,r2
10101f34:	d8802917 	ldw	r2,164(sp)
10101f38:	07000b44 	movi	fp,45
10101f3c:	df002785 	stb	fp,158(sp)
10101f40:	10017b16 	blt	r2,zero,10102530 <___vfprintf_internal_r+0x1c64>
10101f44:	00bfdfc4 	movi	r2,-129
10101f48:	90a4703a 	and	r18,r18,r2
10101f4c:	003bb106 	br	10100e14 <__alt_data_end+0xfffe0e14>
10101f50:	d9003617 	ldw	r4,216(sp)
10101f54:	d9403817 	ldw	r5,224(sp)
10101f58:	da003d15 	stw	r8,244(sp)
10101f5c:	0107aec0 	call	10107aec <__fpclassifyd>
10101f60:	da003d17 	ldw	r8,244(sp)
10101f64:	1000f026 	beq	r2,zero,10102328 <___vfprintf_internal_r+0x1a5c>
10101f68:	d9002917 	ldw	r4,164(sp)
10101f6c:	05bff7c4 	movi	r22,-33
10101f70:	00bfffc4 	movi	r2,-1
10101f74:	8dac703a 	and	r22,r17,r22
10101f78:	20820026 	beq	r4,r2,1010277c <___vfprintf_internal_r+0x1eb0>
10101f7c:	008011c4 	movi	r2,71
10101f80:	b081f726 	beq	r22,r2,10102760 <___vfprintf_internal_r+0x1e94>
10101f84:	d9003817 	ldw	r4,224(sp)
10101f88:	90c04014 	ori	r3,r18,256
10101f8c:	d8c02b15 	stw	r3,172(sp)
10101f90:	20021516 	blt	r4,zero,101027e8 <___vfprintf_internal_r+0x1f1c>
10101f94:	dcc03817 	ldw	r19,224(sp)
10101f98:	d8002a05 	stb	zero,168(sp)
10101f9c:	00801984 	movi	r2,102
10101fa0:	8881f926 	beq	r17,r2,10102788 <___vfprintf_internal_r+0x1ebc>
10101fa4:	00801184 	movi	r2,70
10101fa8:	88821c26 	beq	r17,r2,1010281c <___vfprintf_internal_r+0x1f50>
10101fac:	00801144 	movi	r2,69
10101fb0:	b081ef26 	beq	r22,r2,10102770 <___vfprintf_internal_r+0x1ea4>
10101fb4:	d8c02917 	ldw	r3,164(sp)
10101fb8:	d8802104 	addi	r2,sp,132
10101fbc:	d8800315 	stw	r2,12(sp)
10101fc0:	d9403617 	ldw	r5,216(sp)
10101fc4:	d8802504 	addi	r2,sp,148
10101fc8:	d9002c17 	ldw	r4,176(sp)
10101fcc:	d8800215 	stw	r2,8(sp)
10101fd0:	d8802604 	addi	r2,sp,152
10101fd4:	d8c00015 	stw	r3,0(sp)
10101fd8:	d8800115 	stw	r2,4(sp)
10101fdc:	01c00084 	movi	r7,2
10101fe0:	980d883a 	mov	r6,r19
10101fe4:	d8c03c15 	stw	r3,240(sp)
10101fe8:	da003d15 	stw	r8,244(sp)
10101fec:	0102ef00 	call	10102ef0 <_dtoa_r>
10101ff0:	1021883a 	mov	r16,r2
10101ff4:	008019c4 	movi	r2,103
10101ff8:	d8c03c17 	ldw	r3,240(sp)
10101ffc:	da003d17 	ldw	r8,244(sp)
10102000:	88817126 	beq	r17,r2,101025c8 <___vfprintf_internal_r+0x1cfc>
10102004:	008011c4 	movi	r2,71
10102008:	88829226 	beq	r17,r2,10102a54 <___vfprintf_internal_r+0x2188>
1010200c:	80f9883a 	add	fp,r16,r3
10102010:	d9003617 	ldw	r4,216(sp)
10102014:	000d883a 	mov	r6,zero
10102018:	000f883a 	mov	r7,zero
1010201c:	980b883a 	mov	r5,r19
10102020:	da003d15 	stw	r8,244(sp)
10102024:	010bb400 	call	1010bb40 <__eqdf2>
10102028:	da003d17 	ldw	r8,244(sp)
1010202c:	10018d26 	beq	r2,zero,10102664 <___vfprintf_internal_r+0x1d98>
10102030:	d8802117 	ldw	r2,132(sp)
10102034:	1700062e 	bgeu	r2,fp,10102050 <___vfprintf_internal_r+0x1784>
10102038:	01000c04 	movi	r4,48
1010203c:	10c00044 	addi	r3,r2,1
10102040:	d8c02115 	stw	r3,132(sp)
10102044:	11000005 	stb	r4,0(r2)
10102048:	d8802117 	ldw	r2,132(sp)
1010204c:	173ffb36 	bltu	r2,fp,1010203c <__alt_data_end+0xfffe203c>
10102050:	1405c83a 	sub	r2,r2,r16
10102054:	d8803315 	stw	r2,204(sp)
10102058:	008011c4 	movi	r2,71
1010205c:	b0817626 	beq	r22,r2,10102638 <___vfprintf_internal_r+0x1d6c>
10102060:	00801944 	movi	r2,101
10102064:	1442810e 	bge	r2,r17,10102a6c <___vfprintf_internal_r+0x21a0>
10102068:	d8c02617 	ldw	r3,152(sp)
1010206c:	00801984 	movi	r2,102
10102070:	d8c03215 	stw	r3,200(sp)
10102074:	8881fe26 	beq	r17,r2,10102870 <___vfprintf_internal_r+0x1fa4>
10102078:	d8c03217 	ldw	r3,200(sp)
1010207c:	d9003317 	ldw	r4,204(sp)
10102080:	1901dd16 	blt	r3,r4,101027f8 <___vfprintf_internal_r+0x1f2c>
10102084:	9480004c 	andi	r18,r18,1
10102088:	90022b1e 	bne	r18,zero,10102938 <___vfprintf_internal_r+0x206c>
1010208c:	1805883a 	mov	r2,r3
10102090:	18028016 	blt	r3,zero,10102a94 <___vfprintf_internal_r+0x21c8>
10102094:	d8c03217 	ldw	r3,200(sp)
10102098:	044019c4 	movi	r17,103
1010209c:	d8c02e15 	stw	r3,184(sp)
101020a0:	df002a07 	ldb	fp,168(sp)
101020a4:	e001531e 	bne	fp,zero,101025f4 <___vfprintf_internal_r+0x1d28>
101020a8:	df002783 	ldbu	fp,158(sp)
101020ac:	d8802a15 	stw	r2,168(sp)
101020b0:	dc802b17 	ldw	r18,172(sp)
101020b4:	d8002915 	stw	zero,164(sp)
101020b8:	003bd106 	br	10101000 <__alt_data_end+0xfffe1000>
101020bc:	d8802d17 	ldw	r2,180(sp)
101020c0:	d8c02d17 	ldw	r3,180(sp)
101020c4:	d9002d17 	ldw	r4,180(sp)
101020c8:	10800017 	ldw	r2,0(r2)
101020cc:	18c00117 	ldw	r3,4(r3)
101020d0:	21000204 	addi	r4,r4,8
101020d4:	d8803615 	stw	r2,216(sp)
101020d8:	d8c03815 	stw	r3,224(sp)
101020dc:	d9002d15 	stw	r4,180(sp)
101020e0:	003b7506 	br	10100eb8 <__alt_data_end+0xfffe0eb8>
101020e4:	ac400007 	ldb	r17,0(r21)
101020e8:	003a5906 	br	10100a50 <__alt_data_end+0xfffe0a50>
101020ec:	9080100c 	andi	r2,r18,64
101020f0:	1000a826 	beq	r2,zero,10102394 <___vfprintf_internal_r+0x1ac8>
101020f4:	d9002d17 	ldw	r4,180(sp)
101020f8:	002d883a 	mov	r22,zero
101020fc:	24c0000b 	ldhu	r19,0(r4)
10102100:	21000104 	addi	r4,r4,4
10102104:	d9002d15 	stw	r4,180(sp)
10102108:	003ccb06 	br	10101438 <__alt_data_end+0xfffe1438>
1010210c:	d8c02d17 	ldw	r3,180(sp)
10102110:	d9002917 	ldw	r4,164(sp)
10102114:	002d883a 	mov	r22,zero
10102118:	18800104 	addi	r2,r3,4
1010211c:	1cc00017 	ldw	r19,0(r3)
10102120:	203ebb0e 	bge	r4,zero,10101c10 <__alt_data_end+0xfffe1c10>
10102124:	003ef106 	br	10101cec <__alt_data_end+0xfffe1cec>
10102128:	9080040c 	andi	r2,r18,16
1010212c:	1000921e 	bne	r2,zero,10102378 <___vfprintf_internal_r+0x1aac>
10102130:	9480100c 	andi	r18,r18,64
10102134:	90013926 	beq	r18,zero,1010261c <___vfprintf_internal_r+0x1d50>
10102138:	d9002d17 	ldw	r4,180(sp)
1010213c:	d9402f17 	ldw	r5,188(sp)
10102140:	20800017 	ldw	r2,0(r4)
10102144:	21000104 	addi	r4,r4,4
10102148:	d9002d15 	stw	r4,180(sp)
1010214c:	1140000d 	sth	r5,0(r2)
10102150:	003a1606 	br	101009ac <__alt_data_end+0xfffe09ac>
10102154:	9080100c 	andi	r2,r18,64
10102158:	10008026 	beq	r2,zero,1010235c <___vfprintf_internal_r+0x1a90>
1010215c:	d8c02d17 	ldw	r3,180(sp)
10102160:	1cc0000f 	ldh	r19,0(r3)
10102164:	18c00104 	addi	r3,r3,4
10102168:	d8c02d15 	stw	r3,180(sp)
1010216c:	982dd7fa 	srai	r22,r19,31
10102170:	b005883a 	mov	r2,r22
10102174:	003b1f06 	br	10100df4 <__alt_data_end+0xfffe0df4>
10102178:	9080100c 	andi	r2,r18,64
1010217c:	d8002785 	stb	zero,158(sp)
10102180:	10008a1e 	bne	r2,zero,101023ac <___vfprintf_internal_r+0x1ae0>
10102184:	d9402d17 	ldw	r5,180(sp)
10102188:	d8c02917 	ldw	r3,164(sp)
1010218c:	002d883a 	mov	r22,zero
10102190:	28800104 	addi	r2,r5,4
10102194:	2cc00017 	ldw	r19,0(r5)
10102198:	183e4b0e 	bge	r3,zero,10101ac8 <__alt_data_end+0xfffe1ac8>
1010219c:	9d86b03a 	or	r3,r19,r22
101021a0:	d8802d15 	stw	r2,180(sp)
101021a4:	183e4c1e 	bne	r3,zero,10101ad8 <__alt_data_end+0xfffe1ad8>
101021a8:	0039883a 	mov	fp,zero
101021ac:	0005883a 	mov	r2,zero
101021b0:	003d4006 	br	101016b4 <__alt_data_end+0xfffe16b4>
101021b4:	01440474 	movhi	r5,4113
101021b8:	297dc684 	addi	r5,r5,-2278
101021bc:	d9402b15 	stw	r5,172(sp)
101021c0:	d9402b17 	ldw	r5,172(sp)
101021c4:	1c47883a 	add	r3,r3,r17
101021c8:	10800044 	addi	r2,r2,1
101021cc:	41400015 	stw	r5,0(r8)
101021d0:	44400115 	stw	r17,4(r8)
101021d4:	d8c02015 	stw	r3,128(sp)
101021d8:	d8801f15 	stw	r2,124(sp)
101021dc:	010001c4 	movi	r4,7
101021e0:	20bec816 	blt	r4,r2,10101d04 <__alt_data_end+0xfffe1d04>
101021e4:	42000204 	addi	r8,r8,8
101021e8:	003ecd06 	br	10101d20 <__alt_data_end+0xfffe1d20>
101021ec:	d9002917 	ldw	r4,164(sp)
101021f0:	d8002785 	stb	zero,158(sp)
101021f4:	203d2d16 	blt	r4,zero,101016ac <__alt_data_end+0xfffe16ac>
101021f8:	00bfdfc4 	movi	r2,-129
101021fc:	90a4703a 	and	r18,r18,r2
10102200:	003a9106 	br	10100c48 <__alt_data_end+0xfffe0c48>
10102204:	01040474 	movhi	r4,4113
10102208:	213dc684 	addi	r4,r4,-2278
1010220c:	d9002b15 	stw	r4,172(sp)
10102210:	003c0c06 	br	10101244 <__alt_data_end+0xfffe1244>
10102214:	d9002c17 	ldw	r4,176(sp)
10102218:	d9801e04 	addi	r6,sp,120
1010221c:	b80b883a 	mov	r5,r23
10102220:	0107ec80 	call	10107ec8 <__sprint_r>
10102224:	103aab1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10102228:	d8c02017 	ldw	r3,128(sp)
1010222c:	da000404 	addi	r8,sp,16
10102230:	003d4106 	br	10101738 <__alt_data_end+0xfffe1738>
10102234:	d8801f17 	ldw	r2,124(sp)
10102238:	01440474 	movhi	r5,4113
1010223c:	01000044 	movi	r4,1
10102240:	18c00044 	addi	r3,r3,1
10102244:	10800044 	addi	r2,r2,1
10102248:	297dc604 	addi	r5,r5,-2280
1010224c:	41000115 	stw	r4,4(r8)
10102250:	41400015 	stw	r5,0(r8)
10102254:	d8c02015 	stw	r3,128(sp)
10102258:	d8801f15 	stw	r2,124(sp)
1010225c:	010001c4 	movi	r4,7
10102260:	20805c16 	blt	r4,r2,101023d4 <___vfprintf_internal_r+0x1b08>
10102264:	42000204 	addi	r8,r8,8
10102268:	8800041e 	bne	r17,zero,1010227c <___vfprintf_internal_r+0x19b0>
1010226c:	d8803317 	ldw	r2,204(sp)
10102270:	1000021e 	bne	r2,zero,1010227c <___vfprintf_internal_r+0x19b0>
10102274:	9080004c 	andi	r2,r18,1
10102278:	103c0926 	beq	r2,zero,101012a0 <__alt_data_end+0xfffe12a0>
1010227c:	d9003717 	ldw	r4,220(sp)
10102280:	d8801f17 	ldw	r2,124(sp)
10102284:	d9403417 	ldw	r5,208(sp)
10102288:	20c7883a 	add	r3,r4,r3
1010228c:	10800044 	addi	r2,r2,1
10102290:	41000115 	stw	r4,4(r8)
10102294:	41400015 	stw	r5,0(r8)
10102298:	d8c02015 	stw	r3,128(sp)
1010229c:	d8801f15 	stw	r2,124(sp)
101022a0:	010001c4 	movi	r4,7
101022a4:	20812116 	blt	r4,r2,1010272c <___vfprintf_internal_r+0x1e60>
101022a8:	42000204 	addi	r8,r8,8
101022ac:	0463c83a 	sub	r17,zero,r17
101022b0:	0440730e 	bge	zero,r17,10102480 <___vfprintf_internal_r+0x1bb4>
101022b4:	05800404 	movi	r22,16
101022b8:	b440860e 	bge	r22,r17,101024d4 <___vfprintf_internal_r+0x1c08>
101022bc:	01440474 	movhi	r5,4113
101022c0:	297dc684 	addi	r5,r5,-2278
101022c4:	d9402b15 	stw	r5,172(sp)
101022c8:	070001c4 	movi	fp,7
101022cc:	dcc02c17 	ldw	r19,176(sp)
101022d0:	00000306 	br	101022e0 <___vfprintf_internal_r+0x1a14>
101022d4:	42000204 	addi	r8,r8,8
101022d8:	8c7ffc04 	addi	r17,r17,-16
101022dc:	b440800e 	bge	r22,r17,101024e0 <___vfprintf_internal_r+0x1c14>
101022e0:	18c00404 	addi	r3,r3,16
101022e4:	10800044 	addi	r2,r2,1
101022e8:	45000015 	stw	r20,0(r8)
101022ec:	45800115 	stw	r22,4(r8)
101022f0:	d8c02015 	stw	r3,128(sp)
101022f4:	d8801f15 	stw	r2,124(sp)
101022f8:	e0bff60e 	bge	fp,r2,101022d4 <__alt_data_end+0xfffe22d4>
101022fc:	d9801e04 	addi	r6,sp,120
10102300:	b80b883a 	mov	r5,r23
10102304:	9809883a 	mov	r4,r19
10102308:	0107ec80 	call	10107ec8 <__sprint_r>
1010230c:	103a711e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10102310:	d8c02017 	ldw	r3,128(sp)
10102314:	d8801f17 	ldw	r2,124(sp)
10102318:	da000404 	addi	r8,sp,16
1010231c:	003fee06 	br	101022d8 <__alt_data_end+0xfffe22d8>
10102320:	00bfffc4 	movi	r2,-1
10102324:	003a6f06 	br	10100ce4 <__alt_data_end+0xfffe0ce4>
10102328:	008011c4 	movi	r2,71
1010232c:	1440b816 	blt	r2,r17,10102610 <___vfprintf_internal_r+0x1d44>
10102330:	04040474 	movhi	r16,4113
10102334:	843db804 	addi	r16,r16,-2336
10102338:	00c000c4 	movi	r3,3
1010233c:	00bfdfc4 	movi	r2,-129
10102340:	d8c02a15 	stw	r3,168(sp)
10102344:	90a4703a 	and	r18,r18,r2
10102348:	df002783 	ldbu	fp,158(sp)
1010234c:	d8c02e15 	stw	r3,184(sp)
10102350:	d8002915 	stw	zero,164(sp)
10102354:	d8003215 	stw	zero,200(sp)
10102358:	003b2906 	br	10101000 <__alt_data_end+0xfffe1000>
1010235c:	d9002d17 	ldw	r4,180(sp)
10102360:	24c00017 	ldw	r19,0(r4)
10102364:	21000104 	addi	r4,r4,4
10102368:	d9002d15 	stw	r4,180(sp)
1010236c:	982dd7fa 	srai	r22,r19,31
10102370:	b005883a 	mov	r2,r22
10102374:	003a9f06 	br	10100df4 <__alt_data_end+0xfffe0df4>
10102378:	d9402d17 	ldw	r5,180(sp)
1010237c:	d8c02f17 	ldw	r3,188(sp)
10102380:	28800017 	ldw	r2,0(r5)
10102384:	29400104 	addi	r5,r5,4
10102388:	d9402d15 	stw	r5,180(sp)
1010238c:	10c00015 	stw	r3,0(r2)
10102390:	00398606 	br	101009ac <__alt_data_end+0xfffe09ac>
10102394:	d9402d17 	ldw	r5,180(sp)
10102398:	002d883a 	mov	r22,zero
1010239c:	2cc00017 	ldw	r19,0(r5)
101023a0:	29400104 	addi	r5,r5,4
101023a4:	d9402d15 	stw	r5,180(sp)
101023a8:	003c2306 	br	10101438 <__alt_data_end+0xfffe1438>
101023ac:	d8c02d17 	ldw	r3,180(sp)
101023b0:	d9002917 	ldw	r4,164(sp)
101023b4:	002d883a 	mov	r22,zero
101023b8:	18800104 	addi	r2,r3,4
101023bc:	1cc0000b 	ldhu	r19,0(r3)
101023c0:	203dc10e 	bge	r4,zero,10101ac8 <__alt_data_end+0xfffe1ac8>
101023c4:	003f7506 	br	1010219c <__alt_data_end+0xfffe219c>
101023c8:	04040474 	movhi	r16,4113
101023cc:	843db604 	addi	r16,r16,-2344
101023d0:	003acc06 	br	10100f04 <__alt_data_end+0xfffe0f04>
101023d4:	d9002c17 	ldw	r4,176(sp)
101023d8:	d9801e04 	addi	r6,sp,120
101023dc:	b80b883a 	mov	r5,r23
101023e0:	0107ec80 	call	10107ec8 <__sprint_r>
101023e4:	103a3b1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
101023e8:	dc402617 	ldw	r17,152(sp)
101023ec:	d8c02017 	ldw	r3,128(sp)
101023f0:	da000404 	addi	r8,sp,16
101023f4:	003f9c06 	br	10102268 <__alt_data_end+0xfffe2268>
101023f8:	ac400043 	ldbu	r17,1(r21)
101023fc:	94800814 	ori	r18,r18,32
10102400:	ad400044 	addi	r21,r21,1
10102404:	8c403fcc 	andi	r17,r17,255
10102408:	8c40201c 	xori	r17,r17,128
1010240c:	8c7fe004 	addi	r17,r17,-128
10102410:	00398f06 	br	10100a50 <__alt_data_end+0xfffe0a50>
10102414:	d8c02d15 	stw	r3,180(sp)
10102418:	0039883a 	mov	fp,zero
1010241c:	003e3506 	br	10101cf4 <__alt_data_end+0xfffe1cf4>
10102420:	d9002c17 	ldw	r4,176(sp)
10102424:	d9801e04 	addi	r6,sp,120
10102428:	b80b883a 	mov	r5,r23
1010242c:	0107ec80 	call	10107ec8 <__sprint_r>
10102430:	103a281e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10102434:	d8c02017 	ldw	r3,128(sp)
10102438:	da000404 	addi	r8,sp,16
1010243c:	003cd006 	br	10101780 <__alt_data_end+0xfffe1780>
10102440:	8009883a 	mov	r4,r16
10102444:	da003d15 	stw	r8,244(sp)
10102448:	01008340 	call	10100834 <strlen>
1010244c:	d8802e15 	stw	r2,184(sp)
10102450:	da003d17 	ldw	r8,244(sp)
10102454:	103c340e 	bge	r2,zero,10101528 <__alt_data_end+0xfffe1528>
10102458:	0005883a 	mov	r2,zero
1010245c:	003c3206 	br	10101528 <__alt_data_end+0xfffe1528>
10102460:	d9002c17 	ldw	r4,176(sp)
10102464:	d9801e04 	addi	r6,sp,120
10102468:	b80b883a 	mov	r5,r23
1010246c:	0107ec80 	call	10107ec8 <__sprint_r>
10102470:	103a181e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10102474:	d8c02017 	ldw	r3,128(sp)
10102478:	d8801f17 	ldw	r2,124(sp)
1010247c:	da000404 	addi	r8,sp,16
10102480:	d9403317 	ldw	r5,204(sp)
10102484:	10800044 	addi	r2,r2,1
10102488:	44000015 	stw	r16,0(r8)
1010248c:	28c7883a 	add	r3,r5,r3
10102490:	003b7d06 	br	10101288 <__alt_data_end+0xfffe1288>
10102494:	01040474 	movhi	r4,4113
10102498:	213dca84 	addi	r4,r4,-2262
1010249c:	d9003515 	stw	r4,212(sp)
101024a0:	003b1406 	br	101010f4 <__alt_data_end+0xfffe10f4>
101024a4:	013fffc4 	movi	r4,-1
101024a8:	003a3506 	br	10100d80 <__alt_data_end+0xfffe0d80>
101024ac:	0023883a 	mov	r17,zero
101024b0:	003d9d06 	br	10101b28 <__alt_data_end+0xfffe1b28>
101024b4:	d9002c17 	ldw	r4,176(sp)
101024b8:	d9801e04 	addi	r6,sp,120
101024bc:	b80b883a 	mov	r5,r23
101024c0:	0107ec80 	call	10107ec8 <__sprint_r>
101024c4:	103a031e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
101024c8:	d8c02017 	ldw	r3,128(sp)
101024cc:	da000404 	addi	r8,sp,16
101024d0:	003d9406 	br	10101b24 <__alt_data_end+0xfffe1b24>
101024d4:	01040474 	movhi	r4,4113
101024d8:	213dc684 	addi	r4,r4,-2278
101024dc:	d9002b15 	stw	r4,172(sp)
101024e0:	d9002b17 	ldw	r4,172(sp)
101024e4:	1c47883a 	add	r3,r3,r17
101024e8:	10800044 	addi	r2,r2,1
101024ec:	41000015 	stw	r4,0(r8)
101024f0:	44400115 	stw	r17,4(r8)
101024f4:	d8c02015 	stw	r3,128(sp)
101024f8:	d8801f15 	stw	r2,124(sp)
101024fc:	010001c4 	movi	r4,7
10102500:	20bfd716 	blt	r4,r2,10102460 <__alt_data_end+0xfffe2460>
10102504:	42000204 	addi	r8,r8,8
10102508:	003fdd06 	br	10102480 <__alt_data_end+0xfffe2480>
1010250c:	d9002c17 	ldw	r4,176(sp)
10102510:	d9801e04 	addi	r6,sp,120
10102514:	b80b883a 	mov	r5,r23
10102518:	0107ec80 	call	10107ec8 <__sprint_r>
1010251c:	1039ed1e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10102520:	d8802617 	ldw	r2,152(sp)
10102524:	d8c02017 	ldw	r3,128(sp)
10102528:	da000404 	addi	r8,sp,16
1010252c:	003e1006 	br	10101d70 <__alt_data_end+0xfffe1d70>
10102530:	00800044 	movi	r2,1
10102534:	10803fcc 	andi	r2,r2,255
10102538:	00c00044 	movi	r3,1
1010253c:	10fa3526 	beq	r2,r3,10100e14 <__alt_data_end+0xfffe0e14>
10102540:	00c00084 	movi	r3,2
10102544:	10fbcb26 	beq	r2,r3,10101474 <__alt_data_end+0xfffe1474>
10102548:	003a8f06 	br	10100f88 <__alt_data_end+0xfffe0f88>
1010254c:	01040474 	movhi	r4,4113
10102550:	213dca84 	addi	r4,r4,-2262
10102554:	d9003515 	stw	r4,212(sp)
10102558:	003b7606 	br	10101334 <__alt_data_end+0xfffe1334>
1010255c:	d8802917 	ldw	r2,164(sp)
10102560:	00c00184 	movi	r3,6
10102564:	1880012e 	bgeu	r3,r2,1010256c <___vfprintf_internal_r+0x1ca0>
10102568:	1805883a 	mov	r2,r3
1010256c:	d8802e15 	stw	r2,184(sp)
10102570:	1000ef16 	blt	r2,zero,10102930 <___vfprintf_internal_r+0x2064>
10102574:	04040474 	movhi	r16,4113
10102578:	d8802a15 	stw	r2,168(sp)
1010257c:	dcc02d15 	stw	r19,180(sp)
10102580:	d8002915 	stw	zero,164(sp)
10102584:	d8003215 	stw	zero,200(sp)
10102588:	843dc404 	addi	r16,r16,-2288
1010258c:	0039883a 	mov	fp,zero
10102590:	003aa206 	br	1010101c <__alt_data_end+0xfffe101c>
10102594:	0021883a 	mov	r16,zero
10102598:	003e0706 	br	10101db8 <__alt_data_end+0xfffe1db8>
1010259c:	d9002c17 	ldw	r4,176(sp)
101025a0:	d9801e04 	addi	r6,sp,120
101025a4:	b80b883a 	mov	r5,r23
101025a8:	0107ec80 	call	10107ec8 <__sprint_r>
101025ac:	1039c91e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
101025b0:	d8802617 	ldw	r2,152(sp)
101025b4:	d9403317 	ldw	r5,204(sp)
101025b8:	d8c02017 	ldw	r3,128(sp)
101025bc:	da000404 	addi	r8,sp,16
101025c0:	2885c83a 	sub	r2,r5,r2
101025c4:	003dfb06 	br	10101db4 <__alt_data_end+0xfffe1db4>
101025c8:	9080004c 	andi	r2,r18,1
101025cc:	103e8f1e 	bne	r2,zero,1010200c <__alt_data_end+0xfffe200c>
101025d0:	d8802117 	ldw	r2,132(sp)
101025d4:	003e9e06 	br	10102050 <__alt_data_end+0xfffe2050>
101025d8:	1025883a 	mov	r18,r2
101025dc:	0039883a 	mov	fp,zero
101025e0:	00800084 	movi	r2,2
101025e4:	003fd306 	br	10102534 <__alt_data_end+0xfffe2534>
101025e8:	07000b44 	movi	fp,45
101025ec:	df002785 	stb	fp,158(sp)
101025f0:	003a4006 	br	10100ef4 <__alt_data_end+0xfffe0ef4>
101025f4:	00c00b44 	movi	r3,45
101025f8:	d8c02785 	stb	r3,158(sp)
101025fc:	d8802a15 	stw	r2,168(sp)
10102600:	dc802b17 	ldw	r18,172(sp)
10102604:	d8002915 	stw	zero,164(sp)
10102608:	07000b44 	movi	fp,45
1010260c:	003a8006 	br	10101010 <__alt_data_end+0xfffe1010>
10102610:	04040474 	movhi	r16,4113
10102614:	843db904 	addi	r16,r16,-2332
10102618:	003f4706 	br	10102338 <__alt_data_end+0xfffe2338>
1010261c:	d8c02d17 	ldw	r3,180(sp)
10102620:	d9002f17 	ldw	r4,188(sp)
10102624:	18800017 	ldw	r2,0(r3)
10102628:	18c00104 	addi	r3,r3,4
1010262c:	d8c02d15 	stw	r3,180(sp)
10102630:	11000015 	stw	r4,0(r2)
10102634:	0038dd06 	br	101009ac <__alt_data_end+0xfffe09ac>
10102638:	dd802617 	ldw	r22,152(sp)
1010263c:	00bfff44 	movi	r2,-3
10102640:	b0801c16 	blt	r22,r2,101026b4 <___vfprintf_internal_r+0x1de8>
10102644:	d9402917 	ldw	r5,164(sp)
10102648:	2d801a16 	blt	r5,r22,101026b4 <___vfprintf_internal_r+0x1de8>
1010264c:	dd803215 	stw	r22,200(sp)
10102650:	003e8906 	br	10102078 <__alt_data_end+0xfffe2078>
10102654:	01040474 	movhi	r4,4113
10102658:	213dc684 	addi	r4,r4,-2278
1010265c:	d9002b15 	stw	r4,172(sp)
10102660:	003c9106 	br	101018a8 <__alt_data_end+0xfffe18a8>
10102664:	e005883a 	mov	r2,fp
10102668:	003e7906 	br	10102050 <__alt_data_end+0xfffe2050>
1010266c:	d9402917 	ldw	r5,164(sp)
10102670:	df002783 	ldbu	fp,158(sp)
10102674:	dcc02d15 	stw	r19,180(sp)
10102678:	d9402a15 	stw	r5,168(sp)
1010267c:	d9402e15 	stw	r5,184(sp)
10102680:	d8002915 	stw	zero,164(sp)
10102684:	d8003215 	stw	zero,200(sp)
10102688:	003a5d06 	br	10101000 <__alt_data_end+0xfffe1000>
1010268c:	9080004c 	andi	r2,r18,1
10102690:	0039883a 	mov	fp,zero
10102694:	10000426 	beq	r2,zero,101026a8 <___vfprintf_internal_r+0x1ddc>
10102698:	00800c04 	movi	r2,48
1010269c:	dc001dc4 	addi	r16,sp,119
101026a0:	d8801dc5 	stb	r2,119(sp)
101026a4:	003b8006 	br	101014a8 <__alt_data_end+0xfffe14a8>
101026a8:	d8002e15 	stw	zero,184(sp)
101026ac:	dc001e04 	addi	r16,sp,120
101026b0:	003a4d06 	br	10100fe8 <__alt_data_end+0xfffe0fe8>
101026b4:	8c7fff84 	addi	r17,r17,-2
101026b8:	b5bfffc4 	addi	r22,r22,-1
101026bc:	dd802615 	stw	r22,152(sp)
101026c0:	dc4022c5 	stb	r17,139(sp)
101026c4:	b000bf16 	blt	r22,zero,101029c4 <___vfprintf_internal_r+0x20f8>
101026c8:	00800ac4 	movi	r2,43
101026cc:	d8802305 	stb	r2,140(sp)
101026d0:	00800244 	movi	r2,9
101026d4:	15807016 	blt	r2,r22,10102898 <___vfprintf_internal_r+0x1fcc>
101026d8:	00800c04 	movi	r2,48
101026dc:	b5800c04 	addi	r22,r22,48
101026e0:	d8802345 	stb	r2,141(sp)
101026e4:	dd802385 	stb	r22,142(sp)
101026e8:	d88023c4 	addi	r2,sp,143
101026ec:	df0022c4 	addi	fp,sp,139
101026f0:	d8c03317 	ldw	r3,204(sp)
101026f4:	1739c83a 	sub	fp,r2,fp
101026f8:	d9003317 	ldw	r4,204(sp)
101026fc:	e0c7883a 	add	r3,fp,r3
10102700:	df003a15 	stw	fp,232(sp)
10102704:	d8c02e15 	stw	r3,184(sp)
10102708:	00800044 	movi	r2,1
1010270c:	1100b30e 	bge	r2,r4,101029dc <___vfprintf_internal_r+0x2110>
10102710:	d8c02e17 	ldw	r3,184(sp)
10102714:	18c00044 	addi	r3,r3,1
10102718:	d8c02e15 	stw	r3,184(sp)
1010271c:	1805883a 	mov	r2,r3
10102720:	1800ac16 	blt	r3,zero,101029d4 <___vfprintf_internal_r+0x2108>
10102724:	d8003215 	stw	zero,200(sp)
10102728:	003e5d06 	br	101020a0 <__alt_data_end+0xfffe20a0>
1010272c:	d9002c17 	ldw	r4,176(sp)
10102730:	d9801e04 	addi	r6,sp,120
10102734:	b80b883a 	mov	r5,r23
10102738:	0107ec80 	call	10107ec8 <__sprint_r>
1010273c:	1039651e 	bne	r2,zero,10100cd4 <__alt_data_end+0xfffe0cd4>
10102740:	dc402617 	ldw	r17,152(sp)
10102744:	d8c02017 	ldw	r3,128(sp)
10102748:	d8801f17 	ldw	r2,124(sp)
1010274c:	da000404 	addi	r8,sp,16
10102750:	003ed606 	br	101022ac <__alt_data_end+0xfffe22ac>
10102754:	582b883a 	mov	r21,r11
10102758:	d8002915 	stw	zero,164(sp)
1010275c:	0038bd06 	br	10100a54 <__alt_data_end+0xfffe0a54>
10102760:	d8802917 	ldw	r2,164(sp)
10102764:	103e071e 	bne	r2,zero,10101f84 <__alt_data_end+0xfffe1f84>
10102768:	dc002915 	stw	r16,164(sp)
1010276c:	003e0506 	br	10101f84 <__alt_data_end+0xfffe1f84>
10102770:	d9002917 	ldw	r4,164(sp)
10102774:	20c00044 	addi	r3,r4,1
10102778:	003e0f06 	br	10101fb8 <__alt_data_end+0xfffe1fb8>
1010277c:	01400184 	movi	r5,6
10102780:	d9402915 	stw	r5,164(sp)
10102784:	003dff06 	br	10101f84 <__alt_data_end+0xfffe1f84>
10102788:	d8802104 	addi	r2,sp,132
1010278c:	d8800315 	stw	r2,12(sp)
10102790:	d8802504 	addi	r2,sp,148
10102794:	d8800215 	stw	r2,8(sp)
10102798:	d8802604 	addi	r2,sp,152
1010279c:	d8800115 	stw	r2,4(sp)
101027a0:	d8802917 	ldw	r2,164(sp)
101027a4:	d9403617 	ldw	r5,216(sp)
101027a8:	d9002c17 	ldw	r4,176(sp)
101027ac:	d8800015 	stw	r2,0(sp)
101027b0:	01c000c4 	movi	r7,3
101027b4:	980d883a 	mov	r6,r19
101027b8:	da003d15 	stw	r8,244(sp)
101027bc:	0102ef00 	call	10102ef0 <_dtoa_r>
101027c0:	d8c02917 	ldw	r3,164(sp)
101027c4:	da003d17 	ldw	r8,244(sp)
101027c8:	1021883a 	mov	r16,r2
101027cc:	10f9883a 	add	fp,r2,r3
101027d0:	81000007 	ldb	r4,0(r16)
101027d4:	00800c04 	movi	r2,48
101027d8:	20805e26 	beq	r4,r2,10102954 <___vfprintf_internal_r+0x2088>
101027dc:	d8c02617 	ldw	r3,152(sp)
101027e0:	e0f9883a 	add	fp,fp,r3
101027e4:	003e0a06 	br	10102010 <__alt_data_end+0xfffe2010>
101027e8:	00c00b44 	movi	r3,45
101027ec:	24e0003c 	xorhi	r19,r4,32768
101027f0:	d8c02a05 	stb	r3,168(sp)
101027f4:	003de906 	br	10101f9c <__alt_data_end+0xfffe1f9c>
101027f8:	d8c03217 	ldw	r3,200(sp)
101027fc:	00c07a0e 	bge	zero,r3,101029e8 <___vfprintf_internal_r+0x211c>
10102800:	00800044 	movi	r2,1
10102804:	d9003317 	ldw	r4,204(sp)
10102808:	1105883a 	add	r2,r2,r4
1010280c:	d8802e15 	stw	r2,184(sp)
10102810:	10004e16 	blt	r2,zero,1010294c <___vfprintf_internal_r+0x2080>
10102814:	044019c4 	movi	r17,103
10102818:	003e2106 	br	101020a0 <__alt_data_end+0xfffe20a0>
1010281c:	d9002917 	ldw	r4,164(sp)
10102820:	d8802104 	addi	r2,sp,132
10102824:	d8800315 	stw	r2,12(sp)
10102828:	d9000015 	stw	r4,0(sp)
1010282c:	d8802504 	addi	r2,sp,148
10102830:	d9403617 	ldw	r5,216(sp)
10102834:	d9002c17 	ldw	r4,176(sp)
10102838:	d8800215 	stw	r2,8(sp)
1010283c:	d8802604 	addi	r2,sp,152
10102840:	d8800115 	stw	r2,4(sp)
10102844:	01c000c4 	movi	r7,3
10102848:	980d883a 	mov	r6,r19
1010284c:	da003d15 	stw	r8,244(sp)
10102850:	0102ef00 	call	10102ef0 <_dtoa_r>
10102854:	d8c02917 	ldw	r3,164(sp)
10102858:	da003d17 	ldw	r8,244(sp)
1010285c:	1021883a 	mov	r16,r2
10102860:	00801184 	movi	r2,70
10102864:	80f9883a 	add	fp,r16,r3
10102868:	88bfd926 	beq	r17,r2,101027d0 <__alt_data_end+0xfffe27d0>
1010286c:	003de806 	br	10102010 <__alt_data_end+0xfffe2010>
10102870:	d9002917 	ldw	r4,164(sp)
10102874:	00c04d0e 	bge	zero,r3,101029ac <___vfprintf_internal_r+0x20e0>
10102878:	2000441e 	bne	r4,zero,1010298c <___vfprintf_internal_r+0x20c0>
1010287c:	9480004c 	andi	r18,r18,1
10102880:	9000421e 	bne	r18,zero,1010298c <___vfprintf_internal_r+0x20c0>
10102884:	1805883a 	mov	r2,r3
10102888:	18007016 	blt	r3,zero,10102a4c <___vfprintf_internal_r+0x2180>
1010288c:	d8c03217 	ldw	r3,200(sp)
10102890:	d8c02e15 	stw	r3,184(sp)
10102894:	003e0206 	br	101020a0 <__alt_data_end+0xfffe20a0>
10102898:	df0022c4 	addi	fp,sp,139
1010289c:	dc002915 	stw	r16,164(sp)
101028a0:	4027883a 	mov	r19,r8
101028a4:	e021883a 	mov	r16,fp
101028a8:	b009883a 	mov	r4,r22
101028ac:	01400284 	movi	r5,10
101028b0:	010a87c0 	call	1010a87c <__modsi3>
101028b4:	10800c04 	addi	r2,r2,48
101028b8:	843fffc4 	addi	r16,r16,-1
101028bc:	b009883a 	mov	r4,r22
101028c0:	01400284 	movi	r5,10
101028c4:	80800005 	stb	r2,0(r16)
101028c8:	010a7f80 	call	1010a7f8 <__divsi3>
101028cc:	102d883a 	mov	r22,r2
101028d0:	00800244 	movi	r2,9
101028d4:	15bff416 	blt	r2,r22,101028a8 <__alt_data_end+0xfffe28a8>
101028d8:	9811883a 	mov	r8,r19
101028dc:	b0800c04 	addi	r2,r22,48
101028e0:	8027883a 	mov	r19,r16
101028e4:	997fffc4 	addi	r5,r19,-1
101028e8:	98bfffc5 	stb	r2,-1(r19)
101028ec:	dc002917 	ldw	r16,164(sp)
101028f0:	2f006a2e 	bgeu	r5,fp,10102a9c <___vfprintf_internal_r+0x21d0>
101028f4:	d9c02384 	addi	r7,sp,142
101028f8:	3ccfc83a 	sub	r7,r7,r19
101028fc:	d9002344 	addi	r4,sp,141
10102900:	e1cf883a 	add	r7,fp,r7
10102904:	00000106 	br	1010290c <___vfprintf_internal_r+0x2040>
10102908:	28800003 	ldbu	r2,0(r5)
1010290c:	20800005 	stb	r2,0(r4)
10102910:	21000044 	addi	r4,r4,1
10102914:	29400044 	addi	r5,r5,1
10102918:	393ffb1e 	bne	r7,r4,10102908 <__alt_data_end+0xfffe2908>
1010291c:	d8802304 	addi	r2,sp,140
10102920:	14c5c83a 	sub	r2,r2,r19
10102924:	d8c02344 	addi	r3,sp,141
10102928:	1885883a 	add	r2,r3,r2
1010292c:	003f7006 	br	101026f0 <__alt_data_end+0xfffe26f0>
10102930:	0005883a 	mov	r2,zero
10102934:	003f0f06 	br	10102574 <__alt_data_end+0xfffe2574>
10102938:	d8c03217 	ldw	r3,200(sp)
1010293c:	18c00044 	addi	r3,r3,1
10102940:	d8c02e15 	stw	r3,184(sp)
10102944:	1805883a 	mov	r2,r3
10102948:	183fb20e 	bge	r3,zero,10102814 <__alt_data_end+0xfffe2814>
1010294c:	0005883a 	mov	r2,zero
10102950:	003fb006 	br	10102814 <__alt_data_end+0xfffe2814>
10102954:	d9003617 	ldw	r4,216(sp)
10102958:	000d883a 	mov	r6,zero
1010295c:	000f883a 	mov	r7,zero
10102960:	980b883a 	mov	r5,r19
10102964:	d8c03c15 	stw	r3,240(sp)
10102968:	da003d15 	stw	r8,244(sp)
1010296c:	010bb400 	call	1010bb40 <__eqdf2>
10102970:	d8c03c17 	ldw	r3,240(sp)
10102974:	da003d17 	ldw	r8,244(sp)
10102978:	103f9826 	beq	r2,zero,101027dc <__alt_data_end+0xfffe27dc>
1010297c:	00800044 	movi	r2,1
10102980:	10c7c83a 	sub	r3,r2,r3
10102984:	d8c02615 	stw	r3,152(sp)
10102988:	003f9506 	br	101027e0 <__alt_data_end+0xfffe27e0>
1010298c:	d9002917 	ldw	r4,164(sp)
10102990:	d8c03217 	ldw	r3,200(sp)
10102994:	20800044 	addi	r2,r4,1
10102998:	1885883a 	add	r2,r3,r2
1010299c:	d8802e15 	stw	r2,184(sp)
101029a0:	103dbf0e 	bge	r2,zero,101020a0 <__alt_data_end+0xfffe20a0>
101029a4:	0005883a 	mov	r2,zero
101029a8:	003dbd06 	br	101020a0 <__alt_data_end+0xfffe20a0>
101029ac:	2000211e 	bne	r4,zero,10102a34 <___vfprintf_internal_r+0x2168>
101029b0:	9480004c 	andi	r18,r18,1
101029b4:	90001f1e 	bne	r18,zero,10102a34 <___vfprintf_internal_r+0x2168>
101029b8:	00800044 	movi	r2,1
101029bc:	d8802e15 	stw	r2,184(sp)
101029c0:	003db706 	br	101020a0 <__alt_data_end+0xfffe20a0>
101029c4:	00800b44 	movi	r2,45
101029c8:	05adc83a 	sub	r22,zero,r22
101029cc:	d8802305 	stb	r2,140(sp)
101029d0:	003f3f06 	br	101026d0 <__alt_data_end+0xfffe26d0>
101029d4:	0005883a 	mov	r2,zero
101029d8:	003f5206 	br	10102724 <__alt_data_end+0xfffe2724>
101029dc:	90a4703a 	and	r18,r18,r2
101029e0:	903f4e26 	beq	r18,zero,1010271c <__alt_data_end+0xfffe271c>
101029e4:	003f4a06 	br	10102710 <__alt_data_end+0xfffe2710>
101029e8:	00800084 	movi	r2,2
101029ec:	10c5c83a 	sub	r2,r2,r3
101029f0:	003f8406 	br	10102804 <__alt_data_end+0xfffe2804>
101029f4:	d8802d17 	ldw	r2,180(sp)
101029f8:	d9002d17 	ldw	r4,180(sp)
101029fc:	ac400043 	ldbu	r17,1(r21)
10102a00:	10800017 	ldw	r2,0(r2)
10102a04:	582b883a 	mov	r21,r11
10102a08:	d8802915 	stw	r2,164(sp)
10102a0c:	20800104 	addi	r2,r4,4
10102a10:	d9002917 	ldw	r4,164(sp)
10102a14:	d8802d15 	stw	r2,180(sp)
10102a18:	203e7a0e 	bge	r4,zero,10102404 <__alt_data_end+0xfffe2404>
10102a1c:	8c403fcc 	andi	r17,r17,255
10102a20:	00bfffc4 	movi	r2,-1
10102a24:	8c40201c 	xori	r17,r17,128
10102a28:	d8802915 	stw	r2,164(sp)
10102a2c:	8c7fe004 	addi	r17,r17,-128
10102a30:	00380706 	br	10100a50 <__alt_data_end+0xfffe0a50>
10102a34:	d8c02917 	ldw	r3,164(sp)
10102a38:	18c00084 	addi	r3,r3,2
10102a3c:	d8c02e15 	stw	r3,184(sp)
10102a40:	1805883a 	mov	r2,r3
10102a44:	183d960e 	bge	r3,zero,101020a0 <__alt_data_end+0xfffe20a0>
10102a48:	003fd606 	br	101029a4 <__alt_data_end+0xfffe29a4>
10102a4c:	0005883a 	mov	r2,zero
10102a50:	003f8e06 	br	1010288c <__alt_data_end+0xfffe288c>
10102a54:	9080004c 	andi	r2,r18,1
10102a58:	103f811e 	bne	r2,zero,10102860 <__alt_data_end+0xfffe2860>
10102a5c:	d8802117 	ldw	r2,132(sp)
10102a60:	1405c83a 	sub	r2,r2,r16
10102a64:	d8803315 	stw	r2,204(sp)
10102a68:	b47ef326 	beq	r22,r17,10102638 <__alt_data_end+0xfffe2638>
10102a6c:	dd802617 	ldw	r22,152(sp)
10102a70:	003f1106 	br	101026b8 <__alt_data_end+0xfffe26b8>
10102a74:	d9c02785 	stb	r7,158(sp)
10102a78:	00390406 	br	10100e8c <__alt_data_end+0xfffe0e8c>
10102a7c:	d9c02785 	stb	r7,158(sp)
10102a80:	0038d306 	br	10100dd0 <__alt_data_end+0xfffe0dd0>
10102a84:	d9c02785 	stb	r7,158(sp)
10102a88:	003a6106 	br	10101410 <__alt_data_end+0xfffe1410>
10102a8c:	d9c02785 	stb	r7,158(sp)
10102a90:	003af806 	br	10101674 <__alt_data_end+0xfffe1674>
10102a94:	0005883a 	mov	r2,zero
10102a98:	003d7e06 	br	10102094 <__alt_data_end+0xfffe2094>
10102a9c:	d8802344 	addi	r2,sp,141
10102aa0:	003f1306 	br	101026f0 <__alt_data_end+0xfffe26f0>
10102aa4:	d9c02785 	stb	r7,158(sp)
10102aa8:	00392306 	br	10100f38 <__alt_data_end+0xfffe0f38>
10102aac:	d9c02785 	stb	r7,158(sp)
10102ab0:	003aa906 	br	10101558 <__alt_data_end+0xfffe1558>
10102ab4:	d9c02785 	stb	r7,158(sp)
10102ab8:	003a3d06 	br	101013b0 <__alt_data_end+0xfffe13b0>
10102abc:	d9c02785 	stb	r7,158(sp)
10102ac0:	003aca06 	br	101015ec <__alt_data_end+0xfffe15ec>

10102ac4 <__vfprintf_internal>:
10102ac4:	00840474 	movhi	r2,4113
10102ac8:	10852104 	addi	r2,r2,5252
10102acc:	300f883a 	mov	r7,r6
10102ad0:	280d883a 	mov	r6,r5
10102ad4:	200b883a 	mov	r5,r4
10102ad8:	11000017 	ldw	r4,0(r2)
10102adc:	01008cc1 	jmpi	101008cc <___vfprintf_internal_r>

10102ae0 <__sbprintf>:
10102ae0:	2880030b 	ldhu	r2,12(r5)
10102ae4:	2ac01917 	ldw	r11,100(r5)
10102ae8:	2a80038b 	ldhu	r10,14(r5)
10102aec:	2a400717 	ldw	r9,28(r5)
10102af0:	2a000917 	ldw	r8,36(r5)
10102af4:	defee204 	addi	sp,sp,-1144
10102af8:	00c10004 	movi	r3,1024
10102afc:	dc011a15 	stw	r16,1128(sp)
10102b00:	10bfff4c 	andi	r2,r2,65533
10102b04:	2821883a 	mov	r16,r5
10102b08:	d8cb883a 	add	r5,sp,r3
10102b0c:	dc811c15 	stw	r18,1136(sp)
10102b10:	dc411b15 	stw	r17,1132(sp)
10102b14:	dfc11d15 	stw	ra,1140(sp)
10102b18:	2025883a 	mov	r18,r4
10102b1c:	d881030d 	sth	r2,1036(sp)
10102b20:	dac11915 	stw	r11,1124(sp)
10102b24:	da81038d 	sth	r10,1038(sp)
10102b28:	da410715 	stw	r9,1052(sp)
10102b2c:	da010915 	stw	r8,1060(sp)
10102b30:	dec10015 	stw	sp,1024(sp)
10102b34:	dec10415 	stw	sp,1040(sp)
10102b38:	d8c10215 	stw	r3,1032(sp)
10102b3c:	d8c10515 	stw	r3,1044(sp)
10102b40:	d8010615 	stw	zero,1048(sp)
10102b44:	01008cc0 	call	101008cc <___vfprintf_internal_r>
10102b48:	1023883a 	mov	r17,r2
10102b4c:	10000416 	blt	r2,zero,10102b60 <__sbprintf+0x80>
10102b50:	d9410004 	addi	r5,sp,1024
10102b54:	9009883a 	mov	r4,r18
10102b58:	01047940 	call	10104794 <_fflush_r>
10102b5c:	10000d1e 	bne	r2,zero,10102b94 <__sbprintf+0xb4>
10102b60:	d881030b 	ldhu	r2,1036(sp)
10102b64:	1080100c 	andi	r2,r2,64
10102b68:	10000326 	beq	r2,zero,10102b78 <__sbprintf+0x98>
10102b6c:	8080030b 	ldhu	r2,12(r16)
10102b70:	10801014 	ori	r2,r2,64
10102b74:	8080030d 	sth	r2,12(r16)
10102b78:	8805883a 	mov	r2,r17
10102b7c:	dfc11d17 	ldw	ra,1140(sp)
10102b80:	dc811c17 	ldw	r18,1136(sp)
10102b84:	dc411b17 	ldw	r17,1132(sp)
10102b88:	dc011a17 	ldw	r16,1128(sp)
10102b8c:	dec11e04 	addi	sp,sp,1144
10102b90:	f800283a 	ret
10102b94:	047fffc4 	movi	r17,-1
10102b98:	003ff106 	br	10102b60 <__alt_data_end+0xfffe2b60>

10102b9c <__swsetup_r>:
10102b9c:	00840474 	movhi	r2,4113
10102ba0:	defffd04 	addi	sp,sp,-12
10102ba4:	10852104 	addi	r2,r2,5252
10102ba8:	dc400115 	stw	r17,4(sp)
10102bac:	2023883a 	mov	r17,r4
10102bb0:	11000017 	ldw	r4,0(r2)
10102bb4:	dc000015 	stw	r16,0(sp)
10102bb8:	dfc00215 	stw	ra,8(sp)
10102bbc:	2821883a 	mov	r16,r5
10102bc0:	20000226 	beq	r4,zero,10102bcc <__swsetup_r+0x30>
10102bc4:	20800e17 	ldw	r2,56(r4)
10102bc8:	10003126 	beq	r2,zero,10102c90 <__swsetup_r+0xf4>
10102bcc:	8080030b 	ldhu	r2,12(r16)
10102bd0:	10c0020c 	andi	r3,r2,8
10102bd4:	1009883a 	mov	r4,r2
10102bd8:	18000f26 	beq	r3,zero,10102c18 <__swsetup_r+0x7c>
10102bdc:	80c00417 	ldw	r3,16(r16)
10102be0:	18001526 	beq	r3,zero,10102c38 <__swsetup_r+0x9c>
10102be4:	1100004c 	andi	r4,r2,1
10102be8:	20001c1e 	bne	r4,zero,10102c5c <__swsetup_r+0xc0>
10102bec:	1080008c 	andi	r2,r2,2
10102bf0:	1000291e 	bne	r2,zero,10102c98 <__swsetup_r+0xfc>
10102bf4:	80800517 	ldw	r2,20(r16)
10102bf8:	80800215 	stw	r2,8(r16)
10102bfc:	18001c26 	beq	r3,zero,10102c70 <__swsetup_r+0xd4>
10102c00:	0005883a 	mov	r2,zero
10102c04:	dfc00217 	ldw	ra,8(sp)
10102c08:	dc400117 	ldw	r17,4(sp)
10102c0c:	dc000017 	ldw	r16,0(sp)
10102c10:	dec00304 	addi	sp,sp,12
10102c14:	f800283a 	ret
10102c18:	2080040c 	andi	r2,r4,16
10102c1c:	10002e26 	beq	r2,zero,10102cd8 <__swsetup_r+0x13c>
10102c20:	2080010c 	andi	r2,r4,4
10102c24:	10001e1e 	bne	r2,zero,10102ca0 <__swsetup_r+0x104>
10102c28:	80c00417 	ldw	r3,16(r16)
10102c2c:	20800214 	ori	r2,r4,8
10102c30:	8080030d 	sth	r2,12(r16)
10102c34:	183feb1e 	bne	r3,zero,10102be4 <__alt_data_end+0xfffe2be4>
10102c38:	1100a00c 	andi	r4,r2,640
10102c3c:	01408004 	movi	r5,512
10102c40:	217fe826 	beq	r4,r5,10102be4 <__alt_data_end+0xfffe2be4>
10102c44:	800b883a 	mov	r5,r16
10102c48:	8809883a 	mov	r4,r17
10102c4c:	01057140 	call	10105714 <__smakebuf_r>
10102c50:	8080030b 	ldhu	r2,12(r16)
10102c54:	80c00417 	ldw	r3,16(r16)
10102c58:	003fe206 	br	10102be4 <__alt_data_end+0xfffe2be4>
10102c5c:	80800517 	ldw	r2,20(r16)
10102c60:	80000215 	stw	zero,8(r16)
10102c64:	0085c83a 	sub	r2,zero,r2
10102c68:	80800615 	stw	r2,24(r16)
10102c6c:	183fe41e 	bne	r3,zero,10102c00 <__alt_data_end+0xfffe2c00>
10102c70:	80c0030b 	ldhu	r3,12(r16)
10102c74:	0005883a 	mov	r2,zero
10102c78:	1900200c 	andi	r4,r3,128
10102c7c:	203fe126 	beq	r4,zero,10102c04 <__alt_data_end+0xfffe2c04>
10102c80:	18c01014 	ori	r3,r3,64
10102c84:	80c0030d 	sth	r3,12(r16)
10102c88:	00bfffc4 	movi	r2,-1
10102c8c:	003fdd06 	br	10102c04 <__alt_data_end+0xfffe2c04>
10102c90:	0104b700 	call	10104b70 <__sinit>
10102c94:	003fcd06 	br	10102bcc <__alt_data_end+0xfffe2bcc>
10102c98:	0005883a 	mov	r2,zero
10102c9c:	003fd606 	br	10102bf8 <__alt_data_end+0xfffe2bf8>
10102ca0:	81400c17 	ldw	r5,48(r16)
10102ca4:	28000626 	beq	r5,zero,10102cc0 <__swsetup_r+0x124>
10102ca8:	80801004 	addi	r2,r16,64
10102cac:	28800326 	beq	r5,r2,10102cbc <__swsetup_r+0x120>
10102cb0:	8809883a 	mov	r4,r17
10102cb4:	0104ce40 	call	10104ce4 <_free_r>
10102cb8:	8100030b 	ldhu	r4,12(r16)
10102cbc:	80000c15 	stw	zero,48(r16)
10102cc0:	80c00417 	ldw	r3,16(r16)
10102cc4:	00bff6c4 	movi	r2,-37
10102cc8:	1108703a 	and	r4,r2,r4
10102ccc:	80000115 	stw	zero,4(r16)
10102cd0:	80c00015 	stw	r3,0(r16)
10102cd4:	003fd506 	br	10102c2c <__alt_data_end+0xfffe2c2c>
10102cd8:	00800244 	movi	r2,9
10102cdc:	88800015 	stw	r2,0(r17)
10102ce0:	20801014 	ori	r2,r4,64
10102ce4:	8080030d 	sth	r2,12(r16)
10102ce8:	00bfffc4 	movi	r2,-1
10102cec:	003fc506 	br	10102c04 <__alt_data_end+0xfffe2c04>

10102cf0 <quorem>:
10102cf0:	defff704 	addi	sp,sp,-36
10102cf4:	dc800215 	stw	r18,8(sp)
10102cf8:	20800417 	ldw	r2,16(r4)
10102cfc:	2c800417 	ldw	r18,16(r5)
10102d00:	dfc00815 	stw	ra,32(sp)
10102d04:	ddc00715 	stw	r23,28(sp)
10102d08:	dd800615 	stw	r22,24(sp)
10102d0c:	dd400515 	stw	r21,20(sp)
10102d10:	dd000415 	stw	r20,16(sp)
10102d14:	dcc00315 	stw	r19,12(sp)
10102d18:	dc400115 	stw	r17,4(sp)
10102d1c:	dc000015 	stw	r16,0(sp)
10102d20:	14807116 	blt	r2,r18,10102ee8 <quorem+0x1f8>
10102d24:	94bfffc4 	addi	r18,r18,-1
10102d28:	94ad883a 	add	r22,r18,r18
10102d2c:	b5ad883a 	add	r22,r22,r22
10102d30:	2c400504 	addi	r17,r5,20
10102d34:	8da9883a 	add	r20,r17,r22
10102d38:	25400504 	addi	r21,r4,20
10102d3c:	282f883a 	mov	r23,r5
10102d40:	adad883a 	add	r22,r21,r22
10102d44:	a1400017 	ldw	r5,0(r20)
10102d48:	2021883a 	mov	r16,r4
10102d4c:	b1000017 	ldw	r4,0(r22)
10102d50:	29400044 	addi	r5,r5,1
10102d54:	010a8f00 	call	1010a8f0 <__udivsi3>
10102d58:	1027883a 	mov	r19,r2
10102d5c:	10002c26 	beq	r2,zero,10102e10 <quorem+0x120>
10102d60:	a813883a 	mov	r9,r21
10102d64:	880b883a 	mov	r5,r17
10102d68:	0009883a 	mov	r4,zero
10102d6c:	000d883a 	mov	r6,zero
10102d70:	2a000017 	ldw	r8,0(r5)
10102d74:	49c00017 	ldw	r7,0(r9)
10102d78:	29400104 	addi	r5,r5,4
10102d7c:	40bfffcc 	andi	r2,r8,65535
10102d80:	14c5383a 	mul	r2,r2,r19
10102d84:	4010d43a 	srli	r8,r8,16
10102d88:	38ffffcc 	andi	r3,r7,65535
10102d8c:	1105883a 	add	r2,r2,r4
10102d90:	1008d43a 	srli	r4,r2,16
10102d94:	44d1383a 	mul	r8,r8,r19
10102d98:	198d883a 	add	r6,r3,r6
10102d9c:	10ffffcc 	andi	r3,r2,65535
10102da0:	30c7c83a 	sub	r3,r6,r3
10102da4:	380ed43a 	srli	r7,r7,16
10102da8:	4105883a 	add	r2,r8,r4
10102dac:	180dd43a 	srai	r6,r3,16
10102db0:	113fffcc 	andi	r4,r2,65535
10102db4:	390fc83a 	sub	r7,r7,r4
10102db8:	398d883a 	add	r6,r7,r6
10102dbc:	300e943a 	slli	r7,r6,16
10102dc0:	18ffffcc 	andi	r3,r3,65535
10102dc4:	1008d43a 	srli	r4,r2,16
10102dc8:	38ceb03a 	or	r7,r7,r3
10102dcc:	49c00015 	stw	r7,0(r9)
10102dd0:	300dd43a 	srai	r6,r6,16
10102dd4:	4a400104 	addi	r9,r9,4
10102dd8:	a17fe52e 	bgeu	r20,r5,10102d70 <__alt_data_end+0xfffe2d70>
10102ddc:	b0800017 	ldw	r2,0(r22)
10102de0:	10000b1e 	bne	r2,zero,10102e10 <quorem+0x120>
10102de4:	b0bfff04 	addi	r2,r22,-4
10102de8:	a880082e 	bgeu	r21,r2,10102e0c <quorem+0x11c>
10102dec:	b0ffff17 	ldw	r3,-4(r22)
10102df0:	18000326 	beq	r3,zero,10102e00 <quorem+0x110>
10102df4:	00000506 	br	10102e0c <quorem+0x11c>
10102df8:	10c00017 	ldw	r3,0(r2)
10102dfc:	1800031e 	bne	r3,zero,10102e0c <quorem+0x11c>
10102e00:	10bfff04 	addi	r2,r2,-4
10102e04:	94bfffc4 	addi	r18,r18,-1
10102e08:	a8bffb36 	bltu	r21,r2,10102df8 <__alt_data_end+0xfffe2df8>
10102e0c:	84800415 	stw	r18,16(r16)
10102e10:	b80b883a 	mov	r5,r23
10102e14:	8009883a 	mov	r4,r16
10102e18:	0106e540 	call	10106e54 <__mcmp>
10102e1c:	10002616 	blt	r2,zero,10102eb8 <quorem+0x1c8>
10102e20:	9cc00044 	addi	r19,r19,1
10102e24:	a805883a 	mov	r2,r21
10102e28:	000b883a 	mov	r5,zero
10102e2c:	11000017 	ldw	r4,0(r2)
10102e30:	89800017 	ldw	r6,0(r17)
10102e34:	10800104 	addi	r2,r2,4
10102e38:	20ffffcc 	andi	r3,r4,65535
10102e3c:	194b883a 	add	r5,r3,r5
10102e40:	30ffffcc 	andi	r3,r6,65535
10102e44:	28c7c83a 	sub	r3,r5,r3
10102e48:	300cd43a 	srli	r6,r6,16
10102e4c:	2008d43a 	srli	r4,r4,16
10102e50:	180bd43a 	srai	r5,r3,16
10102e54:	18ffffcc 	andi	r3,r3,65535
10102e58:	2189c83a 	sub	r4,r4,r6
10102e5c:	2149883a 	add	r4,r4,r5
10102e60:	200c943a 	slli	r6,r4,16
10102e64:	8c400104 	addi	r17,r17,4
10102e68:	200bd43a 	srai	r5,r4,16
10102e6c:	30c6b03a 	or	r3,r6,r3
10102e70:	10ffff15 	stw	r3,-4(r2)
10102e74:	a47fed2e 	bgeu	r20,r17,10102e2c <__alt_data_end+0xfffe2e2c>
10102e78:	9485883a 	add	r2,r18,r18
10102e7c:	1085883a 	add	r2,r2,r2
10102e80:	a887883a 	add	r3,r21,r2
10102e84:	18800017 	ldw	r2,0(r3)
10102e88:	10000b1e 	bne	r2,zero,10102eb8 <quorem+0x1c8>
10102e8c:	18bfff04 	addi	r2,r3,-4
10102e90:	a880082e 	bgeu	r21,r2,10102eb4 <quorem+0x1c4>
10102e94:	18ffff17 	ldw	r3,-4(r3)
10102e98:	18000326 	beq	r3,zero,10102ea8 <quorem+0x1b8>
10102e9c:	00000506 	br	10102eb4 <quorem+0x1c4>
10102ea0:	10c00017 	ldw	r3,0(r2)
10102ea4:	1800031e 	bne	r3,zero,10102eb4 <quorem+0x1c4>
10102ea8:	10bfff04 	addi	r2,r2,-4
10102eac:	94bfffc4 	addi	r18,r18,-1
10102eb0:	a8bffb36 	bltu	r21,r2,10102ea0 <__alt_data_end+0xfffe2ea0>
10102eb4:	84800415 	stw	r18,16(r16)
10102eb8:	9805883a 	mov	r2,r19
10102ebc:	dfc00817 	ldw	ra,32(sp)
10102ec0:	ddc00717 	ldw	r23,28(sp)
10102ec4:	dd800617 	ldw	r22,24(sp)
10102ec8:	dd400517 	ldw	r21,20(sp)
10102ecc:	dd000417 	ldw	r20,16(sp)
10102ed0:	dcc00317 	ldw	r19,12(sp)
10102ed4:	dc800217 	ldw	r18,8(sp)
10102ed8:	dc400117 	ldw	r17,4(sp)
10102edc:	dc000017 	ldw	r16,0(sp)
10102ee0:	dec00904 	addi	sp,sp,36
10102ee4:	f800283a 	ret
10102ee8:	0005883a 	mov	r2,zero
10102eec:	003ff306 	br	10102ebc <__alt_data_end+0xfffe2ebc>

10102ef0 <_dtoa_r>:
10102ef0:	20801017 	ldw	r2,64(r4)
10102ef4:	deffde04 	addi	sp,sp,-136
10102ef8:	df002015 	stw	fp,128(sp)
10102efc:	dcc01b15 	stw	r19,108(sp)
10102f00:	dc801a15 	stw	r18,104(sp)
10102f04:	dc401915 	stw	r17,100(sp)
10102f08:	dc001815 	stw	r16,96(sp)
10102f0c:	dfc02115 	stw	ra,132(sp)
10102f10:	ddc01f15 	stw	r23,124(sp)
10102f14:	dd801e15 	stw	r22,120(sp)
10102f18:	dd401d15 	stw	r21,116(sp)
10102f1c:	dd001c15 	stw	r20,112(sp)
10102f20:	d9c00315 	stw	r7,12(sp)
10102f24:	2039883a 	mov	fp,r4
10102f28:	3023883a 	mov	r17,r6
10102f2c:	2825883a 	mov	r18,r5
10102f30:	dc002417 	ldw	r16,144(sp)
10102f34:	3027883a 	mov	r19,r6
10102f38:	10000826 	beq	r2,zero,10102f5c <_dtoa_r+0x6c>
10102f3c:	21801117 	ldw	r6,68(r4)
10102f40:	00c00044 	movi	r3,1
10102f44:	100b883a 	mov	r5,r2
10102f48:	1986983a 	sll	r3,r3,r6
10102f4c:	11800115 	stw	r6,4(r2)
10102f50:	10c00215 	stw	r3,8(r2)
10102f54:	01066340 	call	10106634 <_Bfree>
10102f58:	e0001015 	stw	zero,64(fp)
10102f5c:	88002e16 	blt	r17,zero,10103018 <_dtoa_r+0x128>
10102f60:	80000015 	stw	zero,0(r16)
10102f64:	889ffc2c 	andhi	r2,r17,32752
10102f68:	00dffc34 	movhi	r3,32752
10102f6c:	10c01c26 	beq	r2,r3,10102fe0 <_dtoa_r+0xf0>
10102f70:	000d883a 	mov	r6,zero
10102f74:	000f883a 	mov	r7,zero
10102f78:	9009883a 	mov	r4,r18
10102f7c:	980b883a 	mov	r5,r19
10102f80:	010bb400 	call	1010bb40 <__eqdf2>
10102f84:	10002b1e 	bne	r2,zero,10103034 <_dtoa_r+0x144>
10102f88:	d9c02317 	ldw	r7,140(sp)
10102f8c:	00800044 	movi	r2,1
10102f90:	38800015 	stw	r2,0(r7)
10102f94:	d8802517 	ldw	r2,148(sp)
10102f98:	10019e26 	beq	r2,zero,10103614 <_dtoa_r+0x724>
10102f9c:	d8c02517 	ldw	r3,148(sp)
10102fa0:	00840474 	movhi	r2,4113
10102fa4:	10bdc644 	addi	r2,r2,-2279
10102fa8:	18800015 	stw	r2,0(r3)
10102fac:	10bfffc4 	addi	r2,r2,-1
10102fb0:	dfc02117 	ldw	ra,132(sp)
10102fb4:	df002017 	ldw	fp,128(sp)
10102fb8:	ddc01f17 	ldw	r23,124(sp)
10102fbc:	dd801e17 	ldw	r22,120(sp)
10102fc0:	dd401d17 	ldw	r21,116(sp)
10102fc4:	dd001c17 	ldw	r20,112(sp)
10102fc8:	dcc01b17 	ldw	r19,108(sp)
10102fcc:	dc801a17 	ldw	r18,104(sp)
10102fd0:	dc401917 	ldw	r17,100(sp)
10102fd4:	dc001817 	ldw	r16,96(sp)
10102fd8:	dec02204 	addi	sp,sp,136
10102fdc:	f800283a 	ret
10102fe0:	d8c02317 	ldw	r3,140(sp)
10102fe4:	0089c3c4 	movi	r2,9999
10102fe8:	18800015 	stw	r2,0(r3)
10102fec:	90017726 	beq	r18,zero,101035cc <_dtoa_r+0x6dc>
10102ff0:	00840474 	movhi	r2,4113
10102ff4:	10bdd204 	addi	r2,r2,-2232
10102ff8:	d9002517 	ldw	r4,148(sp)
10102ffc:	203fec26 	beq	r4,zero,10102fb0 <__alt_data_end+0xfffe2fb0>
10103000:	10c000c7 	ldb	r3,3(r2)
10103004:	1801781e 	bne	r3,zero,101035e8 <_dtoa_r+0x6f8>
10103008:	10c000c4 	addi	r3,r2,3
1010300c:	d9802517 	ldw	r6,148(sp)
10103010:	30c00015 	stw	r3,0(r6)
10103014:	003fe606 	br	10102fb0 <__alt_data_end+0xfffe2fb0>
10103018:	04e00034 	movhi	r19,32768
1010301c:	9cffffc4 	addi	r19,r19,-1
10103020:	00800044 	movi	r2,1
10103024:	8ce6703a 	and	r19,r17,r19
10103028:	80800015 	stw	r2,0(r16)
1010302c:	9823883a 	mov	r17,r19
10103030:	003fcc06 	br	10102f64 <__alt_data_end+0xfffe2f64>
10103034:	d8800204 	addi	r2,sp,8
10103038:	d8800015 	stw	r2,0(sp)
1010303c:	d9c00104 	addi	r7,sp,4
10103040:	900b883a 	mov	r5,r18
10103044:	980d883a 	mov	r6,r19
10103048:	e009883a 	mov	r4,fp
1010304c:	8820d53a 	srli	r16,r17,20
10103050:	01072200 	call	10107220 <__d2b>
10103054:	d8800915 	stw	r2,36(sp)
10103058:	8001651e 	bne	r16,zero,101035f0 <_dtoa_r+0x700>
1010305c:	dd800217 	ldw	r22,8(sp)
10103060:	dc000117 	ldw	r16,4(sp)
10103064:	00800804 	movi	r2,32
10103068:	b421883a 	add	r16,r22,r16
1010306c:	80c10c84 	addi	r3,r16,1074
10103070:	10c2d10e 	bge	r2,r3,10103bb8 <_dtoa_r+0xcc8>
10103074:	00801004 	movi	r2,64
10103078:	81010484 	addi	r4,r16,1042
1010307c:	10c7c83a 	sub	r3,r2,r3
10103080:	9108d83a 	srl	r4,r18,r4
10103084:	88e2983a 	sll	r17,r17,r3
10103088:	2448b03a 	or	r4,r4,r17
1010308c:	010cf080 	call	1010cf08 <__floatunsidf>
10103090:	017f8434 	movhi	r5,65040
10103094:	01800044 	movi	r6,1
10103098:	1009883a 	mov	r4,r2
1010309c:	194b883a 	add	r5,r3,r5
101030a0:	843fffc4 	addi	r16,r16,-1
101030a4:	d9801115 	stw	r6,68(sp)
101030a8:	000d883a 	mov	r6,zero
101030ac:	01cffe34 	movhi	r7,16376
101030b0:	010c4b00 	call	1010c4b0 <__subdf3>
101030b4:	0198dbf4 	movhi	r6,25455
101030b8:	01cff4f4 	movhi	r7,16339
101030bc:	3190d844 	addi	r6,r6,17249
101030c0:	39e1e9c4 	addi	r7,r7,-30809
101030c4:	1009883a 	mov	r4,r2
101030c8:	180b883a 	mov	r5,r3
101030cc:	010bd980 	call	1010bd98 <__muldf3>
101030d0:	01a2d874 	movhi	r6,35681
101030d4:	01cff1f4 	movhi	r7,16327
101030d8:	31b22cc4 	addi	r6,r6,-14157
101030dc:	39e28a04 	addi	r7,r7,-30168
101030e0:	180b883a 	mov	r5,r3
101030e4:	1009883a 	mov	r4,r2
101030e8:	010a9ac0 	call	1010a9ac <__adddf3>
101030ec:	8009883a 	mov	r4,r16
101030f0:	1029883a 	mov	r20,r2
101030f4:	1823883a 	mov	r17,r3
101030f8:	010ce2c0 	call	1010ce2c <__floatsidf>
101030fc:	019427f4 	movhi	r6,20639
10103100:	01cff4f4 	movhi	r7,16339
10103104:	319e7ec4 	addi	r6,r6,31227
10103108:	39d104c4 	addi	r7,r7,17427
1010310c:	1009883a 	mov	r4,r2
10103110:	180b883a 	mov	r5,r3
10103114:	010bd980 	call	1010bd98 <__muldf3>
10103118:	100d883a 	mov	r6,r2
1010311c:	180f883a 	mov	r7,r3
10103120:	a009883a 	mov	r4,r20
10103124:	880b883a 	mov	r5,r17
10103128:	010a9ac0 	call	1010a9ac <__adddf3>
1010312c:	1009883a 	mov	r4,r2
10103130:	180b883a 	mov	r5,r3
10103134:	1029883a 	mov	r20,r2
10103138:	1823883a 	mov	r17,r3
1010313c:	010cdac0 	call	1010cdac <__fixdfsi>
10103140:	000d883a 	mov	r6,zero
10103144:	000f883a 	mov	r7,zero
10103148:	a009883a 	mov	r4,r20
1010314c:	880b883a 	mov	r5,r17
10103150:	d8800515 	stw	r2,20(sp)
10103154:	010bca40 	call	1010bca4 <__ledf2>
10103158:	10028716 	blt	r2,zero,10103b78 <_dtoa_r+0xc88>
1010315c:	d8c00517 	ldw	r3,20(sp)
10103160:	00800584 	movi	r2,22
10103164:	10c27536 	bltu	r2,r3,10103b3c <_dtoa_r+0xc4c>
10103168:	180490fa 	slli	r2,r3,3
1010316c:	00c40474 	movhi	r3,4113
10103170:	18fdee04 	addi	r3,r3,-2120
10103174:	1885883a 	add	r2,r3,r2
10103178:	11000017 	ldw	r4,0(r2)
1010317c:	11400117 	ldw	r5,4(r2)
10103180:	900d883a 	mov	r6,r18
10103184:	980f883a 	mov	r7,r19
10103188:	010bbc80 	call	1010bbc8 <__gedf2>
1010318c:	00828d0e 	bge	zero,r2,10103bc4 <_dtoa_r+0xcd4>
10103190:	d9000517 	ldw	r4,20(sp)
10103194:	d8000e15 	stw	zero,56(sp)
10103198:	213fffc4 	addi	r4,r4,-1
1010319c:	d9000515 	stw	r4,20(sp)
101031a0:	b42dc83a 	sub	r22,r22,r16
101031a4:	b5bfffc4 	addi	r22,r22,-1
101031a8:	b0026f16 	blt	r22,zero,10103b68 <_dtoa_r+0xc78>
101031ac:	d8000815 	stw	zero,32(sp)
101031b0:	d9c00517 	ldw	r7,20(sp)
101031b4:	38026416 	blt	r7,zero,10103b48 <_dtoa_r+0xc58>
101031b8:	b1ed883a 	add	r22,r22,r7
101031bc:	d9c00d15 	stw	r7,52(sp)
101031c0:	d8000a15 	stw	zero,40(sp)
101031c4:	d9800317 	ldw	r6,12(sp)
101031c8:	00800244 	movi	r2,9
101031cc:	11811436 	bltu	r2,r6,10103620 <_dtoa_r+0x730>
101031d0:	00800144 	movi	r2,5
101031d4:	1184e10e 	bge	r2,r6,1010455c <_dtoa_r+0x166c>
101031d8:	31bfff04 	addi	r6,r6,-4
101031dc:	d9800315 	stw	r6,12(sp)
101031e0:	0023883a 	mov	r17,zero
101031e4:	d9800317 	ldw	r6,12(sp)
101031e8:	008000c4 	movi	r2,3
101031ec:	30836726 	beq	r6,r2,10103f8c <_dtoa_r+0x109c>
101031f0:	1183410e 	bge	r2,r6,10103ef8 <_dtoa_r+0x1008>
101031f4:	d9c00317 	ldw	r7,12(sp)
101031f8:	00800104 	movi	r2,4
101031fc:	38827c26 	beq	r7,r2,10103bf0 <_dtoa_r+0xd00>
10103200:	00800144 	movi	r2,5
10103204:	3884c41e 	bne	r7,r2,10104518 <_dtoa_r+0x1628>
10103208:	00800044 	movi	r2,1
1010320c:	d8800b15 	stw	r2,44(sp)
10103210:	d8c00517 	ldw	r3,20(sp)
10103214:	d9002217 	ldw	r4,136(sp)
10103218:	1907883a 	add	r3,r3,r4
1010321c:	19800044 	addi	r6,r3,1
10103220:	d8c00c15 	stw	r3,48(sp)
10103224:	d9800615 	stw	r6,24(sp)
10103228:	0183a40e 	bge	zero,r6,101040bc <_dtoa_r+0x11cc>
1010322c:	d9800617 	ldw	r6,24(sp)
10103230:	3021883a 	mov	r16,r6
10103234:	e0001115 	stw	zero,68(fp)
10103238:	008005c4 	movi	r2,23
1010323c:	1184c92e 	bgeu	r2,r6,10104564 <_dtoa_r+0x1674>
10103240:	00c00044 	movi	r3,1
10103244:	00800104 	movi	r2,4
10103248:	1085883a 	add	r2,r2,r2
1010324c:	11000504 	addi	r4,r2,20
10103250:	180b883a 	mov	r5,r3
10103254:	18c00044 	addi	r3,r3,1
10103258:	313ffb2e 	bgeu	r6,r4,10103248 <__alt_data_end+0xfffe3248>
1010325c:	e1401115 	stw	r5,68(fp)
10103260:	e009883a 	mov	r4,fp
10103264:	010658c0 	call	1010658c <_Balloc>
10103268:	d8800715 	stw	r2,28(sp)
1010326c:	e0801015 	stw	r2,64(fp)
10103270:	00800384 	movi	r2,14
10103274:	1400f736 	bltu	r2,r16,10103654 <_dtoa_r+0x764>
10103278:	8800f626 	beq	r17,zero,10103654 <_dtoa_r+0x764>
1010327c:	d9c00517 	ldw	r7,20(sp)
10103280:	01c39a0e 	bge	zero,r7,101040ec <_dtoa_r+0x11fc>
10103284:	388003cc 	andi	r2,r7,15
10103288:	100490fa 	slli	r2,r2,3
1010328c:	382bd13a 	srai	r21,r7,4
10103290:	00c40474 	movhi	r3,4113
10103294:	18fdee04 	addi	r3,r3,-2120
10103298:	1885883a 	add	r2,r3,r2
1010329c:	a8c0040c 	andi	r3,r21,16
101032a0:	12400017 	ldw	r9,0(r2)
101032a4:	12000117 	ldw	r8,4(r2)
101032a8:	18037926 	beq	r3,zero,10104090 <_dtoa_r+0x11a0>
101032ac:	00840474 	movhi	r2,4113
101032b0:	10bde404 	addi	r2,r2,-2160
101032b4:	11800817 	ldw	r6,32(r2)
101032b8:	11c00917 	ldw	r7,36(r2)
101032bc:	9009883a 	mov	r4,r18
101032c0:	980b883a 	mov	r5,r19
101032c4:	da001715 	stw	r8,92(sp)
101032c8:	da401615 	stw	r9,88(sp)
101032cc:	010b2580 	call	1010b258 <__divdf3>
101032d0:	da001717 	ldw	r8,92(sp)
101032d4:	da401617 	ldw	r9,88(sp)
101032d8:	ad4003cc 	andi	r21,r21,15
101032dc:	040000c4 	movi	r16,3
101032e0:	1023883a 	mov	r17,r2
101032e4:	1829883a 	mov	r20,r3
101032e8:	a8001126 	beq	r21,zero,10103330 <_dtoa_r+0x440>
101032ec:	05c40474 	movhi	r23,4113
101032f0:	bdfde404 	addi	r23,r23,-2160
101032f4:	4805883a 	mov	r2,r9
101032f8:	4007883a 	mov	r3,r8
101032fc:	a980004c 	andi	r6,r21,1
10103300:	1009883a 	mov	r4,r2
10103304:	a82bd07a 	srai	r21,r21,1
10103308:	180b883a 	mov	r5,r3
1010330c:	30000426 	beq	r6,zero,10103320 <_dtoa_r+0x430>
10103310:	b9800017 	ldw	r6,0(r23)
10103314:	b9c00117 	ldw	r7,4(r23)
10103318:	84000044 	addi	r16,r16,1
1010331c:	010bd980 	call	1010bd98 <__muldf3>
10103320:	bdc00204 	addi	r23,r23,8
10103324:	a83ff51e 	bne	r21,zero,101032fc <__alt_data_end+0xfffe32fc>
10103328:	1013883a 	mov	r9,r2
1010332c:	1811883a 	mov	r8,r3
10103330:	480d883a 	mov	r6,r9
10103334:	400f883a 	mov	r7,r8
10103338:	8809883a 	mov	r4,r17
1010333c:	a00b883a 	mov	r5,r20
10103340:	010b2580 	call	1010b258 <__divdf3>
10103344:	d8800f15 	stw	r2,60(sp)
10103348:	d8c01015 	stw	r3,64(sp)
1010334c:	d8c00e17 	ldw	r3,56(sp)
10103350:	18000626 	beq	r3,zero,1010336c <_dtoa_r+0x47c>
10103354:	d9000f17 	ldw	r4,60(sp)
10103358:	d9401017 	ldw	r5,64(sp)
1010335c:	000d883a 	mov	r6,zero
10103360:	01cffc34 	movhi	r7,16368
10103364:	010bca40 	call	1010bca4 <__ledf2>
10103368:	10040b16 	blt	r2,zero,10104398 <_dtoa_r+0x14a8>
1010336c:	8009883a 	mov	r4,r16
10103370:	010ce2c0 	call	1010ce2c <__floatsidf>
10103374:	d9800f17 	ldw	r6,60(sp)
10103378:	d9c01017 	ldw	r7,64(sp)
1010337c:	1009883a 	mov	r4,r2
10103380:	180b883a 	mov	r5,r3
10103384:	010bd980 	call	1010bd98 <__muldf3>
10103388:	000d883a 	mov	r6,zero
1010338c:	01d00734 	movhi	r7,16412
10103390:	1009883a 	mov	r4,r2
10103394:	180b883a 	mov	r5,r3
10103398:	010a9ac0 	call	1010a9ac <__adddf3>
1010339c:	1021883a 	mov	r16,r2
101033a0:	d8800617 	ldw	r2,24(sp)
101033a4:	047f3034 	movhi	r17,64704
101033a8:	1c63883a 	add	r17,r3,r17
101033ac:	10031826 	beq	r2,zero,10104010 <_dtoa_r+0x1120>
101033b0:	d8c00517 	ldw	r3,20(sp)
101033b4:	db000617 	ldw	r12,24(sp)
101033b8:	d8c01315 	stw	r3,76(sp)
101033bc:	d9000b17 	ldw	r4,44(sp)
101033c0:	20038f26 	beq	r4,zero,10104200 <_dtoa_r+0x1310>
101033c4:	60bfffc4 	addi	r2,r12,-1
101033c8:	100490fa 	slli	r2,r2,3
101033cc:	00c40474 	movhi	r3,4113
101033d0:	18fdee04 	addi	r3,r3,-2120
101033d4:	1885883a 	add	r2,r3,r2
101033d8:	11800017 	ldw	r6,0(r2)
101033dc:	11c00117 	ldw	r7,4(r2)
101033e0:	d8800717 	ldw	r2,28(sp)
101033e4:	0009883a 	mov	r4,zero
101033e8:	014ff834 	movhi	r5,16352
101033ec:	db001615 	stw	r12,88(sp)
101033f0:	15c00044 	addi	r23,r2,1
101033f4:	010b2580 	call	1010b258 <__divdf3>
101033f8:	800d883a 	mov	r6,r16
101033fc:	880f883a 	mov	r7,r17
10103400:	1009883a 	mov	r4,r2
10103404:	180b883a 	mov	r5,r3
10103408:	010c4b00 	call	1010c4b0 <__subdf3>
1010340c:	d9401017 	ldw	r5,64(sp)
10103410:	d9000f17 	ldw	r4,60(sp)
10103414:	102b883a 	mov	r21,r2
10103418:	d8c01215 	stw	r3,72(sp)
1010341c:	010cdac0 	call	1010cdac <__fixdfsi>
10103420:	1009883a 	mov	r4,r2
10103424:	1029883a 	mov	r20,r2
10103428:	010ce2c0 	call	1010ce2c <__floatsidf>
1010342c:	d9000f17 	ldw	r4,60(sp)
10103430:	d9401017 	ldw	r5,64(sp)
10103434:	100d883a 	mov	r6,r2
10103438:	180f883a 	mov	r7,r3
1010343c:	010c4b00 	call	1010c4b0 <__subdf3>
10103440:	1823883a 	mov	r17,r3
10103444:	d8c00717 	ldw	r3,28(sp)
10103448:	d9401217 	ldw	r5,72(sp)
1010344c:	a2000c04 	addi	r8,r20,48
10103450:	1021883a 	mov	r16,r2
10103454:	1a000005 	stb	r8,0(r3)
10103458:	800d883a 	mov	r6,r16
1010345c:	880f883a 	mov	r7,r17
10103460:	a809883a 	mov	r4,r21
10103464:	4029883a 	mov	r20,r8
10103468:	010bbc80 	call	1010bbc8 <__gedf2>
1010346c:	00841d16 	blt	zero,r2,101044e4 <_dtoa_r+0x15f4>
10103470:	800d883a 	mov	r6,r16
10103474:	880f883a 	mov	r7,r17
10103478:	0009883a 	mov	r4,zero
1010347c:	014ffc34 	movhi	r5,16368
10103480:	010c4b00 	call	1010c4b0 <__subdf3>
10103484:	d9401217 	ldw	r5,72(sp)
10103488:	100d883a 	mov	r6,r2
1010348c:	180f883a 	mov	r7,r3
10103490:	a809883a 	mov	r4,r21
10103494:	010bbc80 	call	1010bbc8 <__gedf2>
10103498:	db001617 	ldw	r12,88(sp)
1010349c:	00840e16 	blt	zero,r2,101044d8 <_dtoa_r+0x15e8>
101034a0:	00800044 	movi	r2,1
101034a4:	13006b0e 	bge	r2,r12,10103654 <_dtoa_r+0x764>
101034a8:	d9000717 	ldw	r4,28(sp)
101034ac:	dd800f15 	stw	r22,60(sp)
101034b0:	dcc01015 	stw	r19,64(sp)
101034b4:	2319883a 	add	r12,r4,r12
101034b8:	dcc01217 	ldw	r19,72(sp)
101034bc:	602d883a 	mov	r22,r12
101034c0:	dc801215 	stw	r18,72(sp)
101034c4:	b825883a 	mov	r18,r23
101034c8:	00000906 	br	101034f0 <_dtoa_r+0x600>
101034cc:	010c4b00 	call	1010c4b0 <__subdf3>
101034d0:	a80d883a 	mov	r6,r21
101034d4:	980f883a 	mov	r7,r19
101034d8:	1009883a 	mov	r4,r2
101034dc:	180b883a 	mov	r5,r3
101034e0:	010bca40 	call	1010bca4 <__ledf2>
101034e4:	1003e816 	blt	r2,zero,10104488 <_dtoa_r+0x1598>
101034e8:	b825883a 	mov	r18,r23
101034ec:	bd83e926 	beq	r23,r22,10104494 <_dtoa_r+0x15a4>
101034f0:	a809883a 	mov	r4,r21
101034f4:	980b883a 	mov	r5,r19
101034f8:	000d883a 	mov	r6,zero
101034fc:	01d00934 	movhi	r7,16420
10103500:	010bd980 	call	1010bd98 <__muldf3>
10103504:	000d883a 	mov	r6,zero
10103508:	01d00934 	movhi	r7,16420
1010350c:	8009883a 	mov	r4,r16
10103510:	880b883a 	mov	r5,r17
10103514:	102b883a 	mov	r21,r2
10103518:	1827883a 	mov	r19,r3
1010351c:	010bd980 	call	1010bd98 <__muldf3>
10103520:	180b883a 	mov	r5,r3
10103524:	1009883a 	mov	r4,r2
10103528:	1821883a 	mov	r16,r3
1010352c:	1023883a 	mov	r17,r2
10103530:	010cdac0 	call	1010cdac <__fixdfsi>
10103534:	1009883a 	mov	r4,r2
10103538:	1029883a 	mov	r20,r2
1010353c:	010ce2c0 	call	1010ce2c <__floatsidf>
10103540:	8809883a 	mov	r4,r17
10103544:	800b883a 	mov	r5,r16
10103548:	100d883a 	mov	r6,r2
1010354c:	180f883a 	mov	r7,r3
10103550:	010c4b00 	call	1010c4b0 <__subdf3>
10103554:	a5000c04 	addi	r20,r20,48
10103558:	a80d883a 	mov	r6,r21
1010355c:	980f883a 	mov	r7,r19
10103560:	1009883a 	mov	r4,r2
10103564:	180b883a 	mov	r5,r3
10103568:	95000005 	stb	r20,0(r18)
1010356c:	1021883a 	mov	r16,r2
10103570:	1823883a 	mov	r17,r3
10103574:	010bca40 	call	1010bca4 <__ledf2>
10103578:	bdc00044 	addi	r23,r23,1
1010357c:	800d883a 	mov	r6,r16
10103580:	880f883a 	mov	r7,r17
10103584:	0009883a 	mov	r4,zero
10103588:	014ffc34 	movhi	r5,16368
1010358c:	103fcf0e 	bge	r2,zero,101034cc <__alt_data_end+0xfffe34cc>
10103590:	d8c01317 	ldw	r3,76(sp)
10103594:	d8c00515 	stw	r3,20(sp)
10103598:	d9400917 	ldw	r5,36(sp)
1010359c:	e009883a 	mov	r4,fp
101035a0:	01066340 	call	10106634 <_Bfree>
101035a4:	d9000517 	ldw	r4,20(sp)
101035a8:	d9802317 	ldw	r6,140(sp)
101035ac:	d9c02517 	ldw	r7,148(sp)
101035b0:	b8000005 	stb	zero,0(r23)
101035b4:	20800044 	addi	r2,r4,1
101035b8:	30800015 	stw	r2,0(r6)
101035bc:	3802aa26 	beq	r7,zero,10104068 <_dtoa_r+0x1178>
101035c0:	3dc00015 	stw	r23,0(r7)
101035c4:	d8800717 	ldw	r2,28(sp)
101035c8:	003e7906 	br	10102fb0 <__alt_data_end+0xfffe2fb0>
101035cc:	00800434 	movhi	r2,16
101035d0:	10bfffc4 	addi	r2,r2,-1
101035d4:	88a2703a 	and	r17,r17,r2
101035d8:	883e851e 	bne	r17,zero,10102ff0 <__alt_data_end+0xfffe2ff0>
101035dc:	00840474 	movhi	r2,4113
101035e0:	10bdcf04 	addi	r2,r2,-2244
101035e4:	003e8406 	br	10102ff8 <__alt_data_end+0xfffe2ff8>
101035e8:	10c00204 	addi	r3,r2,8
101035ec:	003e8706 	br	1010300c <__alt_data_end+0xfffe300c>
101035f0:	01400434 	movhi	r5,16
101035f4:	297fffc4 	addi	r5,r5,-1
101035f8:	994a703a 	and	r5,r19,r5
101035fc:	9009883a 	mov	r4,r18
10103600:	843f0044 	addi	r16,r16,-1023
10103604:	294ffc34 	orhi	r5,r5,16368
10103608:	dd800217 	ldw	r22,8(sp)
1010360c:	d8001115 	stw	zero,68(sp)
10103610:	003ea506 	br	101030a8 <__alt_data_end+0xfffe30a8>
10103614:	00840474 	movhi	r2,4113
10103618:	10bdc604 	addi	r2,r2,-2280
1010361c:	003e6406 	br	10102fb0 <__alt_data_end+0xfffe2fb0>
10103620:	e0001115 	stw	zero,68(fp)
10103624:	000b883a 	mov	r5,zero
10103628:	e009883a 	mov	r4,fp
1010362c:	010658c0 	call	1010658c <_Balloc>
10103630:	01bfffc4 	movi	r6,-1
10103634:	01c00044 	movi	r7,1
10103638:	d8800715 	stw	r2,28(sp)
1010363c:	d9800c15 	stw	r6,48(sp)
10103640:	e0801015 	stw	r2,64(fp)
10103644:	d8000315 	stw	zero,12(sp)
10103648:	d9c00b15 	stw	r7,44(sp)
1010364c:	d9800615 	stw	r6,24(sp)
10103650:	d8002215 	stw	zero,136(sp)
10103654:	d8800117 	ldw	r2,4(sp)
10103658:	10008916 	blt	r2,zero,10103880 <_dtoa_r+0x990>
1010365c:	d9000517 	ldw	r4,20(sp)
10103660:	00c00384 	movi	r3,14
10103664:	19008616 	blt	r3,r4,10103880 <_dtoa_r+0x990>
10103668:	200490fa 	slli	r2,r4,3
1010366c:	00c40474 	movhi	r3,4113
10103670:	d9802217 	ldw	r6,136(sp)
10103674:	18fdee04 	addi	r3,r3,-2120
10103678:	1885883a 	add	r2,r3,r2
1010367c:	14000017 	ldw	r16,0(r2)
10103680:	14400117 	ldw	r17,4(r2)
10103684:	30016316 	blt	r6,zero,10103c14 <_dtoa_r+0xd24>
10103688:	800d883a 	mov	r6,r16
1010368c:	880f883a 	mov	r7,r17
10103690:	9009883a 	mov	r4,r18
10103694:	980b883a 	mov	r5,r19
10103698:	010b2580 	call	1010b258 <__divdf3>
1010369c:	180b883a 	mov	r5,r3
101036a0:	1009883a 	mov	r4,r2
101036a4:	010cdac0 	call	1010cdac <__fixdfsi>
101036a8:	1009883a 	mov	r4,r2
101036ac:	102b883a 	mov	r21,r2
101036b0:	010ce2c0 	call	1010ce2c <__floatsidf>
101036b4:	800d883a 	mov	r6,r16
101036b8:	880f883a 	mov	r7,r17
101036bc:	1009883a 	mov	r4,r2
101036c0:	180b883a 	mov	r5,r3
101036c4:	010bd980 	call	1010bd98 <__muldf3>
101036c8:	100d883a 	mov	r6,r2
101036cc:	180f883a 	mov	r7,r3
101036d0:	9009883a 	mov	r4,r18
101036d4:	980b883a 	mov	r5,r19
101036d8:	010c4b00 	call	1010c4b0 <__subdf3>
101036dc:	d9c00717 	ldw	r7,28(sp)
101036e0:	1009883a 	mov	r4,r2
101036e4:	a8800c04 	addi	r2,r21,48
101036e8:	38800005 	stb	r2,0(r7)
101036ec:	3dc00044 	addi	r23,r7,1
101036f0:	d9c00617 	ldw	r7,24(sp)
101036f4:	01800044 	movi	r6,1
101036f8:	180b883a 	mov	r5,r3
101036fc:	2005883a 	mov	r2,r4
10103700:	39803826 	beq	r7,r6,101037e4 <_dtoa_r+0x8f4>
10103704:	000d883a 	mov	r6,zero
10103708:	01d00934 	movhi	r7,16420
1010370c:	010bd980 	call	1010bd98 <__muldf3>
10103710:	000d883a 	mov	r6,zero
10103714:	000f883a 	mov	r7,zero
10103718:	1009883a 	mov	r4,r2
1010371c:	180b883a 	mov	r5,r3
10103720:	1025883a 	mov	r18,r2
10103724:	1827883a 	mov	r19,r3
10103728:	010bb400 	call	1010bb40 <__eqdf2>
1010372c:	103f9a26 	beq	r2,zero,10103598 <__alt_data_end+0xfffe3598>
10103730:	d9c00617 	ldw	r7,24(sp)
10103734:	d8c00717 	ldw	r3,28(sp)
10103738:	b829883a 	mov	r20,r23
1010373c:	38bfffc4 	addi	r2,r7,-1
10103740:	18ad883a 	add	r22,r3,r2
10103744:	00000a06 	br	10103770 <_dtoa_r+0x880>
10103748:	010bd980 	call	1010bd98 <__muldf3>
1010374c:	000d883a 	mov	r6,zero
10103750:	000f883a 	mov	r7,zero
10103754:	1009883a 	mov	r4,r2
10103758:	180b883a 	mov	r5,r3
1010375c:	1025883a 	mov	r18,r2
10103760:	1827883a 	mov	r19,r3
10103764:	b829883a 	mov	r20,r23
10103768:	010bb400 	call	1010bb40 <__eqdf2>
1010376c:	103f8a26 	beq	r2,zero,10103598 <__alt_data_end+0xfffe3598>
10103770:	800d883a 	mov	r6,r16
10103774:	880f883a 	mov	r7,r17
10103778:	9009883a 	mov	r4,r18
1010377c:	980b883a 	mov	r5,r19
10103780:	010b2580 	call	1010b258 <__divdf3>
10103784:	180b883a 	mov	r5,r3
10103788:	1009883a 	mov	r4,r2
1010378c:	010cdac0 	call	1010cdac <__fixdfsi>
10103790:	1009883a 	mov	r4,r2
10103794:	102b883a 	mov	r21,r2
10103798:	010ce2c0 	call	1010ce2c <__floatsidf>
1010379c:	800d883a 	mov	r6,r16
101037a0:	880f883a 	mov	r7,r17
101037a4:	1009883a 	mov	r4,r2
101037a8:	180b883a 	mov	r5,r3
101037ac:	010bd980 	call	1010bd98 <__muldf3>
101037b0:	100d883a 	mov	r6,r2
101037b4:	180f883a 	mov	r7,r3
101037b8:	9009883a 	mov	r4,r18
101037bc:	980b883a 	mov	r5,r19
101037c0:	010c4b00 	call	1010c4b0 <__subdf3>
101037c4:	aa000c04 	addi	r8,r21,48
101037c8:	a2000005 	stb	r8,0(r20)
101037cc:	000d883a 	mov	r6,zero
101037d0:	01d00934 	movhi	r7,16420
101037d4:	1009883a 	mov	r4,r2
101037d8:	180b883a 	mov	r5,r3
101037dc:	a5c00044 	addi	r23,r20,1
101037e0:	b53fd91e 	bne	r22,r20,10103748 <__alt_data_end+0xfffe3748>
101037e4:	100d883a 	mov	r6,r2
101037e8:	180f883a 	mov	r7,r3
101037ec:	1009883a 	mov	r4,r2
101037f0:	180b883a 	mov	r5,r3
101037f4:	010a9ac0 	call	1010a9ac <__adddf3>
101037f8:	100d883a 	mov	r6,r2
101037fc:	180f883a 	mov	r7,r3
10103800:	8009883a 	mov	r4,r16
10103804:	880b883a 	mov	r5,r17
10103808:	1027883a 	mov	r19,r2
1010380c:	1825883a 	mov	r18,r3
10103810:	010bca40 	call	1010bca4 <__ledf2>
10103814:	10000816 	blt	r2,zero,10103838 <_dtoa_r+0x948>
10103818:	980d883a 	mov	r6,r19
1010381c:	900f883a 	mov	r7,r18
10103820:	8009883a 	mov	r4,r16
10103824:	880b883a 	mov	r5,r17
10103828:	010bb400 	call	1010bb40 <__eqdf2>
1010382c:	103f5a1e 	bne	r2,zero,10103598 <__alt_data_end+0xfffe3598>
10103830:	ad40004c 	andi	r21,r21,1
10103834:	a83f5826 	beq	r21,zero,10103598 <__alt_data_end+0xfffe3598>
10103838:	bd3fffc3 	ldbu	r20,-1(r23)
1010383c:	b8bfffc4 	addi	r2,r23,-1
10103840:	1007883a 	mov	r3,r2
10103844:	01400e44 	movi	r5,57
10103848:	d9800717 	ldw	r6,28(sp)
1010384c:	00000506 	br	10103864 <_dtoa_r+0x974>
10103850:	18ffffc4 	addi	r3,r3,-1
10103854:	11824726 	beq	r2,r6,10104174 <_dtoa_r+0x1284>
10103858:	1d000003 	ldbu	r20,0(r3)
1010385c:	102f883a 	mov	r23,r2
10103860:	10bfffc4 	addi	r2,r2,-1
10103864:	a1003fcc 	andi	r4,r20,255
10103868:	2100201c 	xori	r4,r4,128
1010386c:	213fe004 	addi	r4,r4,-128
10103870:	217ff726 	beq	r4,r5,10103850 <__alt_data_end+0xfffe3850>
10103874:	a2000044 	addi	r8,r20,1
10103878:	12000005 	stb	r8,0(r2)
1010387c:	003f4606 	br	10103598 <__alt_data_end+0xfffe3598>
10103880:	d9000b17 	ldw	r4,44(sp)
10103884:	2000c826 	beq	r4,zero,10103ba8 <_dtoa_r+0xcb8>
10103888:	d9800317 	ldw	r6,12(sp)
1010388c:	00c00044 	movi	r3,1
10103890:	1980f90e 	bge	r3,r6,10103c78 <_dtoa_r+0xd88>
10103894:	d8800617 	ldw	r2,24(sp)
10103898:	d8c00a17 	ldw	r3,40(sp)
1010389c:	157fffc4 	addi	r21,r2,-1
101038a0:	1d41f316 	blt	r3,r21,10104070 <_dtoa_r+0x1180>
101038a4:	1d6bc83a 	sub	r21,r3,r21
101038a8:	d9c00617 	ldw	r7,24(sp)
101038ac:	3802aa16 	blt	r7,zero,10104358 <_dtoa_r+0x1468>
101038b0:	dd000817 	ldw	r20,32(sp)
101038b4:	d8800617 	ldw	r2,24(sp)
101038b8:	d8c00817 	ldw	r3,32(sp)
101038bc:	01400044 	movi	r5,1
101038c0:	e009883a 	mov	r4,fp
101038c4:	1887883a 	add	r3,r3,r2
101038c8:	d8c00815 	stw	r3,32(sp)
101038cc:	b0ad883a 	add	r22,r22,r2
101038d0:	01069980 	call	10106998 <__i2b>
101038d4:	1023883a 	mov	r17,r2
101038d8:	a0000826 	beq	r20,zero,101038fc <_dtoa_r+0xa0c>
101038dc:	0580070e 	bge	zero,r22,101038fc <_dtoa_r+0xa0c>
101038e0:	a005883a 	mov	r2,r20
101038e4:	b500b916 	blt	r22,r20,10103bcc <_dtoa_r+0xcdc>
101038e8:	d9000817 	ldw	r4,32(sp)
101038ec:	a0a9c83a 	sub	r20,r20,r2
101038f0:	b0adc83a 	sub	r22,r22,r2
101038f4:	2089c83a 	sub	r4,r4,r2
101038f8:	d9000815 	stw	r4,32(sp)
101038fc:	d9800a17 	ldw	r6,40(sp)
10103900:	0181810e 	bge	zero,r6,10103f08 <_dtoa_r+0x1018>
10103904:	d9c00b17 	ldw	r7,44(sp)
10103908:	3800b326 	beq	r7,zero,10103bd8 <_dtoa_r+0xce8>
1010390c:	a800b226 	beq	r21,zero,10103bd8 <_dtoa_r+0xce8>
10103910:	880b883a 	mov	r5,r17
10103914:	a80d883a 	mov	r6,r21
10103918:	e009883a 	mov	r4,fp
1010391c:	0106bcc0 	call	10106bcc <__pow5mult>
10103920:	d9800917 	ldw	r6,36(sp)
10103924:	100b883a 	mov	r5,r2
10103928:	e009883a 	mov	r4,fp
1010392c:	1023883a 	mov	r17,r2
10103930:	01069d40 	call	101069d4 <__multiply>
10103934:	1021883a 	mov	r16,r2
10103938:	d8800a17 	ldw	r2,40(sp)
1010393c:	d9400917 	ldw	r5,36(sp)
10103940:	e009883a 	mov	r4,fp
10103944:	1545c83a 	sub	r2,r2,r21
10103948:	d8800a15 	stw	r2,40(sp)
1010394c:	01066340 	call	10106634 <_Bfree>
10103950:	d8c00a17 	ldw	r3,40(sp)
10103954:	18009f1e 	bne	r3,zero,10103bd4 <_dtoa_r+0xce4>
10103958:	05c00044 	movi	r23,1
1010395c:	e009883a 	mov	r4,fp
10103960:	b80b883a 	mov	r5,r23
10103964:	01069980 	call	10106998 <__i2b>
10103968:	d9000d17 	ldw	r4,52(sp)
1010396c:	102b883a 	mov	r21,r2
10103970:	2000ce26 	beq	r4,zero,10103cac <_dtoa_r+0xdbc>
10103974:	200d883a 	mov	r6,r4
10103978:	100b883a 	mov	r5,r2
1010397c:	e009883a 	mov	r4,fp
10103980:	0106bcc0 	call	10106bcc <__pow5mult>
10103984:	d9800317 	ldw	r6,12(sp)
10103988:	102b883a 	mov	r21,r2
1010398c:	b981810e 	bge	r23,r6,10103f94 <_dtoa_r+0x10a4>
10103990:	0027883a 	mov	r19,zero
10103994:	a8800417 	ldw	r2,16(r21)
10103998:	05c00804 	movi	r23,32
1010399c:	10800104 	addi	r2,r2,4
101039a0:	1085883a 	add	r2,r2,r2
101039a4:	1085883a 	add	r2,r2,r2
101039a8:	a885883a 	add	r2,r21,r2
101039ac:	11000017 	ldw	r4,0(r2)
101039b0:	01068800 	call	10106880 <__hi0bits>
101039b4:	b885c83a 	sub	r2,r23,r2
101039b8:	1585883a 	add	r2,r2,r22
101039bc:	108007cc 	andi	r2,r2,31
101039c0:	1000b326 	beq	r2,zero,10103c90 <_dtoa_r+0xda0>
101039c4:	00c00804 	movi	r3,32
101039c8:	1887c83a 	sub	r3,r3,r2
101039cc:	01000104 	movi	r4,4
101039d0:	20c2cd0e 	bge	r4,r3,10104508 <_dtoa_r+0x1618>
101039d4:	00c00704 	movi	r3,28
101039d8:	1885c83a 	sub	r2,r3,r2
101039dc:	d8c00817 	ldw	r3,32(sp)
101039e0:	a0a9883a 	add	r20,r20,r2
101039e4:	b0ad883a 	add	r22,r22,r2
101039e8:	1887883a 	add	r3,r3,r2
101039ec:	d8c00815 	stw	r3,32(sp)
101039f0:	d9800817 	ldw	r6,32(sp)
101039f4:	0180040e 	bge	zero,r6,10103a08 <_dtoa_r+0xb18>
101039f8:	800b883a 	mov	r5,r16
101039fc:	e009883a 	mov	r4,fp
10103a00:	0106d0c0 	call	10106d0c <__lshift>
10103a04:	1021883a 	mov	r16,r2
10103a08:	0580050e 	bge	zero,r22,10103a20 <_dtoa_r+0xb30>
10103a0c:	a80b883a 	mov	r5,r21
10103a10:	b00d883a 	mov	r6,r22
10103a14:	e009883a 	mov	r4,fp
10103a18:	0106d0c0 	call	10106d0c <__lshift>
10103a1c:	102b883a 	mov	r21,r2
10103a20:	d9c00e17 	ldw	r7,56(sp)
10103a24:	3801211e 	bne	r7,zero,10103eac <_dtoa_r+0xfbc>
10103a28:	d9800617 	ldw	r6,24(sp)
10103a2c:	0181380e 	bge	zero,r6,10103f10 <_dtoa_r+0x1020>
10103a30:	d8c00b17 	ldw	r3,44(sp)
10103a34:	1800ab1e 	bne	r3,zero,10103ce4 <_dtoa_r+0xdf4>
10103a38:	dc800717 	ldw	r18,28(sp)
10103a3c:	dcc00617 	ldw	r19,24(sp)
10103a40:	9029883a 	mov	r20,r18
10103a44:	00000206 	br	10103a50 <_dtoa_r+0xb60>
10103a48:	010665c0 	call	1010665c <__multadd>
10103a4c:	1021883a 	mov	r16,r2
10103a50:	a80b883a 	mov	r5,r21
10103a54:	8009883a 	mov	r4,r16
10103a58:	0102cf00 	call	10102cf0 <quorem>
10103a5c:	10800c04 	addi	r2,r2,48
10103a60:	90800005 	stb	r2,0(r18)
10103a64:	94800044 	addi	r18,r18,1
10103a68:	9507c83a 	sub	r3,r18,r20
10103a6c:	000f883a 	mov	r7,zero
10103a70:	01800284 	movi	r6,10
10103a74:	800b883a 	mov	r5,r16
10103a78:	e009883a 	mov	r4,fp
10103a7c:	1cfff216 	blt	r3,r19,10103a48 <__alt_data_end+0xfffe3a48>
10103a80:	1011883a 	mov	r8,r2
10103a84:	d8800617 	ldw	r2,24(sp)
10103a88:	0082370e 	bge	zero,r2,10104368 <_dtoa_r+0x1478>
10103a8c:	d9000717 	ldw	r4,28(sp)
10103a90:	0025883a 	mov	r18,zero
10103a94:	20af883a 	add	r23,r4,r2
10103a98:	01800044 	movi	r6,1
10103a9c:	800b883a 	mov	r5,r16
10103aa0:	e009883a 	mov	r4,fp
10103aa4:	da001715 	stw	r8,92(sp)
10103aa8:	0106d0c0 	call	10106d0c <__lshift>
10103aac:	a80b883a 	mov	r5,r21
10103ab0:	1009883a 	mov	r4,r2
10103ab4:	d8800915 	stw	r2,36(sp)
10103ab8:	0106e540 	call	10106e54 <__mcmp>
10103abc:	da001717 	ldw	r8,92(sp)
10103ac0:	0081800e 	bge	zero,r2,101040c4 <_dtoa_r+0x11d4>
10103ac4:	b93fffc3 	ldbu	r4,-1(r23)
10103ac8:	b8bfffc4 	addi	r2,r23,-1
10103acc:	1007883a 	mov	r3,r2
10103ad0:	01800e44 	movi	r6,57
10103ad4:	d9c00717 	ldw	r7,28(sp)
10103ad8:	00000506 	br	10103af0 <_dtoa_r+0xc00>
10103adc:	18ffffc4 	addi	r3,r3,-1
10103ae0:	11c12326 	beq	r2,r7,10103f70 <_dtoa_r+0x1080>
10103ae4:	19000003 	ldbu	r4,0(r3)
10103ae8:	102f883a 	mov	r23,r2
10103aec:	10bfffc4 	addi	r2,r2,-1
10103af0:	21403fcc 	andi	r5,r4,255
10103af4:	2940201c 	xori	r5,r5,128
10103af8:	297fe004 	addi	r5,r5,-128
10103afc:	29bff726 	beq	r5,r6,10103adc <__alt_data_end+0xfffe3adc>
10103b00:	21000044 	addi	r4,r4,1
10103b04:	11000005 	stb	r4,0(r2)
10103b08:	a80b883a 	mov	r5,r21
10103b0c:	e009883a 	mov	r4,fp
10103b10:	01066340 	call	10106634 <_Bfree>
10103b14:	883ea026 	beq	r17,zero,10103598 <__alt_data_end+0xfffe3598>
10103b18:	90000426 	beq	r18,zero,10103b2c <_dtoa_r+0xc3c>
10103b1c:	94400326 	beq	r18,r17,10103b2c <_dtoa_r+0xc3c>
10103b20:	900b883a 	mov	r5,r18
10103b24:	e009883a 	mov	r4,fp
10103b28:	01066340 	call	10106634 <_Bfree>
10103b2c:	880b883a 	mov	r5,r17
10103b30:	e009883a 	mov	r4,fp
10103b34:	01066340 	call	10106634 <_Bfree>
10103b38:	003e9706 	br	10103598 <__alt_data_end+0xfffe3598>
10103b3c:	01800044 	movi	r6,1
10103b40:	d9800e15 	stw	r6,56(sp)
10103b44:	003d9606 	br	101031a0 <__alt_data_end+0xfffe31a0>
10103b48:	d8800817 	ldw	r2,32(sp)
10103b4c:	d8c00517 	ldw	r3,20(sp)
10103b50:	d8000d15 	stw	zero,52(sp)
10103b54:	10c5c83a 	sub	r2,r2,r3
10103b58:	00c9c83a 	sub	r4,zero,r3
10103b5c:	d8800815 	stw	r2,32(sp)
10103b60:	d9000a15 	stw	r4,40(sp)
10103b64:	003d9706 	br	101031c4 <__alt_data_end+0xfffe31c4>
10103b68:	05adc83a 	sub	r22,zero,r22
10103b6c:	dd800815 	stw	r22,32(sp)
10103b70:	002d883a 	mov	r22,zero
10103b74:	003d8e06 	br	101031b0 <__alt_data_end+0xfffe31b0>
10103b78:	d9000517 	ldw	r4,20(sp)
10103b7c:	010ce2c0 	call	1010ce2c <__floatsidf>
10103b80:	100d883a 	mov	r6,r2
10103b84:	180f883a 	mov	r7,r3
10103b88:	a009883a 	mov	r4,r20
10103b8c:	880b883a 	mov	r5,r17
10103b90:	010bb400 	call	1010bb40 <__eqdf2>
10103b94:	103d7126 	beq	r2,zero,1010315c <__alt_data_end+0xfffe315c>
10103b98:	d9c00517 	ldw	r7,20(sp)
10103b9c:	39ffffc4 	addi	r7,r7,-1
10103ba0:	d9c00515 	stw	r7,20(sp)
10103ba4:	003d6d06 	br	1010315c <__alt_data_end+0xfffe315c>
10103ba8:	dd400a17 	ldw	r21,40(sp)
10103bac:	dd000817 	ldw	r20,32(sp)
10103bb0:	0023883a 	mov	r17,zero
10103bb4:	003f4806 	br	101038d8 <__alt_data_end+0xfffe38d8>
10103bb8:	10e3c83a 	sub	r17,r2,r3
10103bbc:	9448983a 	sll	r4,r18,r17
10103bc0:	003d3206 	br	1010308c <__alt_data_end+0xfffe308c>
10103bc4:	d8000e15 	stw	zero,56(sp)
10103bc8:	003d7506 	br	101031a0 <__alt_data_end+0xfffe31a0>
10103bcc:	b005883a 	mov	r2,r22
10103bd0:	003f4506 	br	101038e8 <__alt_data_end+0xfffe38e8>
10103bd4:	dc000915 	stw	r16,36(sp)
10103bd8:	d9800a17 	ldw	r6,40(sp)
10103bdc:	d9400917 	ldw	r5,36(sp)
10103be0:	e009883a 	mov	r4,fp
10103be4:	0106bcc0 	call	10106bcc <__pow5mult>
10103be8:	1021883a 	mov	r16,r2
10103bec:	003f5a06 	br	10103958 <__alt_data_end+0xfffe3958>
10103bf0:	01c00044 	movi	r7,1
10103bf4:	d9c00b15 	stw	r7,44(sp)
10103bf8:	d8802217 	ldw	r2,136(sp)
10103bfc:	0081280e 	bge	zero,r2,101040a0 <_dtoa_r+0x11b0>
10103c00:	100d883a 	mov	r6,r2
10103c04:	1021883a 	mov	r16,r2
10103c08:	d8800c15 	stw	r2,48(sp)
10103c0c:	d8800615 	stw	r2,24(sp)
10103c10:	003d8806 	br	10103234 <__alt_data_end+0xfffe3234>
10103c14:	d8800617 	ldw	r2,24(sp)
10103c18:	00be9b16 	blt	zero,r2,10103688 <__alt_data_end+0xfffe3688>
10103c1c:	10010f1e 	bne	r2,zero,1010405c <_dtoa_r+0x116c>
10103c20:	880b883a 	mov	r5,r17
10103c24:	000d883a 	mov	r6,zero
10103c28:	01d00534 	movhi	r7,16404
10103c2c:	8009883a 	mov	r4,r16
10103c30:	010bd980 	call	1010bd98 <__muldf3>
10103c34:	900d883a 	mov	r6,r18
10103c38:	980f883a 	mov	r7,r19
10103c3c:	1009883a 	mov	r4,r2
10103c40:	180b883a 	mov	r5,r3
10103c44:	010bbc80 	call	1010bbc8 <__gedf2>
10103c48:	002b883a 	mov	r21,zero
10103c4c:	0023883a 	mov	r17,zero
10103c50:	1000bf16 	blt	r2,zero,10103f50 <_dtoa_r+0x1060>
10103c54:	d9802217 	ldw	r6,136(sp)
10103c58:	ddc00717 	ldw	r23,28(sp)
10103c5c:	018c303a 	nor	r6,zero,r6
10103c60:	d9800515 	stw	r6,20(sp)
10103c64:	a80b883a 	mov	r5,r21
10103c68:	e009883a 	mov	r4,fp
10103c6c:	01066340 	call	10106634 <_Bfree>
10103c70:	883e4926 	beq	r17,zero,10103598 <__alt_data_end+0xfffe3598>
10103c74:	003fad06 	br	10103b2c <__alt_data_end+0xfffe3b2c>
10103c78:	d9c01117 	ldw	r7,68(sp)
10103c7c:	3801bc26 	beq	r7,zero,10104370 <_dtoa_r+0x1480>
10103c80:	10810cc4 	addi	r2,r2,1075
10103c84:	dd400a17 	ldw	r21,40(sp)
10103c88:	dd000817 	ldw	r20,32(sp)
10103c8c:	003f0a06 	br	101038b8 <__alt_data_end+0xfffe38b8>
10103c90:	00800704 	movi	r2,28
10103c94:	d9000817 	ldw	r4,32(sp)
10103c98:	a0a9883a 	add	r20,r20,r2
10103c9c:	b0ad883a 	add	r22,r22,r2
10103ca0:	2089883a 	add	r4,r4,r2
10103ca4:	d9000815 	stw	r4,32(sp)
10103ca8:	003f5106 	br	101039f0 <__alt_data_end+0xfffe39f0>
10103cac:	d8c00317 	ldw	r3,12(sp)
10103cb0:	b8c1fc0e 	bge	r23,r3,101044a4 <_dtoa_r+0x15b4>
10103cb4:	0027883a 	mov	r19,zero
10103cb8:	b805883a 	mov	r2,r23
10103cbc:	003f3e06 	br	101039b8 <__alt_data_end+0xfffe39b8>
10103cc0:	880b883a 	mov	r5,r17
10103cc4:	e009883a 	mov	r4,fp
10103cc8:	000f883a 	mov	r7,zero
10103ccc:	01800284 	movi	r6,10
10103cd0:	010665c0 	call	1010665c <__multadd>
10103cd4:	d9000c17 	ldw	r4,48(sp)
10103cd8:	1023883a 	mov	r17,r2
10103cdc:	0102040e 	bge	zero,r4,101044f0 <_dtoa_r+0x1600>
10103ce0:	d9000615 	stw	r4,24(sp)
10103ce4:	0500050e 	bge	zero,r20,10103cfc <_dtoa_r+0xe0c>
10103ce8:	880b883a 	mov	r5,r17
10103cec:	a00d883a 	mov	r6,r20
10103cf0:	e009883a 	mov	r4,fp
10103cf4:	0106d0c0 	call	10106d0c <__lshift>
10103cf8:	1023883a 	mov	r17,r2
10103cfc:	9801241e 	bne	r19,zero,10104190 <_dtoa_r+0x12a0>
10103d00:	8829883a 	mov	r20,r17
10103d04:	d9000617 	ldw	r4,24(sp)
10103d08:	dcc00717 	ldw	r19,28(sp)
10103d0c:	9480004c 	andi	r18,r18,1
10103d10:	20bfffc4 	addi	r2,r4,-1
10103d14:	9885883a 	add	r2,r19,r2
10103d18:	d8800415 	stw	r2,16(sp)
10103d1c:	dc800615 	stw	r18,24(sp)
10103d20:	a80b883a 	mov	r5,r21
10103d24:	8009883a 	mov	r4,r16
10103d28:	0102cf00 	call	10102cf0 <quorem>
10103d2c:	880b883a 	mov	r5,r17
10103d30:	8009883a 	mov	r4,r16
10103d34:	102f883a 	mov	r23,r2
10103d38:	0106e540 	call	10106e54 <__mcmp>
10103d3c:	a80b883a 	mov	r5,r21
10103d40:	a00d883a 	mov	r6,r20
10103d44:	e009883a 	mov	r4,fp
10103d48:	102d883a 	mov	r22,r2
10103d4c:	0106eb40 	call	10106eb4 <__mdiff>
10103d50:	1007883a 	mov	r3,r2
10103d54:	10800317 	ldw	r2,12(r2)
10103d58:	bc800c04 	addi	r18,r23,48
10103d5c:	180b883a 	mov	r5,r3
10103d60:	10004e1e 	bne	r2,zero,10103e9c <_dtoa_r+0xfac>
10103d64:	8009883a 	mov	r4,r16
10103d68:	d8c01615 	stw	r3,88(sp)
10103d6c:	0106e540 	call	10106e54 <__mcmp>
10103d70:	d8c01617 	ldw	r3,88(sp)
10103d74:	e009883a 	mov	r4,fp
10103d78:	d8801615 	stw	r2,88(sp)
10103d7c:	180b883a 	mov	r5,r3
10103d80:	01066340 	call	10106634 <_Bfree>
10103d84:	d8801617 	ldw	r2,88(sp)
10103d88:	1000041e 	bne	r2,zero,10103d9c <_dtoa_r+0xeac>
10103d8c:	d9800317 	ldw	r6,12(sp)
10103d90:	3000021e 	bne	r6,zero,10103d9c <_dtoa_r+0xeac>
10103d94:	d8c00617 	ldw	r3,24(sp)
10103d98:	18003726 	beq	r3,zero,10103e78 <_dtoa_r+0xf88>
10103d9c:	b0002016 	blt	r22,zero,10103e20 <_dtoa_r+0xf30>
10103da0:	b000041e 	bne	r22,zero,10103db4 <_dtoa_r+0xec4>
10103da4:	d9000317 	ldw	r4,12(sp)
10103da8:	2000021e 	bne	r4,zero,10103db4 <_dtoa_r+0xec4>
10103dac:	d8c00617 	ldw	r3,24(sp)
10103db0:	18001b26 	beq	r3,zero,10103e20 <_dtoa_r+0xf30>
10103db4:	00810716 	blt	zero,r2,101041d4 <_dtoa_r+0x12e4>
10103db8:	d8c00417 	ldw	r3,16(sp)
10103dbc:	9d800044 	addi	r22,r19,1
10103dc0:	9c800005 	stb	r18,0(r19)
10103dc4:	b02f883a 	mov	r23,r22
10103dc8:	98c10626 	beq	r19,r3,101041e4 <_dtoa_r+0x12f4>
10103dcc:	800b883a 	mov	r5,r16
10103dd0:	000f883a 	mov	r7,zero
10103dd4:	01800284 	movi	r6,10
10103dd8:	e009883a 	mov	r4,fp
10103ddc:	010665c0 	call	1010665c <__multadd>
10103de0:	1021883a 	mov	r16,r2
10103de4:	000f883a 	mov	r7,zero
10103de8:	01800284 	movi	r6,10
10103dec:	880b883a 	mov	r5,r17
10103df0:	e009883a 	mov	r4,fp
10103df4:	8d002526 	beq	r17,r20,10103e8c <_dtoa_r+0xf9c>
10103df8:	010665c0 	call	1010665c <__multadd>
10103dfc:	a00b883a 	mov	r5,r20
10103e00:	000f883a 	mov	r7,zero
10103e04:	01800284 	movi	r6,10
10103e08:	e009883a 	mov	r4,fp
10103e0c:	1023883a 	mov	r17,r2
10103e10:	010665c0 	call	1010665c <__multadd>
10103e14:	1029883a 	mov	r20,r2
10103e18:	b027883a 	mov	r19,r22
10103e1c:	003fc006 	br	10103d20 <__alt_data_end+0xfffe3d20>
10103e20:	9011883a 	mov	r8,r18
10103e24:	00800e0e 	bge	zero,r2,10103e60 <_dtoa_r+0xf70>
10103e28:	800b883a 	mov	r5,r16
10103e2c:	01800044 	movi	r6,1
10103e30:	e009883a 	mov	r4,fp
10103e34:	da001715 	stw	r8,92(sp)
10103e38:	0106d0c0 	call	10106d0c <__lshift>
10103e3c:	a80b883a 	mov	r5,r21
10103e40:	1009883a 	mov	r4,r2
10103e44:	1021883a 	mov	r16,r2
10103e48:	0106e540 	call	10106e54 <__mcmp>
10103e4c:	da001717 	ldw	r8,92(sp)
10103e50:	0081960e 	bge	zero,r2,101044ac <_dtoa_r+0x15bc>
10103e54:	00800e44 	movi	r2,57
10103e58:	40817026 	beq	r8,r2,1010441c <_dtoa_r+0x152c>
10103e5c:	ba000c44 	addi	r8,r23,49
10103e60:	8825883a 	mov	r18,r17
10103e64:	9dc00044 	addi	r23,r19,1
10103e68:	9a000005 	stb	r8,0(r19)
10103e6c:	a023883a 	mov	r17,r20
10103e70:	dc000915 	stw	r16,36(sp)
10103e74:	003f2406 	br	10103b08 <__alt_data_end+0xfffe3b08>
10103e78:	00800e44 	movi	r2,57
10103e7c:	9011883a 	mov	r8,r18
10103e80:	90816626 	beq	r18,r2,1010441c <_dtoa_r+0x152c>
10103e84:	05bff516 	blt	zero,r22,10103e5c <__alt_data_end+0xfffe3e5c>
10103e88:	003ff506 	br	10103e60 <__alt_data_end+0xfffe3e60>
10103e8c:	010665c0 	call	1010665c <__multadd>
10103e90:	1023883a 	mov	r17,r2
10103e94:	1029883a 	mov	r20,r2
10103e98:	003fdf06 	br	10103e18 <__alt_data_end+0xfffe3e18>
10103e9c:	e009883a 	mov	r4,fp
10103ea0:	01066340 	call	10106634 <_Bfree>
10103ea4:	00800044 	movi	r2,1
10103ea8:	003fbc06 	br	10103d9c <__alt_data_end+0xfffe3d9c>
10103eac:	a80b883a 	mov	r5,r21
10103eb0:	8009883a 	mov	r4,r16
10103eb4:	0106e540 	call	10106e54 <__mcmp>
10103eb8:	103edb0e 	bge	r2,zero,10103a28 <__alt_data_end+0xfffe3a28>
10103ebc:	800b883a 	mov	r5,r16
10103ec0:	000f883a 	mov	r7,zero
10103ec4:	01800284 	movi	r6,10
10103ec8:	e009883a 	mov	r4,fp
10103ecc:	010665c0 	call	1010665c <__multadd>
10103ed0:	1021883a 	mov	r16,r2
10103ed4:	d8800517 	ldw	r2,20(sp)
10103ed8:	d8c00b17 	ldw	r3,44(sp)
10103edc:	10bfffc4 	addi	r2,r2,-1
10103ee0:	d8800515 	stw	r2,20(sp)
10103ee4:	183f761e 	bne	r3,zero,10103cc0 <__alt_data_end+0xfffe3cc0>
10103ee8:	d9000c17 	ldw	r4,48(sp)
10103eec:	0101730e 	bge	zero,r4,101044bc <_dtoa_r+0x15cc>
10103ef0:	d9000615 	stw	r4,24(sp)
10103ef4:	003ed006 	br	10103a38 <__alt_data_end+0xfffe3a38>
10103ef8:	00800084 	movi	r2,2
10103efc:	3081861e 	bne	r6,r2,10104518 <_dtoa_r+0x1628>
10103f00:	d8000b15 	stw	zero,44(sp)
10103f04:	003f3c06 	br	10103bf8 <__alt_data_end+0xfffe3bf8>
10103f08:	dc000917 	ldw	r16,36(sp)
10103f0c:	003e9206 	br	10103958 <__alt_data_end+0xfffe3958>
10103f10:	d9c00317 	ldw	r7,12(sp)
10103f14:	00800084 	movi	r2,2
10103f18:	11fec50e 	bge	r2,r7,10103a30 <__alt_data_end+0xfffe3a30>
10103f1c:	d9000617 	ldw	r4,24(sp)
10103f20:	20013c1e 	bne	r4,zero,10104414 <_dtoa_r+0x1524>
10103f24:	a80b883a 	mov	r5,r21
10103f28:	000f883a 	mov	r7,zero
10103f2c:	01800144 	movi	r6,5
10103f30:	e009883a 	mov	r4,fp
10103f34:	010665c0 	call	1010665c <__multadd>
10103f38:	100b883a 	mov	r5,r2
10103f3c:	8009883a 	mov	r4,r16
10103f40:	102b883a 	mov	r21,r2
10103f44:	0106e540 	call	10106e54 <__mcmp>
10103f48:	dc000915 	stw	r16,36(sp)
10103f4c:	00bf410e 	bge	zero,r2,10103c54 <__alt_data_end+0xfffe3c54>
10103f50:	d9c00717 	ldw	r7,28(sp)
10103f54:	00800c44 	movi	r2,49
10103f58:	38800005 	stb	r2,0(r7)
10103f5c:	d8800517 	ldw	r2,20(sp)
10103f60:	3dc00044 	addi	r23,r7,1
10103f64:	10800044 	addi	r2,r2,1
10103f68:	d8800515 	stw	r2,20(sp)
10103f6c:	003f3d06 	br	10103c64 <__alt_data_end+0xfffe3c64>
10103f70:	d9800517 	ldw	r6,20(sp)
10103f74:	d9c00717 	ldw	r7,28(sp)
10103f78:	00800c44 	movi	r2,49
10103f7c:	31800044 	addi	r6,r6,1
10103f80:	d9800515 	stw	r6,20(sp)
10103f84:	38800005 	stb	r2,0(r7)
10103f88:	003edf06 	br	10103b08 <__alt_data_end+0xfffe3b08>
10103f8c:	d8000b15 	stw	zero,44(sp)
10103f90:	003c9f06 	br	10103210 <__alt_data_end+0xfffe3210>
10103f94:	903e7e1e 	bne	r18,zero,10103990 <__alt_data_end+0xfffe3990>
10103f98:	00800434 	movhi	r2,16
10103f9c:	10bfffc4 	addi	r2,r2,-1
10103fa0:	9884703a 	and	r2,r19,r2
10103fa4:	1000ea1e 	bne	r2,zero,10104350 <_dtoa_r+0x1460>
10103fa8:	9cdffc2c 	andhi	r19,r19,32752
10103fac:	9800e826 	beq	r19,zero,10104350 <_dtoa_r+0x1460>
10103fb0:	d9c00817 	ldw	r7,32(sp)
10103fb4:	b5800044 	addi	r22,r22,1
10103fb8:	04c00044 	movi	r19,1
10103fbc:	39c00044 	addi	r7,r7,1
10103fc0:	d9c00815 	stw	r7,32(sp)
10103fc4:	d8800d17 	ldw	r2,52(sp)
10103fc8:	103e721e 	bne	r2,zero,10103994 <__alt_data_end+0xfffe3994>
10103fcc:	00800044 	movi	r2,1
10103fd0:	003e7906 	br	101039b8 <__alt_data_end+0xfffe39b8>
10103fd4:	8009883a 	mov	r4,r16
10103fd8:	010ce2c0 	call	1010ce2c <__floatsidf>
10103fdc:	d9800f17 	ldw	r6,60(sp)
10103fe0:	d9c01017 	ldw	r7,64(sp)
10103fe4:	1009883a 	mov	r4,r2
10103fe8:	180b883a 	mov	r5,r3
10103fec:	010bd980 	call	1010bd98 <__muldf3>
10103ff0:	000d883a 	mov	r6,zero
10103ff4:	01d00734 	movhi	r7,16412
10103ff8:	1009883a 	mov	r4,r2
10103ffc:	180b883a 	mov	r5,r3
10104000:	010a9ac0 	call	1010a9ac <__adddf3>
10104004:	047f3034 	movhi	r17,64704
10104008:	1021883a 	mov	r16,r2
1010400c:	1c63883a 	add	r17,r3,r17
10104010:	d9000f17 	ldw	r4,60(sp)
10104014:	d9401017 	ldw	r5,64(sp)
10104018:	000d883a 	mov	r6,zero
1010401c:	01d00534 	movhi	r7,16404
10104020:	010c4b00 	call	1010c4b0 <__subdf3>
10104024:	800d883a 	mov	r6,r16
10104028:	880f883a 	mov	r7,r17
1010402c:	1009883a 	mov	r4,r2
10104030:	180b883a 	mov	r5,r3
10104034:	102b883a 	mov	r21,r2
10104038:	1829883a 	mov	r20,r3
1010403c:	010bbc80 	call	1010bbc8 <__gedf2>
10104040:	00806c16 	blt	zero,r2,101041f4 <_dtoa_r+0x1304>
10104044:	89e0003c 	xorhi	r7,r17,32768
10104048:	800d883a 	mov	r6,r16
1010404c:	a809883a 	mov	r4,r21
10104050:	a00b883a 	mov	r5,r20
10104054:	010bca40 	call	1010bca4 <__ledf2>
10104058:	103d7e0e 	bge	r2,zero,10103654 <__alt_data_end+0xfffe3654>
1010405c:	002b883a 	mov	r21,zero
10104060:	0023883a 	mov	r17,zero
10104064:	003efb06 	br	10103c54 <__alt_data_end+0xfffe3c54>
10104068:	d8800717 	ldw	r2,28(sp)
1010406c:	003bd006 	br	10102fb0 <__alt_data_end+0xfffe2fb0>
10104070:	d9000a17 	ldw	r4,40(sp)
10104074:	d9800d17 	ldw	r6,52(sp)
10104078:	dd400a15 	stw	r21,40(sp)
1010407c:	a905c83a 	sub	r2,r21,r4
10104080:	308d883a 	add	r6,r6,r2
10104084:	d9800d15 	stw	r6,52(sp)
10104088:	002b883a 	mov	r21,zero
1010408c:	003e0606 	br	101038a8 <__alt_data_end+0xfffe38a8>
10104090:	9023883a 	mov	r17,r18
10104094:	9829883a 	mov	r20,r19
10104098:	04000084 	movi	r16,2
1010409c:	003c9206 	br	101032e8 <__alt_data_end+0xfffe32e8>
101040a0:	04000044 	movi	r16,1
101040a4:	dc000c15 	stw	r16,48(sp)
101040a8:	dc000615 	stw	r16,24(sp)
101040ac:	dc002215 	stw	r16,136(sp)
101040b0:	e0001115 	stw	zero,68(fp)
101040b4:	000b883a 	mov	r5,zero
101040b8:	003c6906 	br	10103260 <__alt_data_end+0xfffe3260>
101040bc:	3021883a 	mov	r16,r6
101040c0:	003ffb06 	br	101040b0 <__alt_data_end+0xfffe40b0>
101040c4:	1000021e 	bne	r2,zero,101040d0 <_dtoa_r+0x11e0>
101040c8:	4200004c 	andi	r8,r8,1
101040cc:	403e7d1e 	bne	r8,zero,10103ac4 <__alt_data_end+0xfffe3ac4>
101040d0:	01000c04 	movi	r4,48
101040d4:	00000106 	br	101040dc <_dtoa_r+0x11ec>
101040d8:	102f883a 	mov	r23,r2
101040dc:	b8bfffc4 	addi	r2,r23,-1
101040e0:	10c00007 	ldb	r3,0(r2)
101040e4:	193ffc26 	beq	r3,r4,101040d8 <__alt_data_end+0xfffe40d8>
101040e8:	003e8706 	br	10103b08 <__alt_data_end+0xfffe3b08>
101040ec:	d8800517 	ldw	r2,20(sp)
101040f0:	00a3c83a 	sub	r17,zero,r2
101040f4:	8800a426 	beq	r17,zero,10104388 <_dtoa_r+0x1498>
101040f8:	888003cc 	andi	r2,r17,15
101040fc:	100490fa 	slli	r2,r2,3
10104100:	00c40474 	movhi	r3,4113
10104104:	18fdee04 	addi	r3,r3,-2120
10104108:	1885883a 	add	r2,r3,r2
1010410c:	11800017 	ldw	r6,0(r2)
10104110:	11c00117 	ldw	r7,4(r2)
10104114:	9009883a 	mov	r4,r18
10104118:	980b883a 	mov	r5,r19
1010411c:	8823d13a 	srai	r17,r17,4
10104120:	010bd980 	call	1010bd98 <__muldf3>
10104124:	d8800f15 	stw	r2,60(sp)
10104128:	d8c01015 	stw	r3,64(sp)
1010412c:	8800e826 	beq	r17,zero,101044d0 <_dtoa_r+0x15e0>
10104130:	05040474 	movhi	r20,4113
10104134:	a53de404 	addi	r20,r20,-2160
10104138:	04000084 	movi	r16,2
1010413c:	8980004c 	andi	r6,r17,1
10104140:	1009883a 	mov	r4,r2
10104144:	8823d07a 	srai	r17,r17,1
10104148:	180b883a 	mov	r5,r3
1010414c:	30000426 	beq	r6,zero,10104160 <_dtoa_r+0x1270>
10104150:	a1800017 	ldw	r6,0(r20)
10104154:	a1c00117 	ldw	r7,4(r20)
10104158:	84000044 	addi	r16,r16,1
1010415c:	010bd980 	call	1010bd98 <__muldf3>
10104160:	a5000204 	addi	r20,r20,8
10104164:	883ff51e 	bne	r17,zero,1010413c <__alt_data_end+0xfffe413c>
10104168:	d8800f15 	stw	r2,60(sp)
1010416c:	d8c01015 	stw	r3,64(sp)
10104170:	003c7606 	br	1010334c <__alt_data_end+0xfffe334c>
10104174:	00c00c04 	movi	r3,48
10104178:	10c00005 	stb	r3,0(r2)
1010417c:	d8c00517 	ldw	r3,20(sp)
10104180:	bd3fffc3 	ldbu	r20,-1(r23)
10104184:	18c00044 	addi	r3,r3,1
10104188:	d8c00515 	stw	r3,20(sp)
1010418c:	003db906 	br	10103874 <__alt_data_end+0xfffe3874>
10104190:	89400117 	ldw	r5,4(r17)
10104194:	e009883a 	mov	r4,fp
10104198:	010658c0 	call	1010658c <_Balloc>
1010419c:	89800417 	ldw	r6,16(r17)
101041a0:	89400304 	addi	r5,r17,12
101041a4:	11000304 	addi	r4,r2,12
101041a8:	31800084 	addi	r6,r6,2
101041ac:	318d883a 	add	r6,r6,r6
101041b0:	318d883a 	add	r6,r6,r6
101041b4:	1027883a 	mov	r19,r2
101041b8:	01061c00 	call	101061c0 <memcpy>
101041bc:	01800044 	movi	r6,1
101041c0:	980b883a 	mov	r5,r19
101041c4:	e009883a 	mov	r4,fp
101041c8:	0106d0c0 	call	10106d0c <__lshift>
101041cc:	1029883a 	mov	r20,r2
101041d0:	003ecc06 	br	10103d04 <__alt_data_end+0xfffe3d04>
101041d4:	00800e44 	movi	r2,57
101041d8:	90809026 	beq	r18,r2,1010441c <_dtoa_r+0x152c>
101041dc:	92000044 	addi	r8,r18,1
101041e0:	003f1f06 	br	10103e60 <__alt_data_end+0xfffe3e60>
101041e4:	9011883a 	mov	r8,r18
101041e8:	8825883a 	mov	r18,r17
101041ec:	a023883a 	mov	r17,r20
101041f0:	003e2906 	br	10103a98 <__alt_data_end+0xfffe3a98>
101041f4:	002b883a 	mov	r21,zero
101041f8:	0023883a 	mov	r17,zero
101041fc:	003f5406 	br	10103f50 <__alt_data_end+0xfffe3f50>
10104200:	61bfffc4 	addi	r6,r12,-1
10104204:	300490fa 	slli	r2,r6,3
10104208:	00c40474 	movhi	r3,4113
1010420c:	18fdee04 	addi	r3,r3,-2120
10104210:	1885883a 	add	r2,r3,r2
10104214:	11000017 	ldw	r4,0(r2)
10104218:	11400117 	ldw	r5,4(r2)
1010421c:	d8800717 	ldw	r2,28(sp)
10104220:	880f883a 	mov	r7,r17
10104224:	d9801215 	stw	r6,72(sp)
10104228:	800d883a 	mov	r6,r16
1010422c:	db001615 	stw	r12,88(sp)
10104230:	15c00044 	addi	r23,r2,1
10104234:	010bd980 	call	1010bd98 <__muldf3>
10104238:	d9401017 	ldw	r5,64(sp)
1010423c:	d9000f17 	ldw	r4,60(sp)
10104240:	d8c01515 	stw	r3,84(sp)
10104244:	d8801415 	stw	r2,80(sp)
10104248:	010cdac0 	call	1010cdac <__fixdfsi>
1010424c:	1009883a 	mov	r4,r2
10104250:	1021883a 	mov	r16,r2
10104254:	010ce2c0 	call	1010ce2c <__floatsidf>
10104258:	d9000f17 	ldw	r4,60(sp)
1010425c:	d9401017 	ldw	r5,64(sp)
10104260:	100d883a 	mov	r6,r2
10104264:	180f883a 	mov	r7,r3
10104268:	010c4b00 	call	1010c4b0 <__subdf3>
1010426c:	1829883a 	mov	r20,r3
10104270:	d8c00717 	ldw	r3,28(sp)
10104274:	84000c04 	addi	r16,r16,48
10104278:	1023883a 	mov	r17,r2
1010427c:	1c000005 	stb	r16,0(r3)
10104280:	db001617 	ldw	r12,88(sp)
10104284:	00800044 	movi	r2,1
10104288:	60802226 	beq	r12,r2,10104314 <_dtoa_r+0x1424>
1010428c:	d9c00717 	ldw	r7,28(sp)
10104290:	8805883a 	mov	r2,r17
10104294:	b82b883a 	mov	r21,r23
10104298:	3b19883a 	add	r12,r7,r12
1010429c:	6023883a 	mov	r17,r12
101042a0:	a007883a 	mov	r3,r20
101042a4:	dc800f15 	stw	r18,60(sp)
101042a8:	000d883a 	mov	r6,zero
101042ac:	01d00934 	movhi	r7,16420
101042b0:	1009883a 	mov	r4,r2
101042b4:	180b883a 	mov	r5,r3
101042b8:	010bd980 	call	1010bd98 <__muldf3>
101042bc:	180b883a 	mov	r5,r3
101042c0:	1009883a 	mov	r4,r2
101042c4:	1829883a 	mov	r20,r3
101042c8:	1025883a 	mov	r18,r2
101042cc:	010cdac0 	call	1010cdac <__fixdfsi>
101042d0:	1009883a 	mov	r4,r2
101042d4:	1021883a 	mov	r16,r2
101042d8:	010ce2c0 	call	1010ce2c <__floatsidf>
101042dc:	100d883a 	mov	r6,r2
101042e0:	180f883a 	mov	r7,r3
101042e4:	9009883a 	mov	r4,r18
101042e8:	a00b883a 	mov	r5,r20
101042ec:	84000c04 	addi	r16,r16,48
101042f0:	010c4b00 	call	1010c4b0 <__subdf3>
101042f4:	ad400044 	addi	r21,r21,1
101042f8:	ac3fffc5 	stb	r16,-1(r21)
101042fc:	ac7fea1e 	bne	r21,r17,101042a8 <__alt_data_end+0xfffe42a8>
10104300:	1023883a 	mov	r17,r2
10104304:	d8801217 	ldw	r2,72(sp)
10104308:	dc800f17 	ldw	r18,60(sp)
1010430c:	1829883a 	mov	r20,r3
10104310:	b8af883a 	add	r23,r23,r2
10104314:	d9001417 	ldw	r4,80(sp)
10104318:	d9401517 	ldw	r5,84(sp)
1010431c:	000d883a 	mov	r6,zero
10104320:	01cff834 	movhi	r7,16352
10104324:	010a9ac0 	call	1010a9ac <__adddf3>
10104328:	880d883a 	mov	r6,r17
1010432c:	a00f883a 	mov	r7,r20
10104330:	1009883a 	mov	r4,r2
10104334:	180b883a 	mov	r5,r3
10104338:	010bca40 	call	1010bca4 <__ledf2>
1010433c:	10003e0e 	bge	r2,zero,10104438 <_dtoa_r+0x1548>
10104340:	d9001317 	ldw	r4,76(sp)
10104344:	bd3fffc3 	ldbu	r20,-1(r23)
10104348:	d9000515 	stw	r4,20(sp)
1010434c:	003d3b06 	br	1010383c <__alt_data_end+0xfffe383c>
10104350:	0027883a 	mov	r19,zero
10104354:	003f1b06 	br	10103fc4 <__alt_data_end+0xfffe3fc4>
10104358:	d8800817 	ldw	r2,32(sp)
1010435c:	11e9c83a 	sub	r20,r2,r7
10104360:	0005883a 	mov	r2,zero
10104364:	003d5406 	br	101038b8 <__alt_data_end+0xfffe38b8>
10104368:	00800044 	movi	r2,1
1010436c:	003dc706 	br	10103a8c <__alt_data_end+0xfffe3a8c>
10104370:	d8c00217 	ldw	r3,8(sp)
10104374:	00800d84 	movi	r2,54
10104378:	dd400a17 	ldw	r21,40(sp)
1010437c:	10c5c83a 	sub	r2,r2,r3
10104380:	dd000817 	ldw	r20,32(sp)
10104384:	003d4c06 	br	101038b8 <__alt_data_end+0xfffe38b8>
10104388:	dc800f15 	stw	r18,60(sp)
1010438c:	dcc01015 	stw	r19,64(sp)
10104390:	04000084 	movi	r16,2
10104394:	003bed06 	br	1010334c <__alt_data_end+0xfffe334c>
10104398:	d9000617 	ldw	r4,24(sp)
1010439c:	203f0d26 	beq	r4,zero,10103fd4 <__alt_data_end+0xfffe3fd4>
101043a0:	d9800c17 	ldw	r6,48(sp)
101043a4:	01bcab0e 	bge	zero,r6,10103654 <__alt_data_end+0xfffe3654>
101043a8:	d9401017 	ldw	r5,64(sp)
101043ac:	d9000f17 	ldw	r4,60(sp)
101043b0:	000d883a 	mov	r6,zero
101043b4:	01d00934 	movhi	r7,16420
101043b8:	010bd980 	call	1010bd98 <__muldf3>
101043bc:	81000044 	addi	r4,r16,1
101043c0:	d8800f15 	stw	r2,60(sp)
101043c4:	d8c01015 	stw	r3,64(sp)
101043c8:	010ce2c0 	call	1010ce2c <__floatsidf>
101043cc:	d9800f17 	ldw	r6,60(sp)
101043d0:	d9c01017 	ldw	r7,64(sp)
101043d4:	1009883a 	mov	r4,r2
101043d8:	180b883a 	mov	r5,r3
101043dc:	010bd980 	call	1010bd98 <__muldf3>
101043e0:	01d00734 	movhi	r7,16412
101043e4:	000d883a 	mov	r6,zero
101043e8:	1009883a 	mov	r4,r2
101043ec:	180b883a 	mov	r5,r3
101043f0:	010a9ac0 	call	1010a9ac <__adddf3>
101043f4:	d9c00517 	ldw	r7,20(sp)
101043f8:	047f3034 	movhi	r17,64704
101043fc:	1021883a 	mov	r16,r2
10104400:	39ffffc4 	addi	r7,r7,-1
10104404:	d9c01315 	stw	r7,76(sp)
10104408:	1c63883a 	add	r17,r3,r17
1010440c:	db000c17 	ldw	r12,48(sp)
10104410:	003bea06 	br	101033bc <__alt_data_end+0xfffe33bc>
10104414:	dc000915 	stw	r16,36(sp)
10104418:	003e0e06 	br	10103c54 <__alt_data_end+0xfffe3c54>
1010441c:	01000e44 	movi	r4,57
10104420:	8825883a 	mov	r18,r17
10104424:	9dc00044 	addi	r23,r19,1
10104428:	99000005 	stb	r4,0(r19)
1010442c:	a023883a 	mov	r17,r20
10104430:	dc000915 	stw	r16,36(sp)
10104434:	003da406 	br	10103ac8 <__alt_data_end+0xfffe3ac8>
10104438:	d9801417 	ldw	r6,80(sp)
1010443c:	d9c01517 	ldw	r7,84(sp)
10104440:	0009883a 	mov	r4,zero
10104444:	014ff834 	movhi	r5,16352
10104448:	010c4b00 	call	1010c4b0 <__subdf3>
1010444c:	880d883a 	mov	r6,r17
10104450:	a00f883a 	mov	r7,r20
10104454:	1009883a 	mov	r4,r2
10104458:	180b883a 	mov	r5,r3
1010445c:	010bbc80 	call	1010bbc8 <__gedf2>
10104460:	00bc7c0e 	bge	zero,r2,10103654 <__alt_data_end+0xfffe3654>
10104464:	01000c04 	movi	r4,48
10104468:	00000106 	br	10104470 <_dtoa_r+0x1580>
1010446c:	102f883a 	mov	r23,r2
10104470:	b8bfffc4 	addi	r2,r23,-1
10104474:	10c00007 	ldb	r3,0(r2)
10104478:	193ffc26 	beq	r3,r4,1010446c <__alt_data_end+0xfffe446c>
1010447c:	d9801317 	ldw	r6,76(sp)
10104480:	d9800515 	stw	r6,20(sp)
10104484:	003c4406 	br	10103598 <__alt_data_end+0xfffe3598>
10104488:	d9801317 	ldw	r6,76(sp)
1010448c:	d9800515 	stw	r6,20(sp)
10104490:	003cea06 	br	1010383c <__alt_data_end+0xfffe383c>
10104494:	dd800f17 	ldw	r22,60(sp)
10104498:	dcc01017 	ldw	r19,64(sp)
1010449c:	dc801217 	ldw	r18,72(sp)
101044a0:	003c6c06 	br	10103654 <__alt_data_end+0xfffe3654>
101044a4:	903e031e 	bne	r18,zero,10103cb4 <__alt_data_end+0xfffe3cb4>
101044a8:	003ebb06 	br	10103f98 <__alt_data_end+0xfffe3f98>
101044ac:	103e6c1e 	bne	r2,zero,10103e60 <__alt_data_end+0xfffe3e60>
101044b0:	4080004c 	andi	r2,r8,1
101044b4:	103e6a26 	beq	r2,zero,10103e60 <__alt_data_end+0xfffe3e60>
101044b8:	003e6606 	br	10103e54 <__alt_data_end+0xfffe3e54>
101044bc:	d8c00317 	ldw	r3,12(sp)
101044c0:	00800084 	movi	r2,2
101044c4:	10c02916 	blt	r2,r3,1010456c <_dtoa_r+0x167c>
101044c8:	d9000c17 	ldw	r4,48(sp)
101044cc:	003e8806 	br	10103ef0 <__alt_data_end+0xfffe3ef0>
101044d0:	04000084 	movi	r16,2
101044d4:	003b9d06 	br	1010334c <__alt_data_end+0xfffe334c>
101044d8:	d9001317 	ldw	r4,76(sp)
101044dc:	d9000515 	stw	r4,20(sp)
101044e0:	003cd606 	br	1010383c <__alt_data_end+0xfffe383c>
101044e4:	d8801317 	ldw	r2,76(sp)
101044e8:	d8800515 	stw	r2,20(sp)
101044ec:	003c2a06 	br	10103598 <__alt_data_end+0xfffe3598>
101044f0:	d9800317 	ldw	r6,12(sp)
101044f4:	00800084 	movi	r2,2
101044f8:	11801516 	blt	r2,r6,10104550 <_dtoa_r+0x1660>
101044fc:	d9c00c17 	ldw	r7,48(sp)
10104500:	d9c00615 	stw	r7,24(sp)
10104504:	003df706 	br	10103ce4 <__alt_data_end+0xfffe3ce4>
10104508:	193d3926 	beq	r3,r4,101039f0 <__alt_data_end+0xfffe39f0>
1010450c:	00c00f04 	movi	r3,60
10104510:	1885c83a 	sub	r2,r3,r2
10104514:	003ddf06 	br	10103c94 <__alt_data_end+0xfffe3c94>
10104518:	e009883a 	mov	r4,fp
1010451c:	e0001115 	stw	zero,68(fp)
10104520:	000b883a 	mov	r5,zero
10104524:	010658c0 	call	1010658c <_Balloc>
10104528:	d8800715 	stw	r2,28(sp)
1010452c:	d8c00717 	ldw	r3,28(sp)
10104530:	00bfffc4 	movi	r2,-1
10104534:	01000044 	movi	r4,1
10104538:	d8800c15 	stw	r2,48(sp)
1010453c:	e0c01015 	stw	r3,64(fp)
10104540:	d9000b15 	stw	r4,44(sp)
10104544:	d8800615 	stw	r2,24(sp)
10104548:	d8002215 	stw	zero,136(sp)
1010454c:	003c4106 	br	10103654 <__alt_data_end+0xfffe3654>
10104550:	d8c00c17 	ldw	r3,48(sp)
10104554:	d8c00615 	stw	r3,24(sp)
10104558:	003e7006 	br	10103f1c <__alt_data_end+0xfffe3f1c>
1010455c:	04400044 	movi	r17,1
10104560:	003b2006 	br	101031e4 <__alt_data_end+0xfffe31e4>
10104564:	000b883a 	mov	r5,zero
10104568:	003b3d06 	br	10103260 <__alt_data_end+0xfffe3260>
1010456c:	d8800c17 	ldw	r2,48(sp)
10104570:	d8800615 	stw	r2,24(sp)
10104574:	003e6906 	br	10103f1c <__alt_data_end+0xfffe3f1c>

10104578 <__sflush_r>:
10104578:	2880030b 	ldhu	r2,12(r5)
1010457c:	defffb04 	addi	sp,sp,-20
10104580:	dcc00315 	stw	r19,12(sp)
10104584:	dc400115 	stw	r17,4(sp)
10104588:	dfc00415 	stw	ra,16(sp)
1010458c:	dc800215 	stw	r18,8(sp)
10104590:	dc000015 	stw	r16,0(sp)
10104594:	10c0020c 	andi	r3,r2,8
10104598:	2823883a 	mov	r17,r5
1010459c:	2027883a 	mov	r19,r4
101045a0:	1800311e 	bne	r3,zero,10104668 <__sflush_r+0xf0>
101045a4:	28c00117 	ldw	r3,4(r5)
101045a8:	10820014 	ori	r2,r2,2048
101045ac:	2880030d 	sth	r2,12(r5)
101045b0:	00c04b0e 	bge	zero,r3,101046e0 <__sflush_r+0x168>
101045b4:	8a000a17 	ldw	r8,40(r17)
101045b8:	40002326 	beq	r8,zero,10104648 <__sflush_r+0xd0>
101045bc:	9c000017 	ldw	r16,0(r19)
101045c0:	10c4000c 	andi	r3,r2,4096
101045c4:	98000015 	stw	zero,0(r19)
101045c8:	18004826 	beq	r3,zero,101046ec <__sflush_r+0x174>
101045cc:	89801417 	ldw	r6,80(r17)
101045d0:	10c0010c 	andi	r3,r2,4
101045d4:	18000626 	beq	r3,zero,101045f0 <__sflush_r+0x78>
101045d8:	88c00117 	ldw	r3,4(r17)
101045dc:	88800c17 	ldw	r2,48(r17)
101045e0:	30cdc83a 	sub	r6,r6,r3
101045e4:	10000226 	beq	r2,zero,101045f0 <__sflush_r+0x78>
101045e8:	88800f17 	ldw	r2,60(r17)
101045ec:	308dc83a 	sub	r6,r6,r2
101045f0:	89400717 	ldw	r5,28(r17)
101045f4:	000f883a 	mov	r7,zero
101045f8:	9809883a 	mov	r4,r19
101045fc:	403ee83a 	callr	r8
10104600:	00ffffc4 	movi	r3,-1
10104604:	10c04426 	beq	r2,r3,10104718 <__sflush_r+0x1a0>
10104608:	88c0030b 	ldhu	r3,12(r17)
1010460c:	89000417 	ldw	r4,16(r17)
10104610:	88000115 	stw	zero,4(r17)
10104614:	197dffcc 	andi	r5,r3,63487
10104618:	8940030d 	sth	r5,12(r17)
1010461c:	89000015 	stw	r4,0(r17)
10104620:	18c4000c 	andi	r3,r3,4096
10104624:	18002c1e 	bne	r3,zero,101046d8 <__sflush_r+0x160>
10104628:	89400c17 	ldw	r5,48(r17)
1010462c:	9c000015 	stw	r16,0(r19)
10104630:	28000526 	beq	r5,zero,10104648 <__sflush_r+0xd0>
10104634:	88801004 	addi	r2,r17,64
10104638:	28800226 	beq	r5,r2,10104644 <__sflush_r+0xcc>
1010463c:	9809883a 	mov	r4,r19
10104640:	0104ce40 	call	10104ce4 <_free_r>
10104644:	88000c15 	stw	zero,48(r17)
10104648:	0005883a 	mov	r2,zero
1010464c:	dfc00417 	ldw	ra,16(sp)
10104650:	dcc00317 	ldw	r19,12(sp)
10104654:	dc800217 	ldw	r18,8(sp)
10104658:	dc400117 	ldw	r17,4(sp)
1010465c:	dc000017 	ldw	r16,0(sp)
10104660:	dec00504 	addi	sp,sp,20
10104664:	f800283a 	ret
10104668:	2c800417 	ldw	r18,16(r5)
1010466c:	903ff626 	beq	r18,zero,10104648 <__alt_data_end+0xfffe4648>
10104670:	2c000017 	ldw	r16,0(r5)
10104674:	108000cc 	andi	r2,r2,3
10104678:	2c800015 	stw	r18,0(r5)
1010467c:	84a1c83a 	sub	r16,r16,r18
10104680:	1000131e 	bne	r2,zero,101046d0 <__sflush_r+0x158>
10104684:	28800517 	ldw	r2,20(r5)
10104688:	88800215 	stw	r2,8(r17)
1010468c:	04000316 	blt	zero,r16,1010469c <__sflush_r+0x124>
10104690:	003fed06 	br	10104648 <__alt_data_end+0xfffe4648>
10104694:	90a5883a 	add	r18,r18,r2
10104698:	043feb0e 	bge	zero,r16,10104648 <__alt_data_end+0xfffe4648>
1010469c:	88800917 	ldw	r2,36(r17)
101046a0:	89400717 	ldw	r5,28(r17)
101046a4:	800f883a 	mov	r7,r16
101046a8:	900d883a 	mov	r6,r18
101046ac:	9809883a 	mov	r4,r19
101046b0:	103ee83a 	callr	r2
101046b4:	80a1c83a 	sub	r16,r16,r2
101046b8:	00bff616 	blt	zero,r2,10104694 <__alt_data_end+0xfffe4694>
101046bc:	88c0030b 	ldhu	r3,12(r17)
101046c0:	00bfffc4 	movi	r2,-1
101046c4:	18c01014 	ori	r3,r3,64
101046c8:	88c0030d 	sth	r3,12(r17)
101046cc:	003fdf06 	br	1010464c <__alt_data_end+0xfffe464c>
101046d0:	0005883a 	mov	r2,zero
101046d4:	003fec06 	br	10104688 <__alt_data_end+0xfffe4688>
101046d8:	88801415 	stw	r2,80(r17)
101046dc:	003fd206 	br	10104628 <__alt_data_end+0xfffe4628>
101046e0:	28c00f17 	ldw	r3,60(r5)
101046e4:	00ffb316 	blt	zero,r3,101045b4 <__alt_data_end+0xfffe45b4>
101046e8:	003fd706 	br	10104648 <__alt_data_end+0xfffe4648>
101046ec:	89400717 	ldw	r5,28(r17)
101046f0:	000d883a 	mov	r6,zero
101046f4:	01c00044 	movi	r7,1
101046f8:	9809883a 	mov	r4,r19
101046fc:	403ee83a 	callr	r8
10104700:	100d883a 	mov	r6,r2
10104704:	00bfffc4 	movi	r2,-1
10104708:	30801426 	beq	r6,r2,1010475c <__sflush_r+0x1e4>
1010470c:	8880030b 	ldhu	r2,12(r17)
10104710:	8a000a17 	ldw	r8,40(r17)
10104714:	003fae06 	br	101045d0 <__alt_data_end+0xfffe45d0>
10104718:	98c00017 	ldw	r3,0(r19)
1010471c:	183fba26 	beq	r3,zero,10104608 <__alt_data_end+0xfffe4608>
10104720:	01000744 	movi	r4,29
10104724:	19000626 	beq	r3,r4,10104740 <__sflush_r+0x1c8>
10104728:	01000584 	movi	r4,22
1010472c:	19000426 	beq	r3,r4,10104740 <__sflush_r+0x1c8>
10104730:	88c0030b 	ldhu	r3,12(r17)
10104734:	18c01014 	ori	r3,r3,64
10104738:	88c0030d 	sth	r3,12(r17)
1010473c:	003fc306 	br	1010464c <__alt_data_end+0xfffe464c>
10104740:	8880030b 	ldhu	r2,12(r17)
10104744:	88c00417 	ldw	r3,16(r17)
10104748:	88000115 	stw	zero,4(r17)
1010474c:	10bdffcc 	andi	r2,r2,63487
10104750:	8880030d 	sth	r2,12(r17)
10104754:	88c00015 	stw	r3,0(r17)
10104758:	003fb306 	br	10104628 <__alt_data_end+0xfffe4628>
1010475c:	98800017 	ldw	r2,0(r19)
10104760:	103fea26 	beq	r2,zero,1010470c <__alt_data_end+0xfffe470c>
10104764:	00c00744 	movi	r3,29
10104768:	10c00226 	beq	r2,r3,10104774 <__sflush_r+0x1fc>
1010476c:	00c00584 	movi	r3,22
10104770:	10c0031e 	bne	r2,r3,10104780 <__sflush_r+0x208>
10104774:	9c000015 	stw	r16,0(r19)
10104778:	0005883a 	mov	r2,zero
1010477c:	003fb306 	br	1010464c <__alt_data_end+0xfffe464c>
10104780:	88c0030b 	ldhu	r3,12(r17)
10104784:	3005883a 	mov	r2,r6
10104788:	18c01014 	ori	r3,r3,64
1010478c:	88c0030d 	sth	r3,12(r17)
10104790:	003fae06 	br	1010464c <__alt_data_end+0xfffe464c>

10104794 <_fflush_r>:
10104794:	defffd04 	addi	sp,sp,-12
10104798:	dc000115 	stw	r16,4(sp)
1010479c:	dfc00215 	stw	ra,8(sp)
101047a0:	2021883a 	mov	r16,r4
101047a4:	20000226 	beq	r4,zero,101047b0 <_fflush_r+0x1c>
101047a8:	20800e17 	ldw	r2,56(r4)
101047ac:	10000c26 	beq	r2,zero,101047e0 <_fflush_r+0x4c>
101047b0:	2880030f 	ldh	r2,12(r5)
101047b4:	1000051e 	bne	r2,zero,101047cc <_fflush_r+0x38>
101047b8:	0005883a 	mov	r2,zero
101047bc:	dfc00217 	ldw	ra,8(sp)
101047c0:	dc000117 	ldw	r16,4(sp)
101047c4:	dec00304 	addi	sp,sp,12
101047c8:	f800283a 	ret
101047cc:	8009883a 	mov	r4,r16
101047d0:	dfc00217 	ldw	ra,8(sp)
101047d4:	dc000117 	ldw	r16,4(sp)
101047d8:	dec00304 	addi	sp,sp,12
101047dc:	01045781 	jmpi	10104578 <__sflush_r>
101047e0:	d9400015 	stw	r5,0(sp)
101047e4:	0104b700 	call	10104b70 <__sinit>
101047e8:	d9400017 	ldw	r5,0(sp)
101047ec:	003ff006 	br	101047b0 <__alt_data_end+0xfffe47b0>

101047f0 <fflush>:
101047f0:	20000526 	beq	r4,zero,10104808 <fflush+0x18>
101047f4:	00840474 	movhi	r2,4113
101047f8:	10852104 	addi	r2,r2,5252
101047fc:	200b883a 	mov	r5,r4
10104800:	11000017 	ldw	r4,0(r2)
10104804:	01047941 	jmpi	10104794 <_fflush_r>
10104808:	00840474 	movhi	r2,4113
1010480c:	10852004 	addi	r2,r2,5248
10104810:	11000017 	ldw	r4,0(r2)
10104814:	01440434 	movhi	r5,4112
10104818:	2951e504 	addi	r5,r5,18324
1010481c:	01055741 	jmpi	10105574 <_fwalk_reent>

10104820 <__fp_unlock>:
10104820:	0005883a 	mov	r2,zero
10104824:	f800283a 	ret

10104828 <_cleanup_r>:
10104828:	01440474 	movhi	r5,4113
1010482c:	29656304 	addi	r5,r5,-27252
10104830:	01055741 	jmpi	10105574 <_fwalk_reent>

10104834 <__sinit.part.1>:
10104834:	defff704 	addi	sp,sp,-36
10104838:	00c40434 	movhi	r3,4112
1010483c:	dfc00815 	stw	ra,32(sp)
10104840:	ddc00715 	stw	r23,28(sp)
10104844:	dd800615 	stw	r22,24(sp)
10104848:	dd400515 	stw	r21,20(sp)
1010484c:	dd000415 	stw	r20,16(sp)
10104850:	dcc00315 	stw	r19,12(sp)
10104854:	dc800215 	stw	r18,8(sp)
10104858:	dc400115 	stw	r17,4(sp)
1010485c:	dc000015 	stw	r16,0(sp)
10104860:	18d20a04 	addi	r3,r3,18472
10104864:	24000117 	ldw	r16,4(r4)
10104868:	20c00f15 	stw	r3,60(r4)
1010486c:	2080bb04 	addi	r2,r4,748
10104870:	00c000c4 	movi	r3,3
10104874:	20c0b915 	stw	r3,740(r4)
10104878:	2080ba15 	stw	r2,744(r4)
1010487c:	2000b815 	stw	zero,736(r4)
10104880:	05c00204 	movi	r23,8
10104884:	00800104 	movi	r2,4
10104888:	2025883a 	mov	r18,r4
1010488c:	b80d883a 	mov	r6,r23
10104890:	81001704 	addi	r4,r16,92
10104894:	000b883a 	mov	r5,zero
10104898:	80000015 	stw	zero,0(r16)
1010489c:	80000115 	stw	zero,4(r16)
101048a0:	80000215 	stw	zero,8(r16)
101048a4:	8080030d 	sth	r2,12(r16)
101048a8:	80001915 	stw	zero,100(r16)
101048ac:	8000038d 	sth	zero,14(r16)
101048b0:	80000415 	stw	zero,16(r16)
101048b4:	80000515 	stw	zero,20(r16)
101048b8:	80000615 	stw	zero,24(r16)
101048bc:	01064640 	call	10106464 <memset>
101048c0:	05840434 	movhi	r22,4112
101048c4:	94400217 	ldw	r17,8(r18)
101048c8:	05440434 	movhi	r21,4112
101048cc:	05040434 	movhi	r20,4112
101048d0:	04c40434 	movhi	r19,4112
101048d4:	b59eed04 	addi	r22,r22,31668
101048d8:	ad5f0404 	addi	r21,r21,31760
101048dc:	a51f2304 	addi	r20,r20,31884
101048e0:	9cdf3a04 	addi	r19,r19,31976
101048e4:	85800815 	stw	r22,32(r16)
101048e8:	85400915 	stw	r21,36(r16)
101048ec:	85000a15 	stw	r20,40(r16)
101048f0:	84c00b15 	stw	r19,44(r16)
101048f4:	84000715 	stw	r16,28(r16)
101048f8:	00800284 	movi	r2,10
101048fc:	8880030d 	sth	r2,12(r17)
10104900:	00800044 	movi	r2,1
10104904:	b80d883a 	mov	r6,r23
10104908:	89001704 	addi	r4,r17,92
1010490c:	000b883a 	mov	r5,zero
10104910:	88000015 	stw	zero,0(r17)
10104914:	88000115 	stw	zero,4(r17)
10104918:	88000215 	stw	zero,8(r17)
1010491c:	88001915 	stw	zero,100(r17)
10104920:	8880038d 	sth	r2,14(r17)
10104924:	88000415 	stw	zero,16(r17)
10104928:	88000515 	stw	zero,20(r17)
1010492c:	88000615 	stw	zero,24(r17)
10104930:	01064640 	call	10106464 <memset>
10104934:	94000317 	ldw	r16,12(r18)
10104938:	00800484 	movi	r2,18
1010493c:	8c400715 	stw	r17,28(r17)
10104940:	8d800815 	stw	r22,32(r17)
10104944:	8d400915 	stw	r21,36(r17)
10104948:	8d000a15 	stw	r20,40(r17)
1010494c:	8cc00b15 	stw	r19,44(r17)
10104950:	8080030d 	sth	r2,12(r16)
10104954:	00800084 	movi	r2,2
10104958:	80000015 	stw	zero,0(r16)
1010495c:	80000115 	stw	zero,4(r16)
10104960:	80000215 	stw	zero,8(r16)
10104964:	80001915 	stw	zero,100(r16)
10104968:	8080038d 	sth	r2,14(r16)
1010496c:	80000415 	stw	zero,16(r16)
10104970:	80000515 	stw	zero,20(r16)
10104974:	80000615 	stw	zero,24(r16)
10104978:	b80d883a 	mov	r6,r23
1010497c:	000b883a 	mov	r5,zero
10104980:	81001704 	addi	r4,r16,92
10104984:	01064640 	call	10106464 <memset>
10104988:	00800044 	movi	r2,1
1010498c:	84000715 	stw	r16,28(r16)
10104990:	85800815 	stw	r22,32(r16)
10104994:	85400915 	stw	r21,36(r16)
10104998:	85000a15 	stw	r20,40(r16)
1010499c:	84c00b15 	stw	r19,44(r16)
101049a0:	90800e15 	stw	r2,56(r18)
101049a4:	dfc00817 	ldw	ra,32(sp)
101049a8:	ddc00717 	ldw	r23,28(sp)
101049ac:	dd800617 	ldw	r22,24(sp)
101049b0:	dd400517 	ldw	r21,20(sp)
101049b4:	dd000417 	ldw	r20,16(sp)
101049b8:	dcc00317 	ldw	r19,12(sp)
101049bc:	dc800217 	ldw	r18,8(sp)
101049c0:	dc400117 	ldw	r17,4(sp)
101049c4:	dc000017 	ldw	r16,0(sp)
101049c8:	dec00904 	addi	sp,sp,36
101049cc:	f800283a 	ret

101049d0 <__fp_lock>:
101049d0:	0005883a 	mov	r2,zero
101049d4:	f800283a 	ret

101049d8 <__sfmoreglue>:
101049d8:	defffc04 	addi	sp,sp,-16
101049dc:	dc400115 	stw	r17,4(sp)
101049e0:	2c7fffc4 	addi	r17,r5,-1
101049e4:	8c401a24 	muli	r17,r17,104
101049e8:	dc800215 	stw	r18,8(sp)
101049ec:	2825883a 	mov	r18,r5
101049f0:	89401d04 	addi	r5,r17,116
101049f4:	dc000015 	stw	r16,0(sp)
101049f8:	dfc00315 	stw	ra,12(sp)
101049fc:	01058d00 	call	101058d0 <_malloc_r>
10104a00:	1021883a 	mov	r16,r2
10104a04:	10000726 	beq	r2,zero,10104a24 <__sfmoreglue+0x4c>
10104a08:	11000304 	addi	r4,r2,12
10104a0c:	10000015 	stw	zero,0(r2)
10104a10:	14800115 	stw	r18,4(r2)
10104a14:	11000215 	stw	r4,8(r2)
10104a18:	89801a04 	addi	r6,r17,104
10104a1c:	000b883a 	mov	r5,zero
10104a20:	01064640 	call	10106464 <memset>
10104a24:	8005883a 	mov	r2,r16
10104a28:	dfc00317 	ldw	ra,12(sp)
10104a2c:	dc800217 	ldw	r18,8(sp)
10104a30:	dc400117 	ldw	r17,4(sp)
10104a34:	dc000017 	ldw	r16,0(sp)
10104a38:	dec00404 	addi	sp,sp,16
10104a3c:	f800283a 	ret

10104a40 <__sfp>:
10104a40:	defffb04 	addi	sp,sp,-20
10104a44:	dc000015 	stw	r16,0(sp)
10104a48:	04040474 	movhi	r16,4113
10104a4c:	84052004 	addi	r16,r16,5248
10104a50:	dcc00315 	stw	r19,12(sp)
10104a54:	2027883a 	mov	r19,r4
10104a58:	81000017 	ldw	r4,0(r16)
10104a5c:	dfc00415 	stw	ra,16(sp)
10104a60:	dc800215 	stw	r18,8(sp)
10104a64:	20800e17 	ldw	r2,56(r4)
10104a68:	dc400115 	stw	r17,4(sp)
10104a6c:	1000021e 	bne	r2,zero,10104a78 <__sfp+0x38>
10104a70:	01048340 	call	10104834 <__sinit.part.1>
10104a74:	81000017 	ldw	r4,0(r16)
10104a78:	2480b804 	addi	r18,r4,736
10104a7c:	047fffc4 	movi	r17,-1
10104a80:	91000117 	ldw	r4,4(r18)
10104a84:	94000217 	ldw	r16,8(r18)
10104a88:	213fffc4 	addi	r4,r4,-1
10104a8c:	20000a16 	blt	r4,zero,10104ab8 <__sfp+0x78>
10104a90:	8080030f 	ldh	r2,12(r16)
10104a94:	10000c26 	beq	r2,zero,10104ac8 <__sfp+0x88>
10104a98:	80c01d04 	addi	r3,r16,116
10104a9c:	00000206 	br	10104aa8 <__sfp+0x68>
10104aa0:	18bfe60f 	ldh	r2,-104(r3)
10104aa4:	10000826 	beq	r2,zero,10104ac8 <__sfp+0x88>
10104aa8:	213fffc4 	addi	r4,r4,-1
10104aac:	1c3ffd04 	addi	r16,r3,-12
10104ab0:	18c01a04 	addi	r3,r3,104
10104ab4:	247ffa1e 	bne	r4,r17,10104aa0 <__alt_data_end+0xfffe4aa0>
10104ab8:	90800017 	ldw	r2,0(r18)
10104abc:	10001d26 	beq	r2,zero,10104b34 <__sfp+0xf4>
10104ac0:	1025883a 	mov	r18,r2
10104ac4:	003fee06 	br	10104a80 <__alt_data_end+0xfffe4a80>
10104ac8:	00bfffc4 	movi	r2,-1
10104acc:	8080038d 	sth	r2,14(r16)
10104ad0:	00800044 	movi	r2,1
10104ad4:	8080030d 	sth	r2,12(r16)
10104ad8:	80001915 	stw	zero,100(r16)
10104adc:	80000015 	stw	zero,0(r16)
10104ae0:	80000215 	stw	zero,8(r16)
10104ae4:	80000115 	stw	zero,4(r16)
10104ae8:	80000415 	stw	zero,16(r16)
10104aec:	80000515 	stw	zero,20(r16)
10104af0:	80000615 	stw	zero,24(r16)
10104af4:	01800204 	movi	r6,8
10104af8:	000b883a 	mov	r5,zero
10104afc:	81001704 	addi	r4,r16,92
10104b00:	01064640 	call	10106464 <memset>
10104b04:	8005883a 	mov	r2,r16
10104b08:	80000c15 	stw	zero,48(r16)
10104b0c:	80000d15 	stw	zero,52(r16)
10104b10:	80001115 	stw	zero,68(r16)
10104b14:	80001215 	stw	zero,72(r16)
10104b18:	dfc00417 	ldw	ra,16(sp)
10104b1c:	dcc00317 	ldw	r19,12(sp)
10104b20:	dc800217 	ldw	r18,8(sp)
10104b24:	dc400117 	ldw	r17,4(sp)
10104b28:	dc000017 	ldw	r16,0(sp)
10104b2c:	dec00504 	addi	sp,sp,20
10104b30:	f800283a 	ret
10104b34:	01400104 	movi	r5,4
10104b38:	9809883a 	mov	r4,r19
10104b3c:	01049d80 	call	101049d8 <__sfmoreglue>
10104b40:	90800015 	stw	r2,0(r18)
10104b44:	103fde1e 	bne	r2,zero,10104ac0 <__alt_data_end+0xfffe4ac0>
10104b48:	00800304 	movi	r2,12
10104b4c:	98800015 	stw	r2,0(r19)
10104b50:	0005883a 	mov	r2,zero
10104b54:	003ff006 	br	10104b18 <__alt_data_end+0xfffe4b18>

10104b58 <_cleanup>:
10104b58:	00840474 	movhi	r2,4113
10104b5c:	10852004 	addi	r2,r2,5248
10104b60:	11000017 	ldw	r4,0(r2)
10104b64:	01440474 	movhi	r5,4113
10104b68:	29656304 	addi	r5,r5,-27252
10104b6c:	01055741 	jmpi	10105574 <_fwalk_reent>

10104b70 <__sinit>:
10104b70:	20800e17 	ldw	r2,56(r4)
10104b74:	10000126 	beq	r2,zero,10104b7c <__sinit+0xc>
10104b78:	f800283a 	ret
10104b7c:	01048341 	jmpi	10104834 <__sinit.part.1>

10104b80 <__sfp_lock_acquire>:
10104b80:	f800283a 	ret

10104b84 <__sfp_lock_release>:
10104b84:	f800283a 	ret

10104b88 <__sinit_lock_acquire>:
10104b88:	f800283a 	ret

10104b8c <__sinit_lock_release>:
10104b8c:	f800283a 	ret

10104b90 <__fp_lock_all>:
10104b90:	00840474 	movhi	r2,4113
10104b94:	10852104 	addi	r2,r2,5252
10104b98:	11000017 	ldw	r4,0(r2)
10104b9c:	01440434 	movhi	r5,4112
10104ba0:	29527404 	addi	r5,r5,18896
10104ba4:	01054b01 	jmpi	101054b0 <_fwalk>

10104ba8 <__fp_unlock_all>:
10104ba8:	00840474 	movhi	r2,4113
10104bac:	10852104 	addi	r2,r2,5252
10104bb0:	11000017 	ldw	r4,0(r2)
10104bb4:	01440434 	movhi	r5,4112
10104bb8:	29520804 	addi	r5,r5,18464
10104bbc:	01054b01 	jmpi	101054b0 <_fwalk>

10104bc0 <_malloc_trim_r>:
10104bc0:	defffb04 	addi	sp,sp,-20
10104bc4:	dcc00315 	stw	r19,12(sp)
10104bc8:	04c40474 	movhi	r19,4113
10104bcc:	dc800215 	stw	r18,8(sp)
10104bd0:	dc400115 	stw	r17,4(sp)
10104bd4:	dc000015 	stw	r16,0(sp)
10104bd8:	dfc00415 	stw	ra,16(sp)
10104bdc:	2821883a 	mov	r16,r5
10104be0:	9cff9c04 	addi	r19,r19,-400
10104be4:	2025883a 	mov	r18,r4
10104be8:	010d5900 	call	1010d590 <__malloc_lock>
10104bec:	98800217 	ldw	r2,8(r19)
10104bf0:	14400117 	ldw	r17,4(r2)
10104bf4:	00bfff04 	movi	r2,-4
10104bf8:	88a2703a 	and	r17,r17,r2
10104bfc:	8c21c83a 	sub	r16,r17,r16
10104c00:	8403fbc4 	addi	r16,r16,4079
10104c04:	8020d33a 	srli	r16,r16,12
10104c08:	0083ffc4 	movi	r2,4095
10104c0c:	843fffc4 	addi	r16,r16,-1
10104c10:	8020933a 	slli	r16,r16,12
10104c14:	1400060e 	bge	r2,r16,10104c30 <_malloc_trim_r+0x70>
10104c18:	000b883a 	mov	r5,zero
10104c1c:	9009883a 	mov	r4,r18
10104c20:	0107b600 	call	10107b60 <_sbrk_r>
10104c24:	98c00217 	ldw	r3,8(r19)
10104c28:	1c47883a 	add	r3,r3,r17
10104c2c:	10c00a26 	beq	r2,r3,10104c58 <_malloc_trim_r+0x98>
10104c30:	9009883a 	mov	r4,r18
10104c34:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10104c38:	0005883a 	mov	r2,zero
10104c3c:	dfc00417 	ldw	ra,16(sp)
10104c40:	dcc00317 	ldw	r19,12(sp)
10104c44:	dc800217 	ldw	r18,8(sp)
10104c48:	dc400117 	ldw	r17,4(sp)
10104c4c:	dc000017 	ldw	r16,0(sp)
10104c50:	dec00504 	addi	sp,sp,20
10104c54:	f800283a 	ret
10104c58:	040bc83a 	sub	r5,zero,r16
10104c5c:	9009883a 	mov	r4,r18
10104c60:	0107b600 	call	10107b60 <_sbrk_r>
10104c64:	00ffffc4 	movi	r3,-1
10104c68:	10c00d26 	beq	r2,r3,10104ca0 <_malloc_trim_r+0xe0>
10104c6c:	00c40474 	movhi	r3,4113
10104c70:	18cbf904 	addi	r3,r3,12260
10104c74:	18800017 	ldw	r2,0(r3)
10104c78:	99000217 	ldw	r4,8(r19)
10104c7c:	8c23c83a 	sub	r17,r17,r16
10104c80:	8c400054 	ori	r17,r17,1
10104c84:	1421c83a 	sub	r16,r2,r16
10104c88:	24400115 	stw	r17,4(r4)
10104c8c:	9009883a 	mov	r4,r18
10104c90:	1c000015 	stw	r16,0(r3)
10104c94:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10104c98:	00800044 	movi	r2,1
10104c9c:	003fe706 	br	10104c3c <__alt_data_end+0xfffe4c3c>
10104ca0:	000b883a 	mov	r5,zero
10104ca4:	9009883a 	mov	r4,r18
10104ca8:	0107b600 	call	10107b60 <_sbrk_r>
10104cac:	99000217 	ldw	r4,8(r19)
10104cb0:	014003c4 	movi	r5,15
10104cb4:	1107c83a 	sub	r3,r2,r4
10104cb8:	28ffdd0e 	bge	r5,r3,10104c30 <__alt_data_end+0xfffe4c30>
10104cbc:	01440474 	movhi	r5,4113
10104cc0:	29452304 	addi	r5,r5,5260
10104cc4:	29400017 	ldw	r5,0(r5)
10104cc8:	18c00054 	ori	r3,r3,1
10104ccc:	20c00115 	stw	r3,4(r4)
10104cd0:	00c40474 	movhi	r3,4113
10104cd4:	1145c83a 	sub	r2,r2,r5
10104cd8:	18cbf904 	addi	r3,r3,12260
10104cdc:	18800015 	stw	r2,0(r3)
10104ce0:	003fd306 	br	10104c30 <__alt_data_end+0xfffe4c30>

10104ce4 <_free_r>:
10104ce4:	28004126 	beq	r5,zero,10104dec <_free_r+0x108>
10104ce8:	defffd04 	addi	sp,sp,-12
10104cec:	dc400115 	stw	r17,4(sp)
10104cf0:	dc000015 	stw	r16,0(sp)
10104cf4:	2023883a 	mov	r17,r4
10104cf8:	2821883a 	mov	r16,r5
10104cfc:	dfc00215 	stw	ra,8(sp)
10104d00:	010d5900 	call	1010d590 <__malloc_lock>
10104d04:	81ffff17 	ldw	r7,-4(r16)
10104d08:	00bfff84 	movi	r2,-2
10104d0c:	01040474 	movhi	r4,4113
10104d10:	81bffe04 	addi	r6,r16,-8
10104d14:	3884703a 	and	r2,r7,r2
10104d18:	213f9c04 	addi	r4,r4,-400
10104d1c:	308b883a 	add	r5,r6,r2
10104d20:	2a400117 	ldw	r9,4(r5)
10104d24:	22000217 	ldw	r8,8(r4)
10104d28:	00ffff04 	movi	r3,-4
10104d2c:	48c6703a 	and	r3,r9,r3
10104d30:	2a005726 	beq	r5,r8,10104e90 <_free_r+0x1ac>
10104d34:	28c00115 	stw	r3,4(r5)
10104d38:	39c0004c 	andi	r7,r7,1
10104d3c:	3800091e 	bne	r7,zero,10104d64 <_free_r+0x80>
10104d40:	823ffe17 	ldw	r8,-8(r16)
10104d44:	22400204 	addi	r9,r4,8
10104d48:	320dc83a 	sub	r6,r6,r8
10104d4c:	31c00217 	ldw	r7,8(r6)
10104d50:	1205883a 	add	r2,r2,r8
10104d54:	3a406526 	beq	r7,r9,10104eec <_free_r+0x208>
10104d58:	32000317 	ldw	r8,12(r6)
10104d5c:	3a000315 	stw	r8,12(r7)
10104d60:	41c00215 	stw	r7,8(r8)
10104d64:	28cf883a 	add	r7,r5,r3
10104d68:	39c00117 	ldw	r7,4(r7)
10104d6c:	39c0004c 	andi	r7,r7,1
10104d70:	38003a26 	beq	r7,zero,10104e5c <_free_r+0x178>
10104d74:	10c00054 	ori	r3,r2,1
10104d78:	30c00115 	stw	r3,4(r6)
10104d7c:	3087883a 	add	r3,r6,r2
10104d80:	18800015 	stw	r2,0(r3)
10104d84:	00c07fc4 	movi	r3,511
10104d88:	18801936 	bltu	r3,r2,10104df0 <_free_r+0x10c>
10104d8c:	1004d0fa 	srli	r2,r2,3
10104d90:	01c00044 	movi	r7,1
10104d94:	21400117 	ldw	r5,4(r4)
10104d98:	10c00044 	addi	r3,r2,1
10104d9c:	18c7883a 	add	r3,r3,r3
10104da0:	1005d0ba 	srai	r2,r2,2
10104da4:	18c7883a 	add	r3,r3,r3
10104da8:	18c7883a 	add	r3,r3,r3
10104dac:	1907883a 	add	r3,r3,r4
10104db0:	3884983a 	sll	r2,r7,r2
10104db4:	19c00017 	ldw	r7,0(r3)
10104db8:	1a3ffe04 	addi	r8,r3,-8
10104dbc:	1144b03a 	or	r2,r2,r5
10104dc0:	32000315 	stw	r8,12(r6)
10104dc4:	31c00215 	stw	r7,8(r6)
10104dc8:	20800115 	stw	r2,4(r4)
10104dcc:	19800015 	stw	r6,0(r3)
10104dd0:	39800315 	stw	r6,12(r7)
10104dd4:	8809883a 	mov	r4,r17
10104dd8:	dfc00217 	ldw	ra,8(sp)
10104ddc:	dc400117 	ldw	r17,4(sp)
10104de0:	dc000017 	ldw	r16,0(sp)
10104de4:	dec00304 	addi	sp,sp,12
10104de8:	010d5b41 	jmpi	1010d5b4 <__malloc_unlock>
10104dec:	f800283a 	ret
10104df0:	100ad27a 	srli	r5,r2,9
10104df4:	00c00104 	movi	r3,4
10104df8:	19404a36 	bltu	r3,r5,10104f24 <_free_r+0x240>
10104dfc:	100ad1ba 	srli	r5,r2,6
10104e00:	28c00e44 	addi	r3,r5,57
10104e04:	18c7883a 	add	r3,r3,r3
10104e08:	29400e04 	addi	r5,r5,56
10104e0c:	18c7883a 	add	r3,r3,r3
10104e10:	18c7883a 	add	r3,r3,r3
10104e14:	1909883a 	add	r4,r3,r4
10104e18:	20c00017 	ldw	r3,0(r4)
10104e1c:	01c40474 	movhi	r7,4113
10104e20:	213ffe04 	addi	r4,r4,-8
10104e24:	39ff9c04 	addi	r7,r7,-400
10104e28:	20c04426 	beq	r4,r3,10104f3c <_free_r+0x258>
10104e2c:	01ffff04 	movi	r7,-4
10104e30:	19400117 	ldw	r5,4(r3)
10104e34:	29ca703a 	and	r5,r5,r7
10104e38:	1140022e 	bgeu	r2,r5,10104e44 <_free_r+0x160>
10104e3c:	18c00217 	ldw	r3,8(r3)
10104e40:	20fffb1e 	bne	r4,r3,10104e30 <__alt_data_end+0xfffe4e30>
10104e44:	19000317 	ldw	r4,12(r3)
10104e48:	31000315 	stw	r4,12(r6)
10104e4c:	30c00215 	stw	r3,8(r6)
10104e50:	21800215 	stw	r6,8(r4)
10104e54:	19800315 	stw	r6,12(r3)
10104e58:	003fde06 	br	10104dd4 <__alt_data_end+0xfffe4dd4>
10104e5c:	29c00217 	ldw	r7,8(r5)
10104e60:	10c5883a 	add	r2,r2,r3
10104e64:	00c40474 	movhi	r3,4113
10104e68:	18ff9e04 	addi	r3,r3,-392
10104e6c:	38c03b26 	beq	r7,r3,10104f5c <_free_r+0x278>
10104e70:	2a000317 	ldw	r8,12(r5)
10104e74:	11400054 	ori	r5,r2,1
10104e78:	3087883a 	add	r3,r6,r2
10104e7c:	3a000315 	stw	r8,12(r7)
10104e80:	41c00215 	stw	r7,8(r8)
10104e84:	31400115 	stw	r5,4(r6)
10104e88:	18800015 	stw	r2,0(r3)
10104e8c:	003fbd06 	br	10104d84 <__alt_data_end+0xfffe4d84>
10104e90:	39c0004c 	andi	r7,r7,1
10104e94:	10c5883a 	add	r2,r2,r3
10104e98:	3800071e 	bne	r7,zero,10104eb8 <_free_r+0x1d4>
10104e9c:	81fffe17 	ldw	r7,-8(r16)
10104ea0:	31cdc83a 	sub	r6,r6,r7
10104ea4:	30c00317 	ldw	r3,12(r6)
10104ea8:	31400217 	ldw	r5,8(r6)
10104eac:	11c5883a 	add	r2,r2,r7
10104eb0:	28c00315 	stw	r3,12(r5)
10104eb4:	19400215 	stw	r5,8(r3)
10104eb8:	10c00054 	ori	r3,r2,1
10104ebc:	30c00115 	stw	r3,4(r6)
10104ec0:	00c40474 	movhi	r3,4113
10104ec4:	18c52404 	addi	r3,r3,5264
10104ec8:	18c00017 	ldw	r3,0(r3)
10104ecc:	21800215 	stw	r6,8(r4)
10104ed0:	10ffc036 	bltu	r2,r3,10104dd4 <__alt_data_end+0xfffe4dd4>
10104ed4:	00840474 	movhi	r2,4113
10104ed8:	108bf004 	addi	r2,r2,12224
10104edc:	11400017 	ldw	r5,0(r2)
10104ee0:	8809883a 	mov	r4,r17
10104ee4:	0104bc00 	call	10104bc0 <_malloc_trim_r>
10104ee8:	003fba06 	br	10104dd4 <__alt_data_end+0xfffe4dd4>
10104eec:	28c9883a 	add	r4,r5,r3
10104ef0:	21000117 	ldw	r4,4(r4)
10104ef4:	2100004c 	andi	r4,r4,1
10104ef8:	2000391e 	bne	r4,zero,10104fe0 <_free_r+0x2fc>
10104efc:	29c00217 	ldw	r7,8(r5)
10104f00:	29000317 	ldw	r4,12(r5)
10104f04:	1885883a 	add	r2,r3,r2
10104f08:	10c00054 	ori	r3,r2,1
10104f0c:	39000315 	stw	r4,12(r7)
10104f10:	21c00215 	stw	r7,8(r4)
10104f14:	30c00115 	stw	r3,4(r6)
10104f18:	308d883a 	add	r6,r6,r2
10104f1c:	30800015 	stw	r2,0(r6)
10104f20:	003fac06 	br	10104dd4 <__alt_data_end+0xfffe4dd4>
10104f24:	00c00504 	movi	r3,20
10104f28:	19401536 	bltu	r3,r5,10104f80 <_free_r+0x29c>
10104f2c:	28c01704 	addi	r3,r5,92
10104f30:	18c7883a 	add	r3,r3,r3
10104f34:	294016c4 	addi	r5,r5,91
10104f38:	003fb406 	br	10104e0c <__alt_data_end+0xfffe4e0c>
10104f3c:	280bd0ba 	srai	r5,r5,2
10104f40:	00c00044 	movi	r3,1
10104f44:	38800117 	ldw	r2,4(r7)
10104f48:	194a983a 	sll	r5,r3,r5
10104f4c:	2007883a 	mov	r3,r4
10104f50:	2884b03a 	or	r2,r5,r2
10104f54:	38800115 	stw	r2,4(r7)
10104f58:	003fbb06 	br	10104e48 <__alt_data_end+0xfffe4e48>
10104f5c:	21800515 	stw	r6,20(r4)
10104f60:	21800415 	stw	r6,16(r4)
10104f64:	10c00054 	ori	r3,r2,1
10104f68:	31c00315 	stw	r7,12(r6)
10104f6c:	31c00215 	stw	r7,8(r6)
10104f70:	30c00115 	stw	r3,4(r6)
10104f74:	308d883a 	add	r6,r6,r2
10104f78:	30800015 	stw	r2,0(r6)
10104f7c:	003f9506 	br	10104dd4 <__alt_data_end+0xfffe4dd4>
10104f80:	00c01504 	movi	r3,84
10104f84:	19400536 	bltu	r3,r5,10104f9c <_free_r+0x2b8>
10104f88:	100ad33a 	srli	r5,r2,12
10104f8c:	28c01bc4 	addi	r3,r5,111
10104f90:	18c7883a 	add	r3,r3,r3
10104f94:	29401b84 	addi	r5,r5,110
10104f98:	003f9c06 	br	10104e0c <__alt_data_end+0xfffe4e0c>
10104f9c:	00c05504 	movi	r3,340
10104fa0:	19400536 	bltu	r3,r5,10104fb8 <_free_r+0x2d4>
10104fa4:	100ad3fa 	srli	r5,r2,15
10104fa8:	28c01e04 	addi	r3,r5,120
10104fac:	18c7883a 	add	r3,r3,r3
10104fb0:	29401dc4 	addi	r5,r5,119
10104fb4:	003f9506 	br	10104e0c <__alt_data_end+0xfffe4e0c>
10104fb8:	00c15504 	movi	r3,1364
10104fbc:	19400536 	bltu	r3,r5,10104fd4 <_free_r+0x2f0>
10104fc0:	100ad4ba 	srli	r5,r2,18
10104fc4:	28c01f44 	addi	r3,r5,125
10104fc8:	18c7883a 	add	r3,r3,r3
10104fcc:	29401f04 	addi	r5,r5,124
10104fd0:	003f8e06 	br	10104e0c <__alt_data_end+0xfffe4e0c>
10104fd4:	00c03f84 	movi	r3,254
10104fd8:	01401f84 	movi	r5,126
10104fdc:	003f8b06 	br	10104e0c <__alt_data_end+0xfffe4e0c>
10104fe0:	10c00054 	ori	r3,r2,1
10104fe4:	30c00115 	stw	r3,4(r6)
10104fe8:	308d883a 	add	r6,r6,r2
10104fec:	30800015 	stw	r2,0(r6)
10104ff0:	003f7806 	br	10104dd4 <__alt_data_end+0xfffe4dd4>

10104ff4 <__sfvwrite_r>:
10104ff4:	30800217 	ldw	r2,8(r6)
10104ff8:	10006726 	beq	r2,zero,10105198 <__sfvwrite_r+0x1a4>
10104ffc:	28c0030b 	ldhu	r3,12(r5)
10105000:	defff404 	addi	sp,sp,-48
10105004:	dd400715 	stw	r21,28(sp)
10105008:	dd000615 	stw	r20,24(sp)
1010500c:	dc000215 	stw	r16,8(sp)
10105010:	dfc00b15 	stw	ra,44(sp)
10105014:	df000a15 	stw	fp,40(sp)
10105018:	ddc00915 	stw	r23,36(sp)
1010501c:	dd800815 	stw	r22,32(sp)
10105020:	dcc00515 	stw	r19,20(sp)
10105024:	dc800415 	stw	r18,16(sp)
10105028:	dc400315 	stw	r17,12(sp)
1010502c:	1880020c 	andi	r2,r3,8
10105030:	2821883a 	mov	r16,r5
10105034:	202b883a 	mov	r21,r4
10105038:	3029883a 	mov	r20,r6
1010503c:	10002726 	beq	r2,zero,101050dc <__sfvwrite_r+0xe8>
10105040:	28800417 	ldw	r2,16(r5)
10105044:	10002526 	beq	r2,zero,101050dc <__sfvwrite_r+0xe8>
10105048:	1880008c 	andi	r2,r3,2
1010504c:	a4400017 	ldw	r17,0(r20)
10105050:	10002a26 	beq	r2,zero,101050fc <__sfvwrite_r+0x108>
10105054:	05a00034 	movhi	r22,32768
10105058:	0027883a 	mov	r19,zero
1010505c:	0025883a 	mov	r18,zero
10105060:	b5bf0004 	addi	r22,r22,-1024
10105064:	980d883a 	mov	r6,r19
10105068:	a809883a 	mov	r4,r21
1010506c:	90004626 	beq	r18,zero,10105188 <__sfvwrite_r+0x194>
10105070:	900f883a 	mov	r7,r18
10105074:	b480022e 	bgeu	r22,r18,10105080 <__sfvwrite_r+0x8c>
10105078:	01e00034 	movhi	r7,32768
1010507c:	39ff0004 	addi	r7,r7,-1024
10105080:	80800917 	ldw	r2,36(r16)
10105084:	81400717 	ldw	r5,28(r16)
10105088:	103ee83a 	callr	r2
1010508c:	0080570e 	bge	zero,r2,101051ec <__sfvwrite_r+0x1f8>
10105090:	a0c00217 	ldw	r3,8(r20)
10105094:	98a7883a 	add	r19,r19,r2
10105098:	90a5c83a 	sub	r18,r18,r2
1010509c:	1885c83a 	sub	r2,r3,r2
101050a0:	a0800215 	stw	r2,8(r20)
101050a4:	103fef1e 	bne	r2,zero,10105064 <__alt_data_end+0xfffe5064>
101050a8:	0005883a 	mov	r2,zero
101050ac:	dfc00b17 	ldw	ra,44(sp)
101050b0:	df000a17 	ldw	fp,40(sp)
101050b4:	ddc00917 	ldw	r23,36(sp)
101050b8:	dd800817 	ldw	r22,32(sp)
101050bc:	dd400717 	ldw	r21,28(sp)
101050c0:	dd000617 	ldw	r20,24(sp)
101050c4:	dcc00517 	ldw	r19,20(sp)
101050c8:	dc800417 	ldw	r18,16(sp)
101050cc:	dc400317 	ldw	r17,12(sp)
101050d0:	dc000217 	ldw	r16,8(sp)
101050d4:	dec00c04 	addi	sp,sp,48
101050d8:	f800283a 	ret
101050dc:	800b883a 	mov	r5,r16
101050e0:	a809883a 	mov	r4,r21
101050e4:	0102b9c0 	call	10102b9c <__swsetup_r>
101050e8:	1000eb1e 	bne	r2,zero,10105498 <__sfvwrite_r+0x4a4>
101050ec:	80c0030b 	ldhu	r3,12(r16)
101050f0:	a4400017 	ldw	r17,0(r20)
101050f4:	1880008c 	andi	r2,r3,2
101050f8:	103fd61e 	bne	r2,zero,10105054 <__alt_data_end+0xfffe5054>
101050fc:	1880004c 	andi	r2,r3,1
10105100:	10003f1e 	bne	r2,zero,10105200 <__sfvwrite_r+0x20c>
10105104:	0039883a 	mov	fp,zero
10105108:	0025883a 	mov	r18,zero
1010510c:	90001a26 	beq	r18,zero,10105178 <__sfvwrite_r+0x184>
10105110:	1880800c 	andi	r2,r3,512
10105114:	84c00217 	ldw	r19,8(r16)
10105118:	10002126 	beq	r2,zero,101051a0 <__sfvwrite_r+0x1ac>
1010511c:	982f883a 	mov	r23,r19
10105120:	94c09336 	bltu	r18,r19,10105370 <__sfvwrite_r+0x37c>
10105124:	1881200c 	andi	r2,r3,1152
10105128:	10009e1e 	bne	r2,zero,101053a4 <__sfvwrite_r+0x3b0>
1010512c:	81000017 	ldw	r4,0(r16)
10105130:	b80d883a 	mov	r6,r23
10105134:	e00b883a 	mov	r5,fp
10105138:	01063080 	call	10106308 <memmove>
1010513c:	80c00217 	ldw	r3,8(r16)
10105140:	81000017 	ldw	r4,0(r16)
10105144:	9005883a 	mov	r2,r18
10105148:	1ce7c83a 	sub	r19,r3,r19
1010514c:	25cf883a 	add	r7,r4,r23
10105150:	84c00215 	stw	r19,8(r16)
10105154:	81c00015 	stw	r7,0(r16)
10105158:	a0c00217 	ldw	r3,8(r20)
1010515c:	e0b9883a 	add	fp,fp,r2
10105160:	90a5c83a 	sub	r18,r18,r2
10105164:	18a7c83a 	sub	r19,r3,r2
10105168:	a4c00215 	stw	r19,8(r20)
1010516c:	983fce26 	beq	r19,zero,101050a8 <__alt_data_end+0xfffe50a8>
10105170:	80c0030b 	ldhu	r3,12(r16)
10105174:	903fe61e 	bne	r18,zero,10105110 <__alt_data_end+0xfffe5110>
10105178:	8f000017 	ldw	fp,0(r17)
1010517c:	8c800117 	ldw	r18,4(r17)
10105180:	8c400204 	addi	r17,r17,8
10105184:	003fe106 	br	1010510c <__alt_data_end+0xfffe510c>
10105188:	8cc00017 	ldw	r19,0(r17)
1010518c:	8c800117 	ldw	r18,4(r17)
10105190:	8c400204 	addi	r17,r17,8
10105194:	003fb306 	br	10105064 <__alt_data_end+0xfffe5064>
10105198:	0005883a 	mov	r2,zero
1010519c:	f800283a 	ret
101051a0:	81000017 	ldw	r4,0(r16)
101051a4:	80800417 	ldw	r2,16(r16)
101051a8:	11005736 	bltu	r2,r4,10105308 <__sfvwrite_r+0x314>
101051ac:	85c00517 	ldw	r23,20(r16)
101051b0:	95c05536 	bltu	r18,r23,10105308 <__sfvwrite_r+0x314>
101051b4:	00a00034 	movhi	r2,32768
101051b8:	10bfffc4 	addi	r2,r2,-1
101051bc:	9009883a 	mov	r4,r18
101051c0:	1480012e 	bgeu	r2,r18,101051c8 <__sfvwrite_r+0x1d4>
101051c4:	1009883a 	mov	r4,r2
101051c8:	b80b883a 	mov	r5,r23
101051cc:	010a7f80 	call	1010a7f8 <__divsi3>
101051d0:	15cf383a 	mul	r7,r2,r23
101051d4:	81400717 	ldw	r5,28(r16)
101051d8:	80800917 	ldw	r2,36(r16)
101051dc:	e00d883a 	mov	r6,fp
101051e0:	a809883a 	mov	r4,r21
101051e4:	103ee83a 	callr	r2
101051e8:	00bfdb16 	blt	zero,r2,10105158 <__alt_data_end+0xfffe5158>
101051ec:	8080030b 	ldhu	r2,12(r16)
101051f0:	10801014 	ori	r2,r2,64
101051f4:	8080030d 	sth	r2,12(r16)
101051f8:	00bfffc4 	movi	r2,-1
101051fc:	003fab06 	br	101050ac <__alt_data_end+0xfffe50ac>
10105200:	0027883a 	mov	r19,zero
10105204:	0011883a 	mov	r8,zero
10105208:	0039883a 	mov	fp,zero
1010520c:	0025883a 	mov	r18,zero
10105210:	90001f26 	beq	r18,zero,10105290 <__sfvwrite_r+0x29c>
10105214:	40005a26 	beq	r8,zero,10105380 <__sfvwrite_r+0x38c>
10105218:	982d883a 	mov	r22,r19
1010521c:	94c0012e 	bgeu	r18,r19,10105224 <__sfvwrite_r+0x230>
10105220:	902d883a 	mov	r22,r18
10105224:	81000017 	ldw	r4,0(r16)
10105228:	80800417 	ldw	r2,16(r16)
1010522c:	b02f883a 	mov	r23,r22
10105230:	81c00517 	ldw	r7,20(r16)
10105234:	1100032e 	bgeu	r2,r4,10105244 <__sfvwrite_r+0x250>
10105238:	80c00217 	ldw	r3,8(r16)
1010523c:	38c7883a 	add	r3,r7,r3
10105240:	1d801816 	blt	r3,r22,101052a4 <__sfvwrite_r+0x2b0>
10105244:	b1c03e16 	blt	r22,r7,10105340 <__sfvwrite_r+0x34c>
10105248:	80800917 	ldw	r2,36(r16)
1010524c:	81400717 	ldw	r5,28(r16)
10105250:	e00d883a 	mov	r6,fp
10105254:	da000115 	stw	r8,4(sp)
10105258:	a809883a 	mov	r4,r21
1010525c:	103ee83a 	callr	r2
10105260:	102f883a 	mov	r23,r2
10105264:	da000117 	ldw	r8,4(sp)
10105268:	00bfe00e 	bge	zero,r2,101051ec <__alt_data_end+0xfffe51ec>
1010526c:	9de7c83a 	sub	r19,r19,r23
10105270:	98001f26 	beq	r19,zero,101052f0 <__sfvwrite_r+0x2fc>
10105274:	a0800217 	ldw	r2,8(r20)
10105278:	e5f9883a 	add	fp,fp,r23
1010527c:	95e5c83a 	sub	r18,r18,r23
10105280:	15efc83a 	sub	r23,r2,r23
10105284:	a5c00215 	stw	r23,8(r20)
10105288:	b83f8726 	beq	r23,zero,101050a8 <__alt_data_end+0xfffe50a8>
1010528c:	903fe11e 	bne	r18,zero,10105214 <__alt_data_end+0xfffe5214>
10105290:	8f000017 	ldw	fp,0(r17)
10105294:	8c800117 	ldw	r18,4(r17)
10105298:	0011883a 	mov	r8,zero
1010529c:	8c400204 	addi	r17,r17,8
101052a0:	003fdb06 	br	10105210 <__alt_data_end+0xfffe5210>
101052a4:	180d883a 	mov	r6,r3
101052a8:	e00b883a 	mov	r5,fp
101052ac:	da000115 	stw	r8,4(sp)
101052b0:	d8c00015 	stw	r3,0(sp)
101052b4:	01063080 	call	10106308 <memmove>
101052b8:	d8c00017 	ldw	r3,0(sp)
101052bc:	80800017 	ldw	r2,0(r16)
101052c0:	800b883a 	mov	r5,r16
101052c4:	a809883a 	mov	r4,r21
101052c8:	10c5883a 	add	r2,r2,r3
101052cc:	80800015 	stw	r2,0(r16)
101052d0:	d8c00015 	stw	r3,0(sp)
101052d4:	01047940 	call	10104794 <_fflush_r>
101052d8:	d8c00017 	ldw	r3,0(sp)
101052dc:	da000117 	ldw	r8,4(sp)
101052e0:	103fc21e 	bne	r2,zero,101051ec <__alt_data_end+0xfffe51ec>
101052e4:	182f883a 	mov	r23,r3
101052e8:	9de7c83a 	sub	r19,r19,r23
101052ec:	983fe11e 	bne	r19,zero,10105274 <__alt_data_end+0xfffe5274>
101052f0:	800b883a 	mov	r5,r16
101052f4:	a809883a 	mov	r4,r21
101052f8:	01047940 	call	10104794 <_fflush_r>
101052fc:	103fbb1e 	bne	r2,zero,101051ec <__alt_data_end+0xfffe51ec>
10105300:	0011883a 	mov	r8,zero
10105304:	003fdb06 	br	10105274 <__alt_data_end+0xfffe5274>
10105308:	94c0012e 	bgeu	r18,r19,10105310 <__sfvwrite_r+0x31c>
1010530c:	9027883a 	mov	r19,r18
10105310:	980d883a 	mov	r6,r19
10105314:	e00b883a 	mov	r5,fp
10105318:	01063080 	call	10106308 <memmove>
1010531c:	80800217 	ldw	r2,8(r16)
10105320:	80c00017 	ldw	r3,0(r16)
10105324:	14c5c83a 	sub	r2,r2,r19
10105328:	1cc7883a 	add	r3,r3,r19
1010532c:	80800215 	stw	r2,8(r16)
10105330:	80c00015 	stw	r3,0(r16)
10105334:	10004326 	beq	r2,zero,10105444 <__sfvwrite_r+0x450>
10105338:	9805883a 	mov	r2,r19
1010533c:	003f8606 	br	10105158 <__alt_data_end+0xfffe5158>
10105340:	b00d883a 	mov	r6,r22
10105344:	e00b883a 	mov	r5,fp
10105348:	da000115 	stw	r8,4(sp)
1010534c:	01063080 	call	10106308 <memmove>
10105350:	80800217 	ldw	r2,8(r16)
10105354:	80c00017 	ldw	r3,0(r16)
10105358:	da000117 	ldw	r8,4(sp)
1010535c:	1585c83a 	sub	r2,r2,r22
10105360:	1dad883a 	add	r22,r3,r22
10105364:	80800215 	stw	r2,8(r16)
10105368:	85800015 	stw	r22,0(r16)
1010536c:	003fbf06 	br	1010526c <__alt_data_end+0xfffe526c>
10105370:	81000017 	ldw	r4,0(r16)
10105374:	9027883a 	mov	r19,r18
10105378:	902f883a 	mov	r23,r18
1010537c:	003f6c06 	br	10105130 <__alt_data_end+0xfffe5130>
10105380:	900d883a 	mov	r6,r18
10105384:	01400284 	movi	r5,10
10105388:	e009883a 	mov	r4,fp
1010538c:	01060dc0 	call	101060dc <memchr>
10105390:	10003e26 	beq	r2,zero,1010548c <__sfvwrite_r+0x498>
10105394:	10800044 	addi	r2,r2,1
10105398:	1727c83a 	sub	r19,r2,fp
1010539c:	02000044 	movi	r8,1
101053a0:	003f9d06 	br	10105218 <__alt_data_end+0xfffe5218>
101053a4:	80800517 	ldw	r2,20(r16)
101053a8:	81400417 	ldw	r5,16(r16)
101053ac:	81c00017 	ldw	r7,0(r16)
101053b0:	10a7883a 	add	r19,r2,r2
101053b4:	9885883a 	add	r2,r19,r2
101053b8:	1026d7fa 	srli	r19,r2,31
101053bc:	396dc83a 	sub	r22,r7,r5
101053c0:	b1000044 	addi	r4,r22,1
101053c4:	9885883a 	add	r2,r19,r2
101053c8:	1027d07a 	srai	r19,r2,1
101053cc:	2485883a 	add	r2,r4,r18
101053d0:	980d883a 	mov	r6,r19
101053d4:	9880022e 	bgeu	r19,r2,101053e0 <__sfvwrite_r+0x3ec>
101053d8:	1027883a 	mov	r19,r2
101053dc:	100d883a 	mov	r6,r2
101053e0:	18c1000c 	andi	r3,r3,1024
101053e4:	18001c26 	beq	r3,zero,10105458 <__sfvwrite_r+0x464>
101053e8:	300b883a 	mov	r5,r6
101053ec:	a809883a 	mov	r4,r21
101053f0:	01058d00 	call	101058d0 <_malloc_r>
101053f4:	102f883a 	mov	r23,r2
101053f8:	10002926 	beq	r2,zero,101054a0 <__sfvwrite_r+0x4ac>
101053fc:	81400417 	ldw	r5,16(r16)
10105400:	b00d883a 	mov	r6,r22
10105404:	1009883a 	mov	r4,r2
10105408:	01061c00 	call	101061c0 <memcpy>
1010540c:	8080030b 	ldhu	r2,12(r16)
10105410:	00fedfc4 	movi	r3,-1153
10105414:	10c4703a 	and	r2,r2,r3
10105418:	10802014 	ori	r2,r2,128
1010541c:	8080030d 	sth	r2,12(r16)
10105420:	bd89883a 	add	r4,r23,r22
10105424:	9d8fc83a 	sub	r7,r19,r22
10105428:	85c00415 	stw	r23,16(r16)
1010542c:	84c00515 	stw	r19,20(r16)
10105430:	81000015 	stw	r4,0(r16)
10105434:	9027883a 	mov	r19,r18
10105438:	81c00215 	stw	r7,8(r16)
1010543c:	902f883a 	mov	r23,r18
10105440:	003f3b06 	br	10105130 <__alt_data_end+0xfffe5130>
10105444:	800b883a 	mov	r5,r16
10105448:	a809883a 	mov	r4,r21
1010544c:	01047940 	call	10104794 <_fflush_r>
10105450:	103fb926 	beq	r2,zero,10105338 <__alt_data_end+0xfffe5338>
10105454:	003f6506 	br	101051ec <__alt_data_end+0xfffe51ec>
10105458:	a809883a 	mov	r4,r21
1010545c:	01075880 	call	10107588 <_realloc_r>
10105460:	102f883a 	mov	r23,r2
10105464:	103fee1e 	bne	r2,zero,10105420 <__alt_data_end+0xfffe5420>
10105468:	81400417 	ldw	r5,16(r16)
1010546c:	a809883a 	mov	r4,r21
10105470:	0104ce40 	call	10104ce4 <_free_r>
10105474:	8080030b 	ldhu	r2,12(r16)
10105478:	00ffdfc4 	movi	r3,-129
1010547c:	1884703a 	and	r2,r3,r2
10105480:	00c00304 	movi	r3,12
10105484:	a8c00015 	stw	r3,0(r21)
10105488:	003f5906 	br	101051f0 <__alt_data_end+0xfffe51f0>
1010548c:	94c00044 	addi	r19,r18,1
10105490:	02000044 	movi	r8,1
10105494:	003f6006 	br	10105218 <__alt_data_end+0xfffe5218>
10105498:	00bfffc4 	movi	r2,-1
1010549c:	003f0306 	br	101050ac <__alt_data_end+0xfffe50ac>
101054a0:	00800304 	movi	r2,12
101054a4:	a8800015 	stw	r2,0(r21)
101054a8:	8080030b 	ldhu	r2,12(r16)
101054ac:	003f5006 	br	101051f0 <__alt_data_end+0xfffe51f0>

101054b0 <_fwalk>:
101054b0:	defff704 	addi	sp,sp,-36
101054b4:	dd000415 	stw	r20,16(sp)
101054b8:	dfc00815 	stw	ra,32(sp)
101054bc:	ddc00715 	stw	r23,28(sp)
101054c0:	dd800615 	stw	r22,24(sp)
101054c4:	dd400515 	stw	r21,20(sp)
101054c8:	dcc00315 	stw	r19,12(sp)
101054cc:	dc800215 	stw	r18,8(sp)
101054d0:	dc400115 	stw	r17,4(sp)
101054d4:	dc000015 	stw	r16,0(sp)
101054d8:	2500b804 	addi	r20,r4,736
101054dc:	a0002326 	beq	r20,zero,1010556c <_fwalk+0xbc>
101054e0:	282b883a 	mov	r21,r5
101054e4:	002f883a 	mov	r23,zero
101054e8:	05800044 	movi	r22,1
101054ec:	04ffffc4 	movi	r19,-1
101054f0:	a4400117 	ldw	r17,4(r20)
101054f4:	a4800217 	ldw	r18,8(r20)
101054f8:	8c7fffc4 	addi	r17,r17,-1
101054fc:	88000d16 	blt	r17,zero,10105534 <_fwalk+0x84>
10105500:	94000304 	addi	r16,r18,12
10105504:	94800384 	addi	r18,r18,14
10105508:	8080000b 	ldhu	r2,0(r16)
1010550c:	8c7fffc4 	addi	r17,r17,-1
10105510:	813ffd04 	addi	r4,r16,-12
10105514:	b080042e 	bgeu	r22,r2,10105528 <_fwalk+0x78>
10105518:	9080000f 	ldh	r2,0(r18)
1010551c:	14c00226 	beq	r2,r19,10105528 <_fwalk+0x78>
10105520:	a83ee83a 	callr	r21
10105524:	b8aeb03a 	or	r23,r23,r2
10105528:	84001a04 	addi	r16,r16,104
1010552c:	94801a04 	addi	r18,r18,104
10105530:	8cfff51e 	bne	r17,r19,10105508 <__alt_data_end+0xfffe5508>
10105534:	a5000017 	ldw	r20,0(r20)
10105538:	a03fed1e 	bne	r20,zero,101054f0 <__alt_data_end+0xfffe54f0>
1010553c:	b805883a 	mov	r2,r23
10105540:	dfc00817 	ldw	ra,32(sp)
10105544:	ddc00717 	ldw	r23,28(sp)
10105548:	dd800617 	ldw	r22,24(sp)
1010554c:	dd400517 	ldw	r21,20(sp)
10105550:	dd000417 	ldw	r20,16(sp)
10105554:	dcc00317 	ldw	r19,12(sp)
10105558:	dc800217 	ldw	r18,8(sp)
1010555c:	dc400117 	ldw	r17,4(sp)
10105560:	dc000017 	ldw	r16,0(sp)
10105564:	dec00904 	addi	sp,sp,36
10105568:	f800283a 	ret
1010556c:	002f883a 	mov	r23,zero
10105570:	003ff206 	br	1010553c <__alt_data_end+0xfffe553c>

10105574 <_fwalk_reent>:
10105574:	defff704 	addi	sp,sp,-36
10105578:	dd000415 	stw	r20,16(sp)
1010557c:	dfc00815 	stw	ra,32(sp)
10105580:	ddc00715 	stw	r23,28(sp)
10105584:	dd800615 	stw	r22,24(sp)
10105588:	dd400515 	stw	r21,20(sp)
1010558c:	dcc00315 	stw	r19,12(sp)
10105590:	dc800215 	stw	r18,8(sp)
10105594:	dc400115 	stw	r17,4(sp)
10105598:	dc000015 	stw	r16,0(sp)
1010559c:	2500b804 	addi	r20,r4,736
101055a0:	a0002326 	beq	r20,zero,10105630 <_fwalk_reent+0xbc>
101055a4:	282b883a 	mov	r21,r5
101055a8:	2027883a 	mov	r19,r4
101055ac:	002f883a 	mov	r23,zero
101055b0:	05800044 	movi	r22,1
101055b4:	04bfffc4 	movi	r18,-1
101055b8:	a4400117 	ldw	r17,4(r20)
101055bc:	a4000217 	ldw	r16,8(r20)
101055c0:	8c7fffc4 	addi	r17,r17,-1
101055c4:	88000c16 	blt	r17,zero,101055f8 <_fwalk_reent+0x84>
101055c8:	84000304 	addi	r16,r16,12
101055cc:	8080000b 	ldhu	r2,0(r16)
101055d0:	8c7fffc4 	addi	r17,r17,-1
101055d4:	817ffd04 	addi	r5,r16,-12
101055d8:	b080052e 	bgeu	r22,r2,101055f0 <_fwalk_reent+0x7c>
101055dc:	8080008f 	ldh	r2,2(r16)
101055e0:	9809883a 	mov	r4,r19
101055e4:	14800226 	beq	r2,r18,101055f0 <_fwalk_reent+0x7c>
101055e8:	a83ee83a 	callr	r21
101055ec:	b8aeb03a 	or	r23,r23,r2
101055f0:	84001a04 	addi	r16,r16,104
101055f4:	8cbff51e 	bne	r17,r18,101055cc <__alt_data_end+0xfffe55cc>
101055f8:	a5000017 	ldw	r20,0(r20)
101055fc:	a03fee1e 	bne	r20,zero,101055b8 <__alt_data_end+0xfffe55b8>
10105600:	b805883a 	mov	r2,r23
10105604:	dfc00817 	ldw	ra,32(sp)
10105608:	ddc00717 	ldw	r23,28(sp)
1010560c:	dd800617 	ldw	r22,24(sp)
10105610:	dd400517 	ldw	r21,20(sp)
10105614:	dd000417 	ldw	r20,16(sp)
10105618:	dcc00317 	ldw	r19,12(sp)
1010561c:	dc800217 	ldw	r18,8(sp)
10105620:	dc400117 	ldw	r17,4(sp)
10105624:	dc000017 	ldw	r16,0(sp)
10105628:	dec00904 	addi	sp,sp,36
1010562c:	f800283a 	ret
10105630:	002f883a 	mov	r23,zero
10105634:	003ff206 	br	10105600 <__alt_data_end+0xfffe5600>

10105638 <_setlocale_r>:
10105638:	30001b26 	beq	r6,zero,101056a8 <_setlocale_r+0x70>
1010563c:	01440474 	movhi	r5,4113
10105640:	defffe04 	addi	sp,sp,-8
10105644:	297dd404 	addi	r5,r5,-2224
10105648:	3009883a 	mov	r4,r6
1010564c:	dc000015 	stw	r16,0(sp)
10105650:	dfc00115 	stw	ra,4(sp)
10105654:	3021883a 	mov	r16,r6
10105658:	0107cf00 	call	10107cf0 <strcmp>
1010565c:	1000061e 	bne	r2,zero,10105678 <_setlocale_r+0x40>
10105660:	00840474 	movhi	r2,4113
10105664:	10bdd304 	addi	r2,r2,-2228
10105668:	dfc00117 	ldw	ra,4(sp)
1010566c:	dc000017 	ldw	r16,0(sp)
10105670:	dec00204 	addi	sp,sp,8
10105674:	f800283a 	ret
10105678:	01440474 	movhi	r5,4113
1010567c:	297dd304 	addi	r5,r5,-2228
10105680:	8009883a 	mov	r4,r16
10105684:	0107cf00 	call	10107cf0 <strcmp>
10105688:	103ff526 	beq	r2,zero,10105660 <__alt_data_end+0xfffe5660>
1010568c:	01440474 	movhi	r5,4113
10105690:	297dbe04 	addi	r5,r5,-2312
10105694:	8009883a 	mov	r4,r16
10105698:	0107cf00 	call	10107cf0 <strcmp>
1010569c:	103ff026 	beq	r2,zero,10105660 <__alt_data_end+0xfffe5660>
101056a0:	0005883a 	mov	r2,zero
101056a4:	003ff006 	br	10105668 <__alt_data_end+0xfffe5668>
101056a8:	00840474 	movhi	r2,4113
101056ac:	10bdd304 	addi	r2,r2,-2228
101056b0:	f800283a 	ret

101056b4 <__locale_charset>:
101056b4:	00840474 	movhi	r2,4113
101056b8:	10bf8604 	addi	r2,r2,-488
101056bc:	f800283a 	ret

101056c0 <__locale_mb_cur_max>:
101056c0:	00840474 	movhi	r2,4113
101056c4:	10852204 	addi	r2,r2,5256
101056c8:	10800017 	ldw	r2,0(r2)
101056cc:	f800283a 	ret

101056d0 <__locale_msgcharset>:
101056d0:	00840474 	movhi	r2,4113
101056d4:	10bf7e04 	addi	r2,r2,-520
101056d8:	f800283a 	ret

101056dc <__locale_cjk_lang>:
101056dc:	0005883a 	mov	r2,zero
101056e0:	f800283a 	ret

101056e4 <_localeconv_r>:
101056e4:	00840474 	movhi	r2,4113
101056e8:	10bf8e04 	addi	r2,r2,-456
101056ec:	f800283a 	ret

101056f0 <setlocale>:
101056f0:	00840474 	movhi	r2,4113
101056f4:	10852104 	addi	r2,r2,5252
101056f8:	280d883a 	mov	r6,r5
101056fc:	200b883a 	mov	r5,r4
10105700:	11000017 	ldw	r4,0(r2)
10105704:	01056381 	jmpi	10105638 <_setlocale_r>

10105708 <localeconv>:
10105708:	00840474 	movhi	r2,4113
1010570c:	10bf8e04 	addi	r2,r2,-456
10105710:	f800283a 	ret

10105714 <__smakebuf_r>:
10105714:	2880030b 	ldhu	r2,12(r5)
10105718:	10c0008c 	andi	r3,r2,2
1010571c:	1800411e 	bne	r3,zero,10105824 <__smakebuf_r+0x110>
10105720:	deffec04 	addi	sp,sp,-80
10105724:	dc000f15 	stw	r16,60(sp)
10105728:	2821883a 	mov	r16,r5
1010572c:	2940038f 	ldh	r5,14(r5)
10105730:	dc401015 	stw	r17,64(sp)
10105734:	dfc01315 	stw	ra,76(sp)
10105738:	dcc01215 	stw	r19,72(sp)
1010573c:	dc801115 	stw	r18,68(sp)
10105740:	2023883a 	mov	r17,r4
10105744:	28001c16 	blt	r5,zero,101057b8 <__smakebuf_r+0xa4>
10105748:	d80d883a 	mov	r6,sp
1010574c:	01098980 	call	10109898 <_fstat_r>
10105750:	10001816 	blt	r2,zero,101057b4 <__smakebuf_r+0xa0>
10105754:	d8800117 	ldw	r2,4(sp)
10105758:	00e00014 	movui	r3,32768
1010575c:	10bc000c 	andi	r2,r2,61440
10105760:	14c80020 	cmpeqi	r19,r2,8192
10105764:	10c03726 	beq	r2,r3,10105844 <__smakebuf_r+0x130>
10105768:	80c0030b 	ldhu	r3,12(r16)
1010576c:	18c20014 	ori	r3,r3,2048
10105770:	80c0030d 	sth	r3,12(r16)
10105774:	00c80004 	movi	r3,8192
10105778:	10c0521e 	bne	r2,r3,101058c4 <__smakebuf_r+0x1b0>
1010577c:	8140038f 	ldh	r5,14(r16)
10105780:	8809883a 	mov	r4,r17
10105784:	01098f40 	call	101098f4 <_isatty_r>
10105788:	10004c26 	beq	r2,zero,101058bc <__smakebuf_r+0x1a8>
1010578c:	8080030b 	ldhu	r2,12(r16)
10105790:	80c010c4 	addi	r3,r16,67
10105794:	80c00015 	stw	r3,0(r16)
10105798:	10800054 	ori	r2,r2,1
1010579c:	8080030d 	sth	r2,12(r16)
101057a0:	00800044 	movi	r2,1
101057a4:	80c00415 	stw	r3,16(r16)
101057a8:	80800515 	stw	r2,20(r16)
101057ac:	04810004 	movi	r18,1024
101057b0:	00000706 	br	101057d0 <__smakebuf_r+0xbc>
101057b4:	8080030b 	ldhu	r2,12(r16)
101057b8:	10c0200c 	andi	r3,r2,128
101057bc:	18001f1e 	bne	r3,zero,1010583c <__smakebuf_r+0x128>
101057c0:	04810004 	movi	r18,1024
101057c4:	10820014 	ori	r2,r2,2048
101057c8:	8080030d 	sth	r2,12(r16)
101057cc:	0027883a 	mov	r19,zero
101057d0:	900b883a 	mov	r5,r18
101057d4:	8809883a 	mov	r4,r17
101057d8:	01058d00 	call	101058d0 <_malloc_r>
101057dc:	10002c26 	beq	r2,zero,10105890 <__smakebuf_r+0x17c>
101057e0:	80c0030b 	ldhu	r3,12(r16)
101057e4:	01040434 	movhi	r4,4112
101057e8:	21120a04 	addi	r4,r4,18472
101057ec:	89000f15 	stw	r4,60(r17)
101057f0:	18c02014 	ori	r3,r3,128
101057f4:	80c0030d 	sth	r3,12(r16)
101057f8:	80800015 	stw	r2,0(r16)
101057fc:	80800415 	stw	r2,16(r16)
10105800:	84800515 	stw	r18,20(r16)
10105804:	98001a1e 	bne	r19,zero,10105870 <__smakebuf_r+0x15c>
10105808:	dfc01317 	ldw	ra,76(sp)
1010580c:	dcc01217 	ldw	r19,72(sp)
10105810:	dc801117 	ldw	r18,68(sp)
10105814:	dc401017 	ldw	r17,64(sp)
10105818:	dc000f17 	ldw	r16,60(sp)
1010581c:	dec01404 	addi	sp,sp,80
10105820:	f800283a 	ret
10105824:	288010c4 	addi	r2,r5,67
10105828:	28800015 	stw	r2,0(r5)
1010582c:	28800415 	stw	r2,16(r5)
10105830:	00800044 	movi	r2,1
10105834:	28800515 	stw	r2,20(r5)
10105838:	f800283a 	ret
1010583c:	04801004 	movi	r18,64
10105840:	003fe006 	br	101057c4 <__alt_data_end+0xfffe57c4>
10105844:	81000a17 	ldw	r4,40(r16)
10105848:	00c40434 	movhi	r3,4112
1010584c:	18df2304 	addi	r3,r3,31884
10105850:	20ffc51e 	bne	r4,r3,10105768 <__alt_data_end+0xfffe5768>
10105854:	8080030b 	ldhu	r2,12(r16)
10105858:	04810004 	movi	r18,1024
1010585c:	84801315 	stw	r18,76(r16)
10105860:	1484b03a 	or	r2,r2,r18
10105864:	8080030d 	sth	r2,12(r16)
10105868:	0027883a 	mov	r19,zero
1010586c:	003fd806 	br	101057d0 <__alt_data_end+0xfffe57d0>
10105870:	8140038f 	ldh	r5,14(r16)
10105874:	8809883a 	mov	r4,r17
10105878:	01098f40 	call	101098f4 <_isatty_r>
1010587c:	103fe226 	beq	r2,zero,10105808 <__alt_data_end+0xfffe5808>
10105880:	8080030b 	ldhu	r2,12(r16)
10105884:	10800054 	ori	r2,r2,1
10105888:	8080030d 	sth	r2,12(r16)
1010588c:	003fde06 	br	10105808 <__alt_data_end+0xfffe5808>
10105890:	8080030b 	ldhu	r2,12(r16)
10105894:	10c0800c 	andi	r3,r2,512
10105898:	183fdb1e 	bne	r3,zero,10105808 <__alt_data_end+0xfffe5808>
1010589c:	10800094 	ori	r2,r2,2
101058a0:	80c010c4 	addi	r3,r16,67
101058a4:	8080030d 	sth	r2,12(r16)
101058a8:	00800044 	movi	r2,1
101058ac:	80c00015 	stw	r3,0(r16)
101058b0:	80c00415 	stw	r3,16(r16)
101058b4:	80800515 	stw	r2,20(r16)
101058b8:	003fd306 	br	10105808 <__alt_data_end+0xfffe5808>
101058bc:	04810004 	movi	r18,1024
101058c0:	003fc306 	br	101057d0 <__alt_data_end+0xfffe57d0>
101058c4:	0027883a 	mov	r19,zero
101058c8:	04810004 	movi	r18,1024
101058cc:	003fc006 	br	101057d0 <__alt_data_end+0xfffe57d0>

101058d0 <_malloc_r>:
101058d0:	defff504 	addi	sp,sp,-44
101058d4:	dc800315 	stw	r18,12(sp)
101058d8:	dfc00a15 	stw	ra,40(sp)
101058dc:	df000915 	stw	fp,36(sp)
101058e0:	ddc00815 	stw	r23,32(sp)
101058e4:	dd800715 	stw	r22,28(sp)
101058e8:	dd400615 	stw	r21,24(sp)
101058ec:	dd000515 	stw	r20,20(sp)
101058f0:	dcc00415 	stw	r19,16(sp)
101058f4:	dc400215 	stw	r17,8(sp)
101058f8:	dc000115 	stw	r16,4(sp)
101058fc:	288002c4 	addi	r2,r5,11
10105900:	00c00584 	movi	r3,22
10105904:	2025883a 	mov	r18,r4
10105908:	18807f2e 	bgeu	r3,r2,10105b08 <_malloc_r+0x238>
1010590c:	047ffe04 	movi	r17,-8
10105910:	1462703a 	and	r17,r2,r17
10105914:	8800a316 	blt	r17,zero,10105ba4 <_malloc_r+0x2d4>
10105918:	8940a236 	bltu	r17,r5,10105ba4 <_malloc_r+0x2d4>
1010591c:	010d5900 	call	1010d590 <__malloc_lock>
10105920:	00807dc4 	movi	r2,503
10105924:	1441e92e 	bgeu	r2,r17,101060cc <_malloc_r+0x7fc>
10105928:	8804d27a 	srli	r2,r17,9
1010592c:	1000a126 	beq	r2,zero,10105bb4 <_malloc_r+0x2e4>
10105930:	00c00104 	movi	r3,4
10105934:	18811e36 	bltu	r3,r2,10105db0 <_malloc_r+0x4e0>
10105938:	8804d1ba 	srli	r2,r17,6
1010593c:	12000e44 	addi	r8,r2,57
10105940:	11c00e04 	addi	r7,r2,56
10105944:	4209883a 	add	r4,r8,r8
10105948:	04c40474 	movhi	r19,4113
1010594c:	2109883a 	add	r4,r4,r4
10105950:	9cff9c04 	addi	r19,r19,-400
10105954:	2109883a 	add	r4,r4,r4
10105958:	9909883a 	add	r4,r19,r4
1010595c:	24000117 	ldw	r16,4(r4)
10105960:	213ffe04 	addi	r4,r4,-8
10105964:	24009726 	beq	r4,r16,10105bc4 <_malloc_r+0x2f4>
10105968:	80800117 	ldw	r2,4(r16)
1010596c:	01bfff04 	movi	r6,-4
10105970:	014003c4 	movi	r5,15
10105974:	1184703a 	and	r2,r2,r6
10105978:	1447c83a 	sub	r3,r2,r17
1010597c:	28c00716 	blt	r5,r3,1010599c <_malloc_r+0xcc>
10105980:	1800920e 	bge	r3,zero,10105bcc <_malloc_r+0x2fc>
10105984:	84000317 	ldw	r16,12(r16)
10105988:	24008e26 	beq	r4,r16,10105bc4 <_malloc_r+0x2f4>
1010598c:	80800117 	ldw	r2,4(r16)
10105990:	1184703a 	and	r2,r2,r6
10105994:	1447c83a 	sub	r3,r2,r17
10105998:	28fff90e 	bge	r5,r3,10105980 <__alt_data_end+0xfffe5980>
1010599c:	3809883a 	mov	r4,r7
101059a0:	01840474 	movhi	r6,4113
101059a4:	9c000417 	ldw	r16,16(r19)
101059a8:	31bf9c04 	addi	r6,r6,-400
101059ac:	32000204 	addi	r8,r6,8
101059b0:	82013426 	beq	r16,r8,10105e84 <_malloc_r+0x5b4>
101059b4:	80c00117 	ldw	r3,4(r16)
101059b8:	00bfff04 	movi	r2,-4
101059bc:	188e703a 	and	r7,r3,r2
101059c0:	3c45c83a 	sub	r2,r7,r17
101059c4:	00c003c4 	movi	r3,15
101059c8:	18811f16 	blt	r3,r2,10105e48 <_malloc_r+0x578>
101059cc:	32000515 	stw	r8,20(r6)
101059d0:	32000415 	stw	r8,16(r6)
101059d4:	10007f0e 	bge	r2,zero,10105bd4 <_malloc_r+0x304>
101059d8:	00807fc4 	movi	r2,511
101059dc:	11c0fd36 	bltu	r2,r7,10105dd4 <_malloc_r+0x504>
101059e0:	3806d0fa 	srli	r3,r7,3
101059e4:	01c00044 	movi	r7,1
101059e8:	30800117 	ldw	r2,4(r6)
101059ec:	19400044 	addi	r5,r3,1
101059f0:	294b883a 	add	r5,r5,r5
101059f4:	1807d0ba 	srai	r3,r3,2
101059f8:	294b883a 	add	r5,r5,r5
101059fc:	294b883a 	add	r5,r5,r5
10105a00:	298b883a 	add	r5,r5,r6
10105a04:	38c6983a 	sll	r3,r7,r3
10105a08:	29c00017 	ldw	r7,0(r5)
10105a0c:	2a7ffe04 	addi	r9,r5,-8
10105a10:	1886b03a 	or	r3,r3,r2
10105a14:	82400315 	stw	r9,12(r16)
10105a18:	81c00215 	stw	r7,8(r16)
10105a1c:	30c00115 	stw	r3,4(r6)
10105a20:	2c000015 	stw	r16,0(r5)
10105a24:	3c000315 	stw	r16,12(r7)
10105a28:	2005d0ba 	srai	r2,r4,2
10105a2c:	01400044 	movi	r5,1
10105a30:	288a983a 	sll	r5,r5,r2
10105a34:	19406f36 	bltu	r3,r5,10105bf4 <_malloc_r+0x324>
10105a38:	28c4703a 	and	r2,r5,r3
10105a3c:	10000a1e 	bne	r2,zero,10105a68 <_malloc_r+0x198>
10105a40:	00bfff04 	movi	r2,-4
10105a44:	294b883a 	add	r5,r5,r5
10105a48:	2088703a 	and	r4,r4,r2
10105a4c:	28c4703a 	and	r2,r5,r3
10105a50:	21000104 	addi	r4,r4,4
10105a54:	1000041e 	bne	r2,zero,10105a68 <_malloc_r+0x198>
10105a58:	294b883a 	add	r5,r5,r5
10105a5c:	28c4703a 	and	r2,r5,r3
10105a60:	21000104 	addi	r4,r4,4
10105a64:	103ffc26 	beq	r2,zero,10105a58 <__alt_data_end+0xfffe5a58>
10105a68:	02bfff04 	movi	r10,-4
10105a6c:	024003c4 	movi	r9,15
10105a70:	21800044 	addi	r6,r4,1
10105a74:	318d883a 	add	r6,r6,r6
10105a78:	318d883a 	add	r6,r6,r6
10105a7c:	318d883a 	add	r6,r6,r6
10105a80:	998d883a 	add	r6,r19,r6
10105a84:	333ffe04 	addi	r12,r6,-8
10105a88:	2017883a 	mov	r11,r4
10105a8c:	31800104 	addi	r6,r6,4
10105a90:	34000017 	ldw	r16,0(r6)
10105a94:	31fffd04 	addi	r7,r6,-12
10105a98:	81c0041e 	bne	r16,r7,10105aac <_malloc_r+0x1dc>
10105a9c:	0000fb06 	br	10105e8c <_malloc_r+0x5bc>
10105aa0:	1801030e 	bge	r3,zero,10105eb0 <_malloc_r+0x5e0>
10105aa4:	84000317 	ldw	r16,12(r16)
10105aa8:	81c0f826 	beq	r16,r7,10105e8c <_malloc_r+0x5bc>
10105aac:	80800117 	ldw	r2,4(r16)
10105ab0:	1284703a 	and	r2,r2,r10
10105ab4:	1447c83a 	sub	r3,r2,r17
10105ab8:	48fff90e 	bge	r9,r3,10105aa0 <__alt_data_end+0xfffe5aa0>
10105abc:	80800317 	ldw	r2,12(r16)
10105ac0:	81000217 	ldw	r4,8(r16)
10105ac4:	89400054 	ori	r5,r17,1
10105ac8:	81400115 	stw	r5,4(r16)
10105acc:	20800315 	stw	r2,12(r4)
10105ad0:	11000215 	stw	r4,8(r2)
10105ad4:	8463883a 	add	r17,r16,r17
10105ad8:	9c400515 	stw	r17,20(r19)
10105adc:	9c400415 	stw	r17,16(r19)
10105ae0:	18800054 	ori	r2,r3,1
10105ae4:	88800115 	stw	r2,4(r17)
10105ae8:	8a000315 	stw	r8,12(r17)
10105aec:	8a000215 	stw	r8,8(r17)
10105af0:	88e3883a 	add	r17,r17,r3
10105af4:	88c00015 	stw	r3,0(r17)
10105af8:	9009883a 	mov	r4,r18
10105afc:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10105b00:	80800204 	addi	r2,r16,8
10105b04:	00001b06 	br	10105b74 <_malloc_r+0x2a4>
10105b08:	04400404 	movi	r17,16
10105b0c:	89402536 	bltu	r17,r5,10105ba4 <_malloc_r+0x2d4>
10105b10:	010d5900 	call	1010d590 <__malloc_lock>
10105b14:	00800184 	movi	r2,6
10105b18:	01000084 	movi	r4,2
10105b1c:	04c40474 	movhi	r19,4113
10105b20:	1085883a 	add	r2,r2,r2
10105b24:	9cff9c04 	addi	r19,r19,-400
10105b28:	1085883a 	add	r2,r2,r2
10105b2c:	9885883a 	add	r2,r19,r2
10105b30:	14000117 	ldw	r16,4(r2)
10105b34:	10fffe04 	addi	r3,r2,-8
10105b38:	80c0d926 	beq	r16,r3,10105ea0 <_malloc_r+0x5d0>
10105b3c:	80c00117 	ldw	r3,4(r16)
10105b40:	81000317 	ldw	r4,12(r16)
10105b44:	00bfff04 	movi	r2,-4
10105b48:	1884703a 	and	r2,r3,r2
10105b4c:	81400217 	ldw	r5,8(r16)
10105b50:	8085883a 	add	r2,r16,r2
10105b54:	10c00117 	ldw	r3,4(r2)
10105b58:	29000315 	stw	r4,12(r5)
10105b5c:	21400215 	stw	r5,8(r4)
10105b60:	18c00054 	ori	r3,r3,1
10105b64:	10c00115 	stw	r3,4(r2)
10105b68:	9009883a 	mov	r4,r18
10105b6c:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10105b70:	80800204 	addi	r2,r16,8
10105b74:	dfc00a17 	ldw	ra,40(sp)
10105b78:	df000917 	ldw	fp,36(sp)
10105b7c:	ddc00817 	ldw	r23,32(sp)
10105b80:	dd800717 	ldw	r22,28(sp)
10105b84:	dd400617 	ldw	r21,24(sp)
10105b88:	dd000517 	ldw	r20,20(sp)
10105b8c:	dcc00417 	ldw	r19,16(sp)
10105b90:	dc800317 	ldw	r18,12(sp)
10105b94:	dc400217 	ldw	r17,8(sp)
10105b98:	dc000117 	ldw	r16,4(sp)
10105b9c:	dec00b04 	addi	sp,sp,44
10105ba0:	f800283a 	ret
10105ba4:	00800304 	movi	r2,12
10105ba8:	90800015 	stw	r2,0(r18)
10105bac:	0005883a 	mov	r2,zero
10105bb0:	003ff006 	br	10105b74 <__alt_data_end+0xfffe5b74>
10105bb4:	01002004 	movi	r4,128
10105bb8:	02001004 	movi	r8,64
10105bbc:	01c00fc4 	movi	r7,63
10105bc0:	003f6106 	br	10105948 <__alt_data_end+0xfffe5948>
10105bc4:	4009883a 	mov	r4,r8
10105bc8:	003f7506 	br	101059a0 <__alt_data_end+0xfffe59a0>
10105bcc:	81000317 	ldw	r4,12(r16)
10105bd0:	003fde06 	br	10105b4c <__alt_data_end+0xfffe5b4c>
10105bd4:	81c5883a 	add	r2,r16,r7
10105bd8:	11400117 	ldw	r5,4(r2)
10105bdc:	9009883a 	mov	r4,r18
10105be0:	29400054 	ori	r5,r5,1
10105be4:	11400115 	stw	r5,4(r2)
10105be8:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10105bec:	80800204 	addi	r2,r16,8
10105bf0:	003fe006 	br	10105b74 <__alt_data_end+0xfffe5b74>
10105bf4:	9c000217 	ldw	r16,8(r19)
10105bf8:	00bfff04 	movi	r2,-4
10105bfc:	85800117 	ldw	r22,4(r16)
10105c00:	b0ac703a 	and	r22,r22,r2
10105c04:	b4400336 	bltu	r22,r17,10105c14 <_malloc_r+0x344>
10105c08:	b445c83a 	sub	r2,r22,r17
10105c0c:	00c003c4 	movi	r3,15
10105c10:	18805d16 	blt	r3,r2,10105d88 <_malloc_r+0x4b8>
10105c14:	05c40474 	movhi	r23,4113
10105c18:	00840474 	movhi	r2,4113
10105c1c:	108bf004 	addi	r2,r2,12224
10105c20:	bdc52304 	addi	r23,r23,5260
10105c24:	15400017 	ldw	r21,0(r2)
10105c28:	b8c00017 	ldw	r3,0(r23)
10105c2c:	00bfffc4 	movi	r2,-1
10105c30:	858d883a 	add	r6,r16,r22
10105c34:	8d6b883a 	add	r21,r17,r21
10105c38:	1880ea26 	beq	r3,r2,10105fe4 <_malloc_r+0x714>
10105c3c:	ad4403c4 	addi	r21,r21,4111
10105c40:	00bc0004 	movi	r2,-4096
10105c44:	a8aa703a 	and	r21,r21,r2
10105c48:	a80b883a 	mov	r5,r21
10105c4c:	9009883a 	mov	r4,r18
10105c50:	d9800015 	stw	r6,0(sp)
10105c54:	0107b600 	call	10107b60 <_sbrk_r>
10105c58:	1029883a 	mov	r20,r2
10105c5c:	00bfffc4 	movi	r2,-1
10105c60:	d9800017 	ldw	r6,0(sp)
10105c64:	a080e826 	beq	r20,r2,10106008 <_malloc_r+0x738>
10105c68:	a180a636 	bltu	r20,r6,10105f04 <_malloc_r+0x634>
10105c6c:	07040474 	movhi	fp,4113
10105c70:	e70bf904 	addi	fp,fp,12260
10105c74:	e0800017 	ldw	r2,0(fp)
10105c78:	a887883a 	add	r3,r21,r2
10105c7c:	e0c00015 	stw	r3,0(fp)
10105c80:	3500e626 	beq	r6,r20,1010601c <_malloc_r+0x74c>
10105c84:	b9000017 	ldw	r4,0(r23)
10105c88:	00bfffc4 	movi	r2,-1
10105c8c:	2080ee26 	beq	r4,r2,10106048 <_malloc_r+0x778>
10105c90:	a185c83a 	sub	r2,r20,r6
10105c94:	10c5883a 	add	r2,r2,r3
10105c98:	e0800015 	stw	r2,0(fp)
10105c9c:	a0c001cc 	andi	r3,r20,7
10105ca0:	1800bc26 	beq	r3,zero,10105f94 <_malloc_r+0x6c4>
10105ca4:	a0e9c83a 	sub	r20,r20,r3
10105ca8:	00840204 	movi	r2,4104
10105cac:	a5000204 	addi	r20,r20,8
10105cb0:	10c7c83a 	sub	r3,r2,r3
10105cb4:	a545883a 	add	r2,r20,r21
10105cb8:	1083ffcc 	andi	r2,r2,4095
10105cbc:	18abc83a 	sub	r21,r3,r2
10105cc0:	a80b883a 	mov	r5,r21
10105cc4:	9009883a 	mov	r4,r18
10105cc8:	0107b600 	call	10107b60 <_sbrk_r>
10105ccc:	00ffffc4 	movi	r3,-1
10105cd0:	10c0e126 	beq	r2,r3,10106058 <_malloc_r+0x788>
10105cd4:	1505c83a 	sub	r2,r2,r20
10105cd8:	1545883a 	add	r2,r2,r21
10105cdc:	10800054 	ori	r2,r2,1
10105ce0:	e0c00017 	ldw	r3,0(fp)
10105ce4:	9d000215 	stw	r20,8(r19)
10105ce8:	a0800115 	stw	r2,4(r20)
10105cec:	a8c7883a 	add	r3,r21,r3
10105cf0:	e0c00015 	stw	r3,0(fp)
10105cf4:	84c00e26 	beq	r16,r19,10105d30 <_malloc_r+0x460>
10105cf8:	018003c4 	movi	r6,15
10105cfc:	3580a72e 	bgeu	r6,r22,10105f9c <_malloc_r+0x6cc>
10105d00:	81400117 	ldw	r5,4(r16)
10105d04:	013ffe04 	movi	r4,-8
10105d08:	b0bffd04 	addi	r2,r22,-12
10105d0c:	1104703a 	and	r2,r2,r4
10105d10:	2900004c 	andi	r4,r5,1
10105d14:	2088b03a 	or	r4,r4,r2
10105d18:	81000115 	stw	r4,4(r16)
10105d1c:	01400144 	movi	r5,5
10105d20:	8089883a 	add	r4,r16,r2
10105d24:	21400115 	stw	r5,4(r4)
10105d28:	21400215 	stw	r5,8(r4)
10105d2c:	3080cd36 	bltu	r6,r2,10106064 <_malloc_r+0x794>
10105d30:	00840474 	movhi	r2,4113
10105d34:	108bef04 	addi	r2,r2,12220
10105d38:	11000017 	ldw	r4,0(r2)
10105d3c:	20c0012e 	bgeu	r4,r3,10105d44 <_malloc_r+0x474>
10105d40:	10c00015 	stw	r3,0(r2)
10105d44:	00840474 	movhi	r2,4113
10105d48:	108bee04 	addi	r2,r2,12216
10105d4c:	11000017 	ldw	r4,0(r2)
10105d50:	9c000217 	ldw	r16,8(r19)
10105d54:	20c0012e 	bgeu	r4,r3,10105d5c <_malloc_r+0x48c>
10105d58:	10c00015 	stw	r3,0(r2)
10105d5c:	80c00117 	ldw	r3,4(r16)
10105d60:	00bfff04 	movi	r2,-4
10105d64:	1886703a 	and	r3,r3,r2
10105d68:	1c45c83a 	sub	r2,r3,r17
10105d6c:	1c400236 	bltu	r3,r17,10105d78 <_malloc_r+0x4a8>
10105d70:	00c003c4 	movi	r3,15
10105d74:	18800416 	blt	r3,r2,10105d88 <_malloc_r+0x4b8>
10105d78:	9009883a 	mov	r4,r18
10105d7c:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10105d80:	0005883a 	mov	r2,zero
10105d84:	003f7b06 	br	10105b74 <__alt_data_end+0xfffe5b74>
10105d88:	88c00054 	ori	r3,r17,1
10105d8c:	80c00115 	stw	r3,4(r16)
10105d90:	8463883a 	add	r17,r16,r17
10105d94:	10800054 	ori	r2,r2,1
10105d98:	9c400215 	stw	r17,8(r19)
10105d9c:	88800115 	stw	r2,4(r17)
10105da0:	9009883a 	mov	r4,r18
10105da4:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10105da8:	80800204 	addi	r2,r16,8
10105dac:	003f7106 	br	10105b74 <__alt_data_end+0xfffe5b74>
10105db0:	00c00504 	movi	r3,20
10105db4:	18804a2e 	bgeu	r3,r2,10105ee0 <_malloc_r+0x610>
10105db8:	00c01504 	movi	r3,84
10105dbc:	18806e36 	bltu	r3,r2,10105f78 <_malloc_r+0x6a8>
10105dc0:	8804d33a 	srli	r2,r17,12
10105dc4:	12001bc4 	addi	r8,r2,111
10105dc8:	11c01b84 	addi	r7,r2,110
10105dcc:	4209883a 	add	r4,r8,r8
10105dd0:	003edd06 	br	10105948 <__alt_data_end+0xfffe5948>
10105dd4:	3804d27a 	srli	r2,r7,9
10105dd8:	00c00104 	movi	r3,4
10105ddc:	1880442e 	bgeu	r3,r2,10105ef0 <_malloc_r+0x620>
10105de0:	00c00504 	movi	r3,20
10105de4:	18808136 	bltu	r3,r2,10105fec <_malloc_r+0x71c>
10105de8:	11401704 	addi	r5,r2,92
10105dec:	10c016c4 	addi	r3,r2,91
10105df0:	294b883a 	add	r5,r5,r5
10105df4:	294b883a 	add	r5,r5,r5
10105df8:	294b883a 	add	r5,r5,r5
10105dfc:	994b883a 	add	r5,r19,r5
10105e00:	28800017 	ldw	r2,0(r5)
10105e04:	01840474 	movhi	r6,4113
10105e08:	297ffe04 	addi	r5,r5,-8
10105e0c:	31bf9c04 	addi	r6,r6,-400
10105e10:	28806526 	beq	r5,r2,10105fa8 <_malloc_r+0x6d8>
10105e14:	01bfff04 	movi	r6,-4
10105e18:	10c00117 	ldw	r3,4(r2)
10105e1c:	1986703a 	and	r3,r3,r6
10105e20:	38c0022e 	bgeu	r7,r3,10105e2c <_malloc_r+0x55c>
10105e24:	10800217 	ldw	r2,8(r2)
10105e28:	28bffb1e 	bne	r5,r2,10105e18 <__alt_data_end+0xfffe5e18>
10105e2c:	11400317 	ldw	r5,12(r2)
10105e30:	98c00117 	ldw	r3,4(r19)
10105e34:	81400315 	stw	r5,12(r16)
10105e38:	80800215 	stw	r2,8(r16)
10105e3c:	2c000215 	stw	r16,8(r5)
10105e40:	14000315 	stw	r16,12(r2)
10105e44:	003ef806 	br	10105a28 <__alt_data_end+0xfffe5a28>
10105e48:	88c00054 	ori	r3,r17,1
10105e4c:	80c00115 	stw	r3,4(r16)
10105e50:	8463883a 	add	r17,r16,r17
10105e54:	34400515 	stw	r17,20(r6)
10105e58:	34400415 	stw	r17,16(r6)
10105e5c:	10c00054 	ori	r3,r2,1
10105e60:	8a000315 	stw	r8,12(r17)
10105e64:	8a000215 	stw	r8,8(r17)
10105e68:	88c00115 	stw	r3,4(r17)
10105e6c:	88a3883a 	add	r17,r17,r2
10105e70:	88800015 	stw	r2,0(r17)
10105e74:	9009883a 	mov	r4,r18
10105e78:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10105e7c:	80800204 	addi	r2,r16,8
10105e80:	003f3c06 	br	10105b74 <__alt_data_end+0xfffe5b74>
10105e84:	30c00117 	ldw	r3,4(r6)
10105e88:	003ee706 	br	10105a28 <__alt_data_end+0xfffe5a28>
10105e8c:	5ac00044 	addi	r11,r11,1
10105e90:	588000cc 	andi	r2,r11,3
10105e94:	31800204 	addi	r6,r6,8
10105e98:	103efd1e 	bne	r2,zero,10105a90 <__alt_data_end+0xfffe5a90>
10105e9c:	00002406 	br	10105f30 <_malloc_r+0x660>
10105ea0:	14000317 	ldw	r16,12(r2)
10105ea4:	143f251e 	bne	r2,r16,10105b3c <__alt_data_end+0xfffe5b3c>
10105ea8:	21000084 	addi	r4,r4,2
10105eac:	003ebc06 	br	101059a0 <__alt_data_end+0xfffe59a0>
10105eb0:	8085883a 	add	r2,r16,r2
10105eb4:	10c00117 	ldw	r3,4(r2)
10105eb8:	81000317 	ldw	r4,12(r16)
10105ebc:	81400217 	ldw	r5,8(r16)
10105ec0:	18c00054 	ori	r3,r3,1
10105ec4:	10c00115 	stw	r3,4(r2)
10105ec8:	29000315 	stw	r4,12(r5)
10105ecc:	21400215 	stw	r5,8(r4)
10105ed0:	9009883a 	mov	r4,r18
10105ed4:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10105ed8:	80800204 	addi	r2,r16,8
10105edc:	003f2506 	br	10105b74 <__alt_data_end+0xfffe5b74>
10105ee0:	12001704 	addi	r8,r2,92
10105ee4:	11c016c4 	addi	r7,r2,91
10105ee8:	4209883a 	add	r4,r8,r8
10105eec:	003e9606 	br	10105948 <__alt_data_end+0xfffe5948>
10105ef0:	3804d1ba 	srli	r2,r7,6
10105ef4:	11400e44 	addi	r5,r2,57
10105ef8:	10c00e04 	addi	r3,r2,56
10105efc:	294b883a 	add	r5,r5,r5
10105f00:	003fbc06 	br	10105df4 <__alt_data_end+0xfffe5df4>
10105f04:	84ff5926 	beq	r16,r19,10105c6c <__alt_data_end+0xfffe5c6c>
10105f08:	00840474 	movhi	r2,4113
10105f0c:	10bf9c04 	addi	r2,r2,-400
10105f10:	14000217 	ldw	r16,8(r2)
10105f14:	00bfff04 	movi	r2,-4
10105f18:	80c00117 	ldw	r3,4(r16)
10105f1c:	1886703a 	and	r3,r3,r2
10105f20:	003f9106 	br	10105d68 <__alt_data_end+0xfffe5d68>
10105f24:	60800217 	ldw	r2,8(r12)
10105f28:	213fffc4 	addi	r4,r4,-1
10105f2c:	1300651e 	bne	r2,r12,101060c4 <_malloc_r+0x7f4>
10105f30:	208000cc 	andi	r2,r4,3
10105f34:	633ffe04 	addi	r12,r12,-8
10105f38:	103ffa1e 	bne	r2,zero,10105f24 <__alt_data_end+0xfffe5f24>
10105f3c:	98800117 	ldw	r2,4(r19)
10105f40:	0146303a 	nor	r3,zero,r5
10105f44:	1884703a 	and	r2,r3,r2
10105f48:	98800115 	stw	r2,4(r19)
10105f4c:	294b883a 	add	r5,r5,r5
10105f50:	117f2836 	bltu	r2,r5,10105bf4 <__alt_data_end+0xfffe5bf4>
10105f54:	283f2726 	beq	r5,zero,10105bf4 <__alt_data_end+0xfffe5bf4>
10105f58:	2886703a 	and	r3,r5,r2
10105f5c:	5809883a 	mov	r4,r11
10105f60:	183ec31e 	bne	r3,zero,10105a70 <__alt_data_end+0xfffe5a70>
10105f64:	294b883a 	add	r5,r5,r5
10105f68:	2886703a 	and	r3,r5,r2
10105f6c:	21000104 	addi	r4,r4,4
10105f70:	183ffc26 	beq	r3,zero,10105f64 <__alt_data_end+0xfffe5f64>
10105f74:	003ebe06 	br	10105a70 <__alt_data_end+0xfffe5a70>
10105f78:	00c05504 	movi	r3,340
10105f7c:	18801236 	bltu	r3,r2,10105fc8 <_malloc_r+0x6f8>
10105f80:	8804d3fa 	srli	r2,r17,15
10105f84:	12001e04 	addi	r8,r2,120
10105f88:	11c01dc4 	addi	r7,r2,119
10105f8c:	4209883a 	add	r4,r8,r8
10105f90:	003e6d06 	br	10105948 <__alt_data_end+0xfffe5948>
10105f94:	00c40004 	movi	r3,4096
10105f98:	003f4606 	br	10105cb4 <__alt_data_end+0xfffe5cb4>
10105f9c:	00800044 	movi	r2,1
10105fa0:	a0800115 	stw	r2,4(r20)
10105fa4:	003f7406 	br	10105d78 <__alt_data_end+0xfffe5d78>
10105fa8:	1805d0ba 	srai	r2,r3,2
10105fac:	01c00044 	movi	r7,1
10105fb0:	30c00117 	ldw	r3,4(r6)
10105fb4:	388e983a 	sll	r7,r7,r2
10105fb8:	2805883a 	mov	r2,r5
10105fbc:	38c6b03a 	or	r3,r7,r3
10105fc0:	30c00115 	stw	r3,4(r6)
10105fc4:	003f9b06 	br	10105e34 <__alt_data_end+0xfffe5e34>
10105fc8:	00c15504 	movi	r3,1364
10105fcc:	18801a36 	bltu	r3,r2,10106038 <_malloc_r+0x768>
10105fd0:	8804d4ba 	srli	r2,r17,18
10105fd4:	12001f44 	addi	r8,r2,125
10105fd8:	11c01f04 	addi	r7,r2,124
10105fdc:	4209883a 	add	r4,r8,r8
10105fe0:	003e5906 	br	10105948 <__alt_data_end+0xfffe5948>
10105fe4:	ad400404 	addi	r21,r21,16
10105fe8:	003f1706 	br	10105c48 <__alt_data_end+0xfffe5c48>
10105fec:	00c01504 	movi	r3,84
10105ff0:	18802336 	bltu	r3,r2,10106080 <_malloc_r+0x7b0>
10105ff4:	3804d33a 	srli	r2,r7,12
10105ff8:	11401bc4 	addi	r5,r2,111
10105ffc:	10c01b84 	addi	r3,r2,110
10106000:	294b883a 	add	r5,r5,r5
10106004:	003f7b06 	br	10105df4 <__alt_data_end+0xfffe5df4>
10106008:	9c000217 	ldw	r16,8(r19)
1010600c:	00bfff04 	movi	r2,-4
10106010:	80c00117 	ldw	r3,4(r16)
10106014:	1886703a 	and	r3,r3,r2
10106018:	003f5306 	br	10105d68 <__alt_data_end+0xfffe5d68>
1010601c:	3083ffcc 	andi	r2,r6,4095
10106020:	103f181e 	bne	r2,zero,10105c84 <__alt_data_end+0xfffe5c84>
10106024:	99000217 	ldw	r4,8(r19)
10106028:	b545883a 	add	r2,r22,r21
1010602c:	10800054 	ori	r2,r2,1
10106030:	20800115 	stw	r2,4(r4)
10106034:	003f3e06 	br	10105d30 <__alt_data_end+0xfffe5d30>
10106038:	01003f84 	movi	r4,254
1010603c:	02001fc4 	movi	r8,127
10106040:	01c01f84 	movi	r7,126
10106044:	003e4006 	br	10105948 <__alt_data_end+0xfffe5948>
10106048:	00840474 	movhi	r2,4113
1010604c:	10852304 	addi	r2,r2,5260
10106050:	15000015 	stw	r20,0(r2)
10106054:	003f1106 	br	10105c9c <__alt_data_end+0xfffe5c9c>
10106058:	00800044 	movi	r2,1
1010605c:	002b883a 	mov	r21,zero
10106060:	003f1f06 	br	10105ce0 <__alt_data_end+0xfffe5ce0>
10106064:	81400204 	addi	r5,r16,8
10106068:	9009883a 	mov	r4,r18
1010606c:	0104ce40 	call	10104ce4 <_free_r>
10106070:	00840474 	movhi	r2,4113
10106074:	108bf904 	addi	r2,r2,12260
10106078:	10c00017 	ldw	r3,0(r2)
1010607c:	003f2c06 	br	10105d30 <__alt_data_end+0xfffe5d30>
10106080:	00c05504 	movi	r3,340
10106084:	18800536 	bltu	r3,r2,1010609c <_malloc_r+0x7cc>
10106088:	3804d3fa 	srli	r2,r7,15
1010608c:	11401e04 	addi	r5,r2,120
10106090:	10c01dc4 	addi	r3,r2,119
10106094:	294b883a 	add	r5,r5,r5
10106098:	003f5606 	br	10105df4 <__alt_data_end+0xfffe5df4>
1010609c:	00c15504 	movi	r3,1364
101060a0:	18800536 	bltu	r3,r2,101060b8 <_malloc_r+0x7e8>
101060a4:	3804d4ba 	srli	r2,r7,18
101060a8:	11401f44 	addi	r5,r2,125
101060ac:	10c01f04 	addi	r3,r2,124
101060b0:	294b883a 	add	r5,r5,r5
101060b4:	003f4f06 	br	10105df4 <__alt_data_end+0xfffe5df4>
101060b8:	01403f84 	movi	r5,254
101060bc:	00c01f84 	movi	r3,126
101060c0:	003f4c06 	br	10105df4 <__alt_data_end+0xfffe5df4>
101060c4:	98800117 	ldw	r2,4(r19)
101060c8:	003fa006 	br	10105f4c <__alt_data_end+0xfffe5f4c>
101060cc:	8808d0fa 	srli	r4,r17,3
101060d0:	20800044 	addi	r2,r4,1
101060d4:	1085883a 	add	r2,r2,r2
101060d8:	003e9006 	br	10105b1c <__alt_data_end+0xfffe5b1c>

101060dc <memchr>:
101060dc:	208000cc 	andi	r2,r4,3
101060e0:	280f883a 	mov	r7,r5
101060e4:	10003426 	beq	r2,zero,101061b8 <memchr+0xdc>
101060e8:	30bfffc4 	addi	r2,r6,-1
101060ec:	30001a26 	beq	r6,zero,10106158 <memchr+0x7c>
101060f0:	20c00003 	ldbu	r3,0(r4)
101060f4:	29803fcc 	andi	r6,r5,255
101060f8:	30c0051e 	bne	r6,r3,10106110 <memchr+0x34>
101060fc:	00001806 	br	10106160 <memchr+0x84>
10106100:	10001526 	beq	r2,zero,10106158 <memchr+0x7c>
10106104:	20c00003 	ldbu	r3,0(r4)
10106108:	10bfffc4 	addi	r2,r2,-1
1010610c:	30c01426 	beq	r6,r3,10106160 <memchr+0x84>
10106110:	21000044 	addi	r4,r4,1
10106114:	20c000cc 	andi	r3,r4,3
10106118:	183ff91e 	bne	r3,zero,10106100 <__alt_data_end+0xfffe6100>
1010611c:	020000c4 	movi	r8,3
10106120:	40801136 	bltu	r8,r2,10106168 <memchr+0x8c>
10106124:	10000c26 	beq	r2,zero,10106158 <memchr+0x7c>
10106128:	20c00003 	ldbu	r3,0(r4)
1010612c:	29403fcc 	andi	r5,r5,255
10106130:	28c00b26 	beq	r5,r3,10106160 <memchr+0x84>
10106134:	20c00044 	addi	r3,r4,1
10106138:	39803fcc 	andi	r6,r7,255
1010613c:	2089883a 	add	r4,r4,r2
10106140:	00000306 	br	10106150 <memchr+0x74>
10106144:	18c00044 	addi	r3,r3,1
10106148:	197fffc3 	ldbu	r5,-1(r3)
1010614c:	31400526 	beq	r6,r5,10106164 <memchr+0x88>
10106150:	1805883a 	mov	r2,r3
10106154:	20fffb1e 	bne	r4,r3,10106144 <__alt_data_end+0xfffe6144>
10106158:	0005883a 	mov	r2,zero
1010615c:	f800283a 	ret
10106160:	2005883a 	mov	r2,r4
10106164:	f800283a 	ret
10106168:	28c03fcc 	andi	r3,r5,255
1010616c:	1812923a 	slli	r9,r3,8
10106170:	02ffbff4 	movhi	r11,65279
10106174:	02a02074 	movhi	r10,32897
10106178:	48d2b03a 	or	r9,r9,r3
1010617c:	4806943a 	slli	r3,r9,16
10106180:	5affbfc4 	addi	r11,r11,-257
10106184:	52a02004 	addi	r10,r10,-32640
10106188:	48d2b03a 	or	r9,r9,r3
1010618c:	20c00017 	ldw	r3,0(r4)
10106190:	48c6f03a 	xor	r3,r9,r3
10106194:	1acd883a 	add	r6,r3,r11
10106198:	00c6303a 	nor	r3,zero,r3
1010619c:	30c6703a 	and	r3,r6,r3
101061a0:	1a86703a 	and	r3,r3,r10
101061a4:	183fe01e 	bne	r3,zero,10106128 <__alt_data_end+0xfffe6128>
101061a8:	10bfff04 	addi	r2,r2,-4
101061ac:	21000104 	addi	r4,r4,4
101061b0:	40bff636 	bltu	r8,r2,1010618c <__alt_data_end+0xfffe618c>
101061b4:	003fdb06 	br	10106124 <__alt_data_end+0xfffe6124>
101061b8:	3005883a 	mov	r2,r6
101061bc:	003fd706 	br	1010611c <__alt_data_end+0xfffe611c>

101061c0 <memcpy>:
101061c0:	defffd04 	addi	sp,sp,-12
101061c4:	dfc00215 	stw	ra,8(sp)
101061c8:	dc400115 	stw	r17,4(sp)
101061cc:	dc000015 	stw	r16,0(sp)
101061d0:	00c003c4 	movi	r3,15
101061d4:	2005883a 	mov	r2,r4
101061d8:	1980452e 	bgeu	r3,r6,101062f0 <memcpy+0x130>
101061dc:	2906b03a 	or	r3,r5,r4
101061e0:	18c000cc 	andi	r3,r3,3
101061e4:	1800441e 	bne	r3,zero,101062f8 <memcpy+0x138>
101061e8:	347ffc04 	addi	r17,r6,-16
101061ec:	8822d13a 	srli	r17,r17,4
101061f0:	28c00104 	addi	r3,r5,4
101061f4:	23400104 	addi	r13,r4,4
101061f8:	8820913a 	slli	r16,r17,4
101061fc:	2b000204 	addi	r12,r5,8
10106200:	22c00204 	addi	r11,r4,8
10106204:	84000504 	addi	r16,r16,20
10106208:	2a800304 	addi	r10,r5,12
1010620c:	22400304 	addi	r9,r4,12
10106210:	2c21883a 	add	r16,r5,r16
10106214:	2811883a 	mov	r8,r5
10106218:	200f883a 	mov	r7,r4
1010621c:	41000017 	ldw	r4,0(r8)
10106220:	1fc00017 	ldw	ra,0(r3)
10106224:	63c00017 	ldw	r15,0(r12)
10106228:	39000015 	stw	r4,0(r7)
1010622c:	53800017 	ldw	r14,0(r10)
10106230:	6fc00015 	stw	ra,0(r13)
10106234:	5bc00015 	stw	r15,0(r11)
10106238:	4b800015 	stw	r14,0(r9)
1010623c:	18c00404 	addi	r3,r3,16
10106240:	39c00404 	addi	r7,r7,16
10106244:	42000404 	addi	r8,r8,16
10106248:	6b400404 	addi	r13,r13,16
1010624c:	63000404 	addi	r12,r12,16
10106250:	5ac00404 	addi	r11,r11,16
10106254:	52800404 	addi	r10,r10,16
10106258:	4a400404 	addi	r9,r9,16
1010625c:	1c3fef1e 	bne	r3,r16,1010621c <__alt_data_end+0xfffe621c>
10106260:	89c00044 	addi	r7,r17,1
10106264:	380e913a 	slli	r7,r7,4
10106268:	310003cc 	andi	r4,r6,15
1010626c:	02c000c4 	movi	r11,3
10106270:	11c7883a 	add	r3,r2,r7
10106274:	29cb883a 	add	r5,r5,r7
10106278:	5900212e 	bgeu	r11,r4,10106300 <memcpy+0x140>
1010627c:	1813883a 	mov	r9,r3
10106280:	2811883a 	mov	r8,r5
10106284:	200f883a 	mov	r7,r4
10106288:	42800017 	ldw	r10,0(r8)
1010628c:	4a400104 	addi	r9,r9,4
10106290:	39ffff04 	addi	r7,r7,-4
10106294:	4abfff15 	stw	r10,-4(r9)
10106298:	42000104 	addi	r8,r8,4
1010629c:	59fffa36 	bltu	r11,r7,10106288 <__alt_data_end+0xfffe6288>
101062a0:	213fff04 	addi	r4,r4,-4
101062a4:	2008d0ba 	srli	r4,r4,2
101062a8:	318000cc 	andi	r6,r6,3
101062ac:	21000044 	addi	r4,r4,1
101062b0:	2109883a 	add	r4,r4,r4
101062b4:	2109883a 	add	r4,r4,r4
101062b8:	1907883a 	add	r3,r3,r4
101062bc:	290b883a 	add	r5,r5,r4
101062c0:	30000626 	beq	r6,zero,101062dc <memcpy+0x11c>
101062c4:	198d883a 	add	r6,r3,r6
101062c8:	29c00003 	ldbu	r7,0(r5)
101062cc:	18c00044 	addi	r3,r3,1
101062d0:	29400044 	addi	r5,r5,1
101062d4:	19ffffc5 	stb	r7,-1(r3)
101062d8:	19bffb1e 	bne	r3,r6,101062c8 <__alt_data_end+0xfffe62c8>
101062dc:	dfc00217 	ldw	ra,8(sp)
101062e0:	dc400117 	ldw	r17,4(sp)
101062e4:	dc000017 	ldw	r16,0(sp)
101062e8:	dec00304 	addi	sp,sp,12
101062ec:	f800283a 	ret
101062f0:	2007883a 	mov	r3,r4
101062f4:	003ff206 	br	101062c0 <__alt_data_end+0xfffe62c0>
101062f8:	2007883a 	mov	r3,r4
101062fc:	003ff106 	br	101062c4 <__alt_data_end+0xfffe62c4>
10106300:	200d883a 	mov	r6,r4
10106304:	003fee06 	br	101062c0 <__alt_data_end+0xfffe62c0>

10106308 <memmove>:
10106308:	2005883a 	mov	r2,r4
1010630c:	29000b2e 	bgeu	r5,r4,1010633c <memmove+0x34>
10106310:	298f883a 	add	r7,r5,r6
10106314:	21c0092e 	bgeu	r4,r7,1010633c <memmove+0x34>
10106318:	2187883a 	add	r3,r4,r6
1010631c:	198bc83a 	sub	r5,r3,r6
10106320:	30004826 	beq	r6,zero,10106444 <memmove+0x13c>
10106324:	39ffffc4 	addi	r7,r7,-1
10106328:	39000003 	ldbu	r4,0(r7)
1010632c:	18ffffc4 	addi	r3,r3,-1
10106330:	19000005 	stb	r4,0(r3)
10106334:	28fffb1e 	bne	r5,r3,10106324 <__alt_data_end+0xfffe6324>
10106338:	f800283a 	ret
1010633c:	00c003c4 	movi	r3,15
10106340:	1980412e 	bgeu	r3,r6,10106448 <memmove+0x140>
10106344:	2886b03a 	or	r3,r5,r2
10106348:	18c000cc 	andi	r3,r3,3
1010634c:	1800401e 	bne	r3,zero,10106450 <memmove+0x148>
10106350:	33fffc04 	addi	r15,r6,-16
10106354:	781ed13a 	srli	r15,r15,4
10106358:	28c00104 	addi	r3,r5,4
1010635c:	13400104 	addi	r13,r2,4
10106360:	781c913a 	slli	r14,r15,4
10106364:	2b000204 	addi	r12,r5,8
10106368:	12c00204 	addi	r11,r2,8
1010636c:	73800504 	addi	r14,r14,20
10106370:	2a800304 	addi	r10,r5,12
10106374:	12400304 	addi	r9,r2,12
10106378:	2b9d883a 	add	r14,r5,r14
1010637c:	2811883a 	mov	r8,r5
10106380:	100f883a 	mov	r7,r2
10106384:	41000017 	ldw	r4,0(r8)
10106388:	39c00404 	addi	r7,r7,16
1010638c:	18c00404 	addi	r3,r3,16
10106390:	393ffc15 	stw	r4,-16(r7)
10106394:	193ffc17 	ldw	r4,-16(r3)
10106398:	6b400404 	addi	r13,r13,16
1010639c:	5ac00404 	addi	r11,r11,16
101063a0:	693ffc15 	stw	r4,-16(r13)
101063a4:	61000017 	ldw	r4,0(r12)
101063a8:	4a400404 	addi	r9,r9,16
101063ac:	42000404 	addi	r8,r8,16
101063b0:	593ffc15 	stw	r4,-16(r11)
101063b4:	51000017 	ldw	r4,0(r10)
101063b8:	63000404 	addi	r12,r12,16
101063bc:	52800404 	addi	r10,r10,16
101063c0:	493ffc15 	stw	r4,-16(r9)
101063c4:	1bbfef1e 	bne	r3,r14,10106384 <__alt_data_end+0xfffe6384>
101063c8:	79000044 	addi	r4,r15,1
101063cc:	2008913a 	slli	r4,r4,4
101063d0:	328003cc 	andi	r10,r6,15
101063d4:	02c000c4 	movi	r11,3
101063d8:	1107883a 	add	r3,r2,r4
101063dc:	290b883a 	add	r5,r5,r4
101063e0:	5a801e2e 	bgeu	r11,r10,1010645c <memmove+0x154>
101063e4:	1813883a 	mov	r9,r3
101063e8:	2811883a 	mov	r8,r5
101063ec:	500f883a 	mov	r7,r10
101063f0:	41000017 	ldw	r4,0(r8)
101063f4:	4a400104 	addi	r9,r9,4
101063f8:	39ffff04 	addi	r7,r7,-4
101063fc:	493fff15 	stw	r4,-4(r9)
10106400:	42000104 	addi	r8,r8,4
10106404:	59fffa36 	bltu	r11,r7,101063f0 <__alt_data_end+0xfffe63f0>
10106408:	513fff04 	addi	r4,r10,-4
1010640c:	2008d0ba 	srli	r4,r4,2
10106410:	318000cc 	andi	r6,r6,3
10106414:	21000044 	addi	r4,r4,1
10106418:	2109883a 	add	r4,r4,r4
1010641c:	2109883a 	add	r4,r4,r4
10106420:	1907883a 	add	r3,r3,r4
10106424:	290b883a 	add	r5,r5,r4
10106428:	30000b26 	beq	r6,zero,10106458 <memmove+0x150>
1010642c:	198d883a 	add	r6,r3,r6
10106430:	29c00003 	ldbu	r7,0(r5)
10106434:	18c00044 	addi	r3,r3,1
10106438:	29400044 	addi	r5,r5,1
1010643c:	19ffffc5 	stb	r7,-1(r3)
10106440:	19bffb1e 	bne	r3,r6,10106430 <__alt_data_end+0xfffe6430>
10106444:	f800283a 	ret
10106448:	1007883a 	mov	r3,r2
1010644c:	003ff606 	br	10106428 <__alt_data_end+0xfffe6428>
10106450:	1007883a 	mov	r3,r2
10106454:	003ff506 	br	1010642c <__alt_data_end+0xfffe642c>
10106458:	f800283a 	ret
1010645c:	500d883a 	mov	r6,r10
10106460:	003ff106 	br	10106428 <__alt_data_end+0xfffe6428>

10106464 <memset>:
10106464:	20c000cc 	andi	r3,r4,3
10106468:	2005883a 	mov	r2,r4
1010646c:	18004426 	beq	r3,zero,10106580 <memset+0x11c>
10106470:	31ffffc4 	addi	r7,r6,-1
10106474:	30004026 	beq	r6,zero,10106578 <memset+0x114>
10106478:	2813883a 	mov	r9,r5
1010647c:	200d883a 	mov	r6,r4
10106480:	2007883a 	mov	r3,r4
10106484:	00000406 	br	10106498 <memset+0x34>
10106488:	3a3fffc4 	addi	r8,r7,-1
1010648c:	31800044 	addi	r6,r6,1
10106490:	38003926 	beq	r7,zero,10106578 <memset+0x114>
10106494:	400f883a 	mov	r7,r8
10106498:	18c00044 	addi	r3,r3,1
1010649c:	32400005 	stb	r9,0(r6)
101064a0:	1a0000cc 	andi	r8,r3,3
101064a4:	403ff81e 	bne	r8,zero,10106488 <__alt_data_end+0xfffe6488>
101064a8:	010000c4 	movi	r4,3
101064ac:	21c02d2e 	bgeu	r4,r7,10106564 <memset+0x100>
101064b0:	29003fcc 	andi	r4,r5,255
101064b4:	200c923a 	slli	r6,r4,8
101064b8:	3108b03a 	or	r4,r6,r4
101064bc:	200c943a 	slli	r6,r4,16
101064c0:	218cb03a 	or	r6,r4,r6
101064c4:	010003c4 	movi	r4,15
101064c8:	21c0182e 	bgeu	r4,r7,1010652c <memset+0xc8>
101064cc:	3b3ffc04 	addi	r12,r7,-16
101064d0:	6018d13a 	srli	r12,r12,4
101064d4:	1a000104 	addi	r8,r3,4
101064d8:	1ac00204 	addi	r11,r3,8
101064dc:	6008913a 	slli	r4,r12,4
101064e0:	1a800304 	addi	r10,r3,12
101064e4:	1813883a 	mov	r9,r3
101064e8:	21000504 	addi	r4,r4,20
101064ec:	1909883a 	add	r4,r3,r4
101064f0:	49800015 	stw	r6,0(r9)
101064f4:	41800015 	stw	r6,0(r8)
101064f8:	59800015 	stw	r6,0(r11)
101064fc:	51800015 	stw	r6,0(r10)
10106500:	42000404 	addi	r8,r8,16
10106504:	4a400404 	addi	r9,r9,16
10106508:	5ac00404 	addi	r11,r11,16
1010650c:	52800404 	addi	r10,r10,16
10106510:	413ff71e 	bne	r8,r4,101064f0 <__alt_data_end+0xfffe64f0>
10106514:	63000044 	addi	r12,r12,1
10106518:	6018913a 	slli	r12,r12,4
1010651c:	39c003cc 	andi	r7,r7,15
10106520:	010000c4 	movi	r4,3
10106524:	1b07883a 	add	r3,r3,r12
10106528:	21c00e2e 	bgeu	r4,r7,10106564 <memset+0x100>
1010652c:	1813883a 	mov	r9,r3
10106530:	3811883a 	mov	r8,r7
10106534:	010000c4 	movi	r4,3
10106538:	49800015 	stw	r6,0(r9)
1010653c:	423fff04 	addi	r8,r8,-4
10106540:	4a400104 	addi	r9,r9,4
10106544:	223ffc36 	bltu	r4,r8,10106538 <__alt_data_end+0xfffe6538>
10106548:	393fff04 	addi	r4,r7,-4
1010654c:	2008d0ba 	srli	r4,r4,2
10106550:	39c000cc 	andi	r7,r7,3
10106554:	21000044 	addi	r4,r4,1
10106558:	2109883a 	add	r4,r4,r4
1010655c:	2109883a 	add	r4,r4,r4
10106560:	1907883a 	add	r3,r3,r4
10106564:	38000526 	beq	r7,zero,1010657c <memset+0x118>
10106568:	19cf883a 	add	r7,r3,r7
1010656c:	19400005 	stb	r5,0(r3)
10106570:	18c00044 	addi	r3,r3,1
10106574:	38fffd1e 	bne	r7,r3,1010656c <__alt_data_end+0xfffe656c>
10106578:	f800283a 	ret
1010657c:	f800283a 	ret
10106580:	2007883a 	mov	r3,r4
10106584:	300f883a 	mov	r7,r6
10106588:	003fc706 	br	101064a8 <__alt_data_end+0xfffe64a8>

1010658c <_Balloc>:
1010658c:	20801317 	ldw	r2,76(r4)
10106590:	defffc04 	addi	sp,sp,-16
10106594:	dc400115 	stw	r17,4(sp)
10106598:	dc000015 	stw	r16,0(sp)
1010659c:	dfc00315 	stw	ra,12(sp)
101065a0:	dc800215 	stw	r18,8(sp)
101065a4:	2023883a 	mov	r17,r4
101065a8:	2821883a 	mov	r16,r5
101065ac:	10000f26 	beq	r2,zero,101065ec <_Balloc+0x60>
101065b0:	8407883a 	add	r3,r16,r16
101065b4:	18c7883a 	add	r3,r3,r3
101065b8:	10c7883a 	add	r3,r2,r3
101065bc:	18800017 	ldw	r2,0(r3)
101065c0:	10001126 	beq	r2,zero,10106608 <_Balloc+0x7c>
101065c4:	11000017 	ldw	r4,0(r2)
101065c8:	19000015 	stw	r4,0(r3)
101065cc:	10000415 	stw	zero,16(r2)
101065d0:	10000315 	stw	zero,12(r2)
101065d4:	dfc00317 	ldw	ra,12(sp)
101065d8:	dc800217 	ldw	r18,8(sp)
101065dc:	dc400117 	ldw	r17,4(sp)
101065e0:	dc000017 	ldw	r16,0(sp)
101065e4:	dec00404 	addi	sp,sp,16
101065e8:	f800283a 	ret
101065ec:	01800844 	movi	r6,33
101065f0:	01400104 	movi	r5,4
101065f4:	01094c80 	call	101094c8 <_calloc_r>
101065f8:	88801315 	stw	r2,76(r17)
101065fc:	103fec1e 	bne	r2,zero,101065b0 <__alt_data_end+0xfffe65b0>
10106600:	0005883a 	mov	r2,zero
10106604:	003ff306 	br	101065d4 <__alt_data_end+0xfffe65d4>
10106608:	01400044 	movi	r5,1
1010660c:	2c24983a 	sll	r18,r5,r16
10106610:	8809883a 	mov	r4,r17
10106614:	91800144 	addi	r6,r18,5
10106618:	318d883a 	add	r6,r6,r6
1010661c:	318d883a 	add	r6,r6,r6
10106620:	01094c80 	call	101094c8 <_calloc_r>
10106624:	103ff626 	beq	r2,zero,10106600 <__alt_data_end+0xfffe6600>
10106628:	14000115 	stw	r16,4(r2)
1010662c:	14800215 	stw	r18,8(r2)
10106630:	003fe606 	br	101065cc <__alt_data_end+0xfffe65cc>

10106634 <_Bfree>:
10106634:	28000826 	beq	r5,zero,10106658 <_Bfree+0x24>
10106638:	28c00117 	ldw	r3,4(r5)
1010663c:	20801317 	ldw	r2,76(r4)
10106640:	18c7883a 	add	r3,r3,r3
10106644:	18c7883a 	add	r3,r3,r3
10106648:	10c5883a 	add	r2,r2,r3
1010664c:	10c00017 	ldw	r3,0(r2)
10106650:	28c00015 	stw	r3,0(r5)
10106654:	11400015 	stw	r5,0(r2)
10106658:	f800283a 	ret

1010665c <__multadd>:
1010665c:	defffa04 	addi	sp,sp,-24
10106660:	dc800315 	stw	r18,12(sp)
10106664:	dc400215 	stw	r17,8(sp)
10106668:	dc000115 	stw	r16,4(sp)
1010666c:	2823883a 	mov	r17,r5
10106670:	2c000417 	ldw	r16,16(r5)
10106674:	dfc00515 	stw	ra,20(sp)
10106678:	dcc00415 	stw	r19,16(sp)
1010667c:	2025883a 	mov	r18,r4
10106680:	29400504 	addi	r5,r5,20
10106684:	0011883a 	mov	r8,zero
10106688:	28c00017 	ldw	r3,0(r5)
1010668c:	29400104 	addi	r5,r5,4
10106690:	42000044 	addi	r8,r8,1
10106694:	18bfffcc 	andi	r2,r3,65535
10106698:	1185383a 	mul	r2,r2,r6
1010669c:	1806d43a 	srli	r3,r3,16
101066a0:	11cf883a 	add	r7,r2,r7
101066a4:	3808d43a 	srli	r4,r7,16
101066a8:	1987383a 	mul	r3,r3,r6
101066ac:	38bfffcc 	andi	r2,r7,65535
101066b0:	1907883a 	add	r3,r3,r4
101066b4:	1808943a 	slli	r4,r3,16
101066b8:	180ed43a 	srli	r7,r3,16
101066bc:	2085883a 	add	r2,r4,r2
101066c0:	28bfff15 	stw	r2,-4(r5)
101066c4:	443ff016 	blt	r8,r16,10106688 <__alt_data_end+0xfffe6688>
101066c8:	38000926 	beq	r7,zero,101066f0 <__multadd+0x94>
101066cc:	88800217 	ldw	r2,8(r17)
101066d0:	80800f0e 	bge	r16,r2,10106710 <__multadd+0xb4>
101066d4:	80800144 	addi	r2,r16,5
101066d8:	1085883a 	add	r2,r2,r2
101066dc:	1085883a 	add	r2,r2,r2
101066e0:	8885883a 	add	r2,r17,r2
101066e4:	11c00015 	stw	r7,0(r2)
101066e8:	84000044 	addi	r16,r16,1
101066ec:	8c000415 	stw	r16,16(r17)
101066f0:	8805883a 	mov	r2,r17
101066f4:	dfc00517 	ldw	ra,20(sp)
101066f8:	dcc00417 	ldw	r19,16(sp)
101066fc:	dc800317 	ldw	r18,12(sp)
10106700:	dc400217 	ldw	r17,8(sp)
10106704:	dc000117 	ldw	r16,4(sp)
10106708:	dec00604 	addi	sp,sp,24
1010670c:	f800283a 	ret
10106710:	89400117 	ldw	r5,4(r17)
10106714:	9009883a 	mov	r4,r18
10106718:	d9c00015 	stw	r7,0(sp)
1010671c:	29400044 	addi	r5,r5,1
10106720:	010658c0 	call	1010658c <_Balloc>
10106724:	89800417 	ldw	r6,16(r17)
10106728:	89400304 	addi	r5,r17,12
1010672c:	11000304 	addi	r4,r2,12
10106730:	31800084 	addi	r6,r6,2
10106734:	318d883a 	add	r6,r6,r6
10106738:	318d883a 	add	r6,r6,r6
1010673c:	1027883a 	mov	r19,r2
10106740:	01061c00 	call	101061c0 <memcpy>
10106744:	d9c00017 	ldw	r7,0(sp)
10106748:	88000a26 	beq	r17,zero,10106774 <__multadd+0x118>
1010674c:	88c00117 	ldw	r3,4(r17)
10106750:	90801317 	ldw	r2,76(r18)
10106754:	18c7883a 	add	r3,r3,r3
10106758:	18c7883a 	add	r3,r3,r3
1010675c:	10c5883a 	add	r2,r2,r3
10106760:	10c00017 	ldw	r3,0(r2)
10106764:	88c00015 	stw	r3,0(r17)
10106768:	14400015 	stw	r17,0(r2)
1010676c:	9823883a 	mov	r17,r19
10106770:	003fd806 	br	101066d4 <__alt_data_end+0xfffe66d4>
10106774:	9823883a 	mov	r17,r19
10106778:	003fd606 	br	101066d4 <__alt_data_end+0xfffe66d4>

1010677c <__s2b>:
1010677c:	defff904 	addi	sp,sp,-28
10106780:	dc400115 	stw	r17,4(sp)
10106784:	dc000015 	stw	r16,0(sp)
10106788:	2023883a 	mov	r17,r4
1010678c:	2821883a 	mov	r16,r5
10106790:	39000204 	addi	r4,r7,8
10106794:	01400244 	movi	r5,9
10106798:	dcc00315 	stw	r19,12(sp)
1010679c:	dc800215 	stw	r18,8(sp)
101067a0:	dfc00615 	stw	ra,24(sp)
101067a4:	dd400515 	stw	r21,20(sp)
101067a8:	dd000415 	stw	r20,16(sp)
101067ac:	3825883a 	mov	r18,r7
101067b0:	3027883a 	mov	r19,r6
101067b4:	010a7f80 	call	1010a7f8 <__divsi3>
101067b8:	00c00044 	movi	r3,1
101067bc:	000b883a 	mov	r5,zero
101067c0:	1880030e 	bge	r3,r2,101067d0 <__s2b+0x54>
101067c4:	18c7883a 	add	r3,r3,r3
101067c8:	29400044 	addi	r5,r5,1
101067cc:	18bffd16 	blt	r3,r2,101067c4 <__alt_data_end+0xfffe67c4>
101067d0:	8809883a 	mov	r4,r17
101067d4:	010658c0 	call	1010658c <_Balloc>
101067d8:	d8c00717 	ldw	r3,28(sp)
101067dc:	10c00515 	stw	r3,20(r2)
101067e0:	00c00044 	movi	r3,1
101067e4:	10c00415 	stw	r3,16(r2)
101067e8:	00c00244 	movi	r3,9
101067ec:	1cc0210e 	bge	r3,r19,10106874 <__s2b+0xf8>
101067f0:	80eb883a 	add	r21,r16,r3
101067f4:	a829883a 	mov	r20,r21
101067f8:	84e1883a 	add	r16,r16,r19
101067fc:	a1c00007 	ldb	r7,0(r20)
10106800:	01800284 	movi	r6,10
10106804:	a5000044 	addi	r20,r20,1
10106808:	100b883a 	mov	r5,r2
1010680c:	39fff404 	addi	r7,r7,-48
10106810:	8809883a 	mov	r4,r17
10106814:	010665c0 	call	1010665c <__multadd>
10106818:	a43ff81e 	bne	r20,r16,101067fc <__alt_data_end+0xfffe67fc>
1010681c:	ace1883a 	add	r16,r21,r19
10106820:	843ffe04 	addi	r16,r16,-8
10106824:	9c800a0e 	bge	r19,r18,10106850 <__s2b+0xd4>
10106828:	94e5c83a 	sub	r18,r18,r19
1010682c:	84a5883a 	add	r18,r16,r18
10106830:	81c00007 	ldb	r7,0(r16)
10106834:	01800284 	movi	r6,10
10106838:	84000044 	addi	r16,r16,1
1010683c:	100b883a 	mov	r5,r2
10106840:	39fff404 	addi	r7,r7,-48
10106844:	8809883a 	mov	r4,r17
10106848:	010665c0 	call	1010665c <__multadd>
1010684c:	84bff81e 	bne	r16,r18,10106830 <__alt_data_end+0xfffe6830>
10106850:	dfc00617 	ldw	ra,24(sp)
10106854:	dd400517 	ldw	r21,20(sp)
10106858:	dd000417 	ldw	r20,16(sp)
1010685c:	dcc00317 	ldw	r19,12(sp)
10106860:	dc800217 	ldw	r18,8(sp)
10106864:	dc400117 	ldw	r17,4(sp)
10106868:	dc000017 	ldw	r16,0(sp)
1010686c:	dec00704 	addi	sp,sp,28
10106870:	f800283a 	ret
10106874:	84000284 	addi	r16,r16,10
10106878:	1827883a 	mov	r19,r3
1010687c:	003fe906 	br	10106824 <__alt_data_end+0xfffe6824>

10106880 <__hi0bits>:
10106880:	20bfffec 	andhi	r2,r4,65535
10106884:	1000141e 	bne	r2,zero,101068d8 <__hi0bits+0x58>
10106888:	2008943a 	slli	r4,r4,16
1010688c:	00800404 	movi	r2,16
10106890:	20ffc02c 	andhi	r3,r4,65280
10106894:	1800021e 	bne	r3,zero,101068a0 <__hi0bits+0x20>
10106898:	2008923a 	slli	r4,r4,8
1010689c:	10800204 	addi	r2,r2,8
101068a0:	20fc002c 	andhi	r3,r4,61440
101068a4:	1800021e 	bne	r3,zero,101068b0 <__hi0bits+0x30>
101068a8:	2008913a 	slli	r4,r4,4
101068ac:	10800104 	addi	r2,r2,4
101068b0:	20f0002c 	andhi	r3,r4,49152
101068b4:	1800031e 	bne	r3,zero,101068c4 <__hi0bits+0x44>
101068b8:	2109883a 	add	r4,r4,r4
101068bc:	10800084 	addi	r2,r2,2
101068c0:	2109883a 	add	r4,r4,r4
101068c4:	20000316 	blt	r4,zero,101068d4 <__hi0bits+0x54>
101068c8:	2110002c 	andhi	r4,r4,16384
101068cc:	2000041e 	bne	r4,zero,101068e0 <__hi0bits+0x60>
101068d0:	00800804 	movi	r2,32
101068d4:	f800283a 	ret
101068d8:	0005883a 	mov	r2,zero
101068dc:	003fec06 	br	10106890 <__alt_data_end+0xfffe6890>
101068e0:	10800044 	addi	r2,r2,1
101068e4:	f800283a 	ret

101068e8 <__lo0bits>:
101068e8:	20c00017 	ldw	r3,0(r4)
101068ec:	188001cc 	andi	r2,r3,7
101068f0:	10000826 	beq	r2,zero,10106914 <__lo0bits+0x2c>
101068f4:	1880004c 	andi	r2,r3,1
101068f8:	1000211e 	bne	r2,zero,10106980 <__lo0bits+0x98>
101068fc:	1880008c 	andi	r2,r3,2
10106900:	1000211e 	bne	r2,zero,10106988 <__lo0bits+0xa0>
10106904:	1806d0ba 	srli	r3,r3,2
10106908:	00800084 	movi	r2,2
1010690c:	20c00015 	stw	r3,0(r4)
10106910:	f800283a 	ret
10106914:	18bfffcc 	andi	r2,r3,65535
10106918:	10001326 	beq	r2,zero,10106968 <__lo0bits+0x80>
1010691c:	0005883a 	mov	r2,zero
10106920:	19403fcc 	andi	r5,r3,255
10106924:	2800021e 	bne	r5,zero,10106930 <__lo0bits+0x48>
10106928:	1806d23a 	srli	r3,r3,8
1010692c:	10800204 	addi	r2,r2,8
10106930:	194003cc 	andi	r5,r3,15
10106934:	2800021e 	bne	r5,zero,10106940 <__lo0bits+0x58>
10106938:	1806d13a 	srli	r3,r3,4
1010693c:	10800104 	addi	r2,r2,4
10106940:	194000cc 	andi	r5,r3,3
10106944:	2800021e 	bne	r5,zero,10106950 <__lo0bits+0x68>
10106948:	1806d0ba 	srli	r3,r3,2
1010694c:	10800084 	addi	r2,r2,2
10106950:	1940004c 	andi	r5,r3,1
10106954:	2800081e 	bne	r5,zero,10106978 <__lo0bits+0x90>
10106958:	1806d07a 	srli	r3,r3,1
1010695c:	1800051e 	bne	r3,zero,10106974 <__lo0bits+0x8c>
10106960:	00800804 	movi	r2,32
10106964:	f800283a 	ret
10106968:	1806d43a 	srli	r3,r3,16
1010696c:	00800404 	movi	r2,16
10106970:	003feb06 	br	10106920 <__alt_data_end+0xfffe6920>
10106974:	10800044 	addi	r2,r2,1
10106978:	20c00015 	stw	r3,0(r4)
1010697c:	f800283a 	ret
10106980:	0005883a 	mov	r2,zero
10106984:	f800283a 	ret
10106988:	1806d07a 	srli	r3,r3,1
1010698c:	00800044 	movi	r2,1
10106990:	20c00015 	stw	r3,0(r4)
10106994:	f800283a 	ret

10106998 <__i2b>:
10106998:	defffd04 	addi	sp,sp,-12
1010699c:	dc000015 	stw	r16,0(sp)
101069a0:	04000044 	movi	r16,1
101069a4:	dc400115 	stw	r17,4(sp)
101069a8:	2823883a 	mov	r17,r5
101069ac:	800b883a 	mov	r5,r16
101069b0:	dfc00215 	stw	ra,8(sp)
101069b4:	010658c0 	call	1010658c <_Balloc>
101069b8:	14400515 	stw	r17,20(r2)
101069bc:	14000415 	stw	r16,16(r2)
101069c0:	dfc00217 	ldw	ra,8(sp)
101069c4:	dc400117 	ldw	r17,4(sp)
101069c8:	dc000017 	ldw	r16,0(sp)
101069cc:	dec00304 	addi	sp,sp,12
101069d0:	f800283a 	ret

101069d4 <__multiply>:
101069d4:	defffa04 	addi	sp,sp,-24
101069d8:	dcc00315 	stw	r19,12(sp)
101069dc:	dc800215 	stw	r18,8(sp)
101069e0:	34c00417 	ldw	r19,16(r6)
101069e4:	2c800417 	ldw	r18,16(r5)
101069e8:	dd000415 	stw	r20,16(sp)
101069ec:	dc400115 	stw	r17,4(sp)
101069f0:	dfc00515 	stw	ra,20(sp)
101069f4:	dc000015 	stw	r16,0(sp)
101069f8:	2829883a 	mov	r20,r5
101069fc:	3023883a 	mov	r17,r6
10106a00:	94c0050e 	bge	r18,r19,10106a18 <__multiply+0x44>
10106a04:	9007883a 	mov	r3,r18
10106a08:	3029883a 	mov	r20,r6
10106a0c:	9825883a 	mov	r18,r19
10106a10:	2823883a 	mov	r17,r5
10106a14:	1827883a 	mov	r19,r3
10106a18:	a0800217 	ldw	r2,8(r20)
10106a1c:	94e1883a 	add	r16,r18,r19
10106a20:	a1400117 	ldw	r5,4(r20)
10106a24:	1400010e 	bge	r2,r16,10106a2c <__multiply+0x58>
10106a28:	29400044 	addi	r5,r5,1
10106a2c:	010658c0 	call	1010658c <_Balloc>
10106a30:	8415883a 	add	r10,r16,r16
10106a34:	12c00504 	addi	r11,r2,20
10106a38:	5295883a 	add	r10,r10,r10
10106a3c:	5a95883a 	add	r10,r11,r10
10106a40:	5807883a 	mov	r3,r11
10106a44:	5a80032e 	bgeu	r11,r10,10106a54 <__multiply+0x80>
10106a48:	18000015 	stw	zero,0(r3)
10106a4c:	18c00104 	addi	r3,r3,4
10106a50:	1abffd36 	bltu	r3,r10,10106a48 <__alt_data_end+0xfffe6a48>
10106a54:	9ce7883a 	add	r19,r19,r19
10106a58:	94a5883a 	add	r18,r18,r18
10106a5c:	89800504 	addi	r6,r17,20
10106a60:	9ce7883a 	add	r19,r19,r19
10106a64:	a3400504 	addi	r13,r20,20
10106a68:	94a5883a 	add	r18,r18,r18
10106a6c:	34d9883a 	add	r12,r6,r19
10106a70:	6c93883a 	add	r9,r13,r18
10106a74:	3300422e 	bgeu	r6,r12,10106b80 <__multiply+0x1ac>
10106a78:	37c00017 	ldw	ra,0(r6)
10106a7c:	fbffffcc 	andi	r15,ra,65535
10106a80:	78001b26 	beq	r15,zero,10106af0 <__multiply+0x11c>
10106a84:	5811883a 	mov	r8,r11
10106a88:	681d883a 	mov	r14,r13
10106a8c:	000f883a 	mov	r7,zero
10106a90:	71000017 	ldw	r4,0(r14)
10106a94:	40c00017 	ldw	r3,0(r8)
10106a98:	73800104 	addi	r14,r14,4
10106a9c:	217fffcc 	andi	r5,r4,65535
10106aa0:	2bcb383a 	mul	r5,r5,r15
10106aa4:	2008d43a 	srli	r4,r4,16
10106aa8:	1c7fffcc 	andi	r17,r3,65535
10106aac:	2c4b883a 	add	r5,r5,r17
10106ab0:	29cb883a 	add	r5,r5,r7
10106ab4:	23c9383a 	mul	r4,r4,r15
10106ab8:	1806d43a 	srli	r3,r3,16
10106abc:	280ed43a 	srli	r7,r5,16
10106ac0:	297fffcc 	andi	r5,r5,65535
10106ac4:	20c7883a 	add	r3,r4,r3
10106ac8:	19c7883a 	add	r3,r3,r7
10106acc:	1808943a 	slli	r4,r3,16
10106ad0:	4023883a 	mov	r17,r8
10106ad4:	180ed43a 	srli	r7,r3,16
10106ad8:	214ab03a 	or	r5,r4,r5
10106adc:	41400015 	stw	r5,0(r8)
10106ae0:	42000104 	addi	r8,r8,4
10106ae4:	727fea36 	bltu	r14,r9,10106a90 <__alt_data_end+0xfffe6a90>
10106ae8:	89c00115 	stw	r7,4(r17)
10106aec:	37c00017 	ldw	ra,0(r6)
10106af0:	f83ed43a 	srli	ra,ra,16
10106af4:	f8001f26 	beq	ra,zero,10106b74 <__multiply+0x1a0>
10106af8:	58c00017 	ldw	r3,0(r11)
10106afc:	681d883a 	mov	r14,r13
10106b00:	581f883a 	mov	r15,r11
10106b04:	1811883a 	mov	r8,r3
10106b08:	5825883a 	mov	r18,r11
10106b0c:	000f883a 	mov	r7,zero
10106b10:	00000106 	br	10106b18 <__multiply+0x144>
10106b14:	8825883a 	mov	r18,r17
10106b18:	7140000b 	ldhu	r5,0(r14)
10106b1c:	4010d43a 	srli	r8,r8,16
10106b20:	193fffcc 	andi	r4,r3,65535
10106b24:	2fcb383a 	mul	r5,r5,ra
10106b28:	7bc00104 	addi	r15,r15,4
10106b2c:	73800104 	addi	r14,r14,4
10106b30:	2a0b883a 	add	r5,r5,r8
10106b34:	29cb883a 	add	r5,r5,r7
10106b38:	2806943a 	slli	r3,r5,16
10106b3c:	94400104 	addi	r17,r18,4
10106b40:	280ad43a 	srli	r5,r5,16
10106b44:	1908b03a 	or	r4,r3,r4
10106b48:	793fff15 	stw	r4,-4(r15)
10106b4c:	70ffff17 	ldw	r3,-4(r14)
10106b50:	8a000017 	ldw	r8,0(r17)
10106b54:	1806d43a 	srli	r3,r3,16
10106b58:	413fffcc 	andi	r4,r8,65535
10106b5c:	1fc7383a 	mul	r3,r3,ra
10106b60:	1907883a 	add	r3,r3,r4
10106b64:	1947883a 	add	r3,r3,r5
10106b68:	180ed43a 	srli	r7,r3,16
10106b6c:	727fe936 	bltu	r14,r9,10106b14 <__alt_data_end+0xfffe6b14>
10106b70:	90c00115 	stw	r3,4(r18)
10106b74:	31800104 	addi	r6,r6,4
10106b78:	5ac00104 	addi	r11,r11,4
10106b7c:	333fbe36 	bltu	r6,r12,10106a78 <__alt_data_end+0xfffe6a78>
10106b80:	0400090e 	bge	zero,r16,10106ba8 <__multiply+0x1d4>
10106b84:	50ffff17 	ldw	r3,-4(r10)
10106b88:	52bfff04 	addi	r10,r10,-4
10106b8c:	18000326 	beq	r3,zero,10106b9c <__multiply+0x1c8>
10106b90:	00000506 	br	10106ba8 <__multiply+0x1d4>
10106b94:	50c00017 	ldw	r3,0(r10)
10106b98:	1800031e 	bne	r3,zero,10106ba8 <__multiply+0x1d4>
10106b9c:	843fffc4 	addi	r16,r16,-1
10106ba0:	52bfff04 	addi	r10,r10,-4
10106ba4:	803ffb1e 	bne	r16,zero,10106b94 <__alt_data_end+0xfffe6b94>
10106ba8:	14000415 	stw	r16,16(r2)
10106bac:	dfc00517 	ldw	ra,20(sp)
10106bb0:	dd000417 	ldw	r20,16(sp)
10106bb4:	dcc00317 	ldw	r19,12(sp)
10106bb8:	dc800217 	ldw	r18,8(sp)
10106bbc:	dc400117 	ldw	r17,4(sp)
10106bc0:	dc000017 	ldw	r16,0(sp)
10106bc4:	dec00604 	addi	sp,sp,24
10106bc8:	f800283a 	ret

10106bcc <__pow5mult>:
10106bcc:	defffa04 	addi	sp,sp,-24
10106bd0:	dcc00315 	stw	r19,12(sp)
10106bd4:	dc000015 	stw	r16,0(sp)
10106bd8:	dfc00515 	stw	ra,20(sp)
10106bdc:	dd000415 	stw	r20,16(sp)
10106be0:	dc800215 	stw	r18,8(sp)
10106be4:	dc400115 	stw	r17,4(sp)
10106be8:	308000cc 	andi	r2,r6,3
10106bec:	3021883a 	mov	r16,r6
10106bf0:	2027883a 	mov	r19,r4
10106bf4:	10002f1e 	bne	r2,zero,10106cb4 <__pow5mult+0xe8>
10106bf8:	2825883a 	mov	r18,r5
10106bfc:	8021d0ba 	srai	r16,r16,2
10106c00:	80001a26 	beq	r16,zero,10106c6c <__pow5mult+0xa0>
10106c04:	9c401217 	ldw	r17,72(r19)
10106c08:	8800061e 	bne	r17,zero,10106c24 <__pow5mult+0x58>
10106c0c:	00003406 	br	10106ce0 <__pow5mult+0x114>
10106c10:	8021d07a 	srai	r16,r16,1
10106c14:	80001526 	beq	r16,zero,10106c6c <__pow5mult+0xa0>
10106c18:	88800017 	ldw	r2,0(r17)
10106c1c:	10001c26 	beq	r2,zero,10106c90 <__pow5mult+0xc4>
10106c20:	1023883a 	mov	r17,r2
10106c24:	8080004c 	andi	r2,r16,1
10106c28:	103ff926 	beq	r2,zero,10106c10 <__alt_data_end+0xfffe6c10>
10106c2c:	880d883a 	mov	r6,r17
10106c30:	900b883a 	mov	r5,r18
10106c34:	9809883a 	mov	r4,r19
10106c38:	01069d40 	call	101069d4 <__multiply>
10106c3c:	90001b26 	beq	r18,zero,10106cac <__pow5mult+0xe0>
10106c40:	91000117 	ldw	r4,4(r18)
10106c44:	98c01317 	ldw	r3,76(r19)
10106c48:	8021d07a 	srai	r16,r16,1
10106c4c:	2109883a 	add	r4,r4,r4
10106c50:	2109883a 	add	r4,r4,r4
10106c54:	1907883a 	add	r3,r3,r4
10106c58:	19000017 	ldw	r4,0(r3)
10106c5c:	91000015 	stw	r4,0(r18)
10106c60:	1c800015 	stw	r18,0(r3)
10106c64:	1025883a 	mov	r18,r2
10106c68:	803feb1e 	bne	r16,zero,10106c18 <__alt_data_end+0xfffe6c18>
10106c6c:	9005883a 	mov	r2,r18
10106c70:	dfc00517 	ldw	ra,20(sp)
10106c74:	dd000417 	ldw	r20,16(sp)
10106c78:	dcc00317 	ldw	r19,12(sp)
10106c7c:	dc800217 	ldw	r18,8(sp)
10106c80:	dc400117 	ldw	r17,4(sp)
10106c84:	dc000017 	ldw	r16,0(sp)
10106c88:	dec00604 	addi	sp,sp,24
10106c8c:	f800283a 	ret
10106c90:	880d883a 	mov	r6,r17
10106c94:	880b883a 	mov	r5,r17
10106c98:	9809883a 	mov	r4,r19
10106c9c:	01069d40 	call	101069d4 <__multiply>
10106ca0:	88800015 	stw	r2,0(r17)
10106ca4:	10000015 	stw	zero,0(r2)
10106ca8:	003fdd06 	br	10106c20 <__alt_data_end+0xfffe6c20>
10106cac:	1025883a 	mov	r18,r2
10106cb0:	003fd706 	br	10106c10 <__alt_data_end+0xfffe6c10>
10106cb4:	10bfffc4 	addi	r2,r2,-1
10106cb8:	1085883a 	add	r2,r2,r2
10106cbc:	00c40474 	movhi	r3,4113
10106cc0:	18fdd704 	addi	r3,r3,-2212
10106cc4:	1085883a 	add	r2,r2,r2
10106cc8:	1885883a 	add	r2,r3,r2
10106ccc:	11800017 	ldw	r6,0(r2)
10106cd0:	000f883a 	mov	r7,zero
10106cd4:	010665c0 	call	1010665c <__multadd>
10106cd8:	1025883a 	mov	r18,r2
10106cdc:	003fc706 	br	10106bfc <__alt_data_end+0xfffe6bfc>
10106ce0:	05000044 	movi	r20,1
10106ce4:	a00b883a 	mov	r5,r20
10106ce8:	9809883a 	mov	r4,r19
10106cec:	010658c0 	call	1010658c <_Balloc>
10106cf0:	1023883a 	mov	r17,r2
10106cf4:	00809c44 	movi	r2,625
10106cf8:	88800515 	stw	r2,20(r17)
10106cfc:	8d000415 	stw	r20,16(r17)
10106d00:	9c401215 	stw	r17,72(r19)
10106d04:	88000015 	stw	zero,0(r17)
10106d08:	003fc606 	br	10106c24 <__alt_data_end+0xfffe6c24>

10106d0c <__lshift>:
10106d0c:	defff904 	addi	sp,sp,-28
10106d10:	dd400515 	stw	r21,20(sp)
10106d14:	dcc00315 	stw	r19,12(sp)
10106d18:	302bd17a 	srai	r21,r6,5
10106d1c:	2cc00417 	ldw	r19,16(r5)
10106d20:	28800217 	ldw	r2,8(r5)
10106d24:	dd000415 	stw	r20,16(sp)
10106d28:	ace7883a 	add	r19,r21,r19
10106d2c:	dc800215 	stw	r18,8(sp)
10106d30:	dc400115 	stw	r17,4(sp)
10106d34:	dc000015 	stw	r16,0(sp)
10106d38:	dfc00615 	stw	ra,24(sp)
10106d3c:	9c000044 	addi	r16,r19,1
10106d40:	2823883a 	mov	r17,r5
10106d44:	3029883a 	mov	r20,r6
10106d48:	2025883a 	mov	r18,r4
10106d4c:	29400117 	ldw	r5,4(r5)
10106d50:	1400030e 	bge	r2,r16,10106d60 <__lshift+0x54>
10106d54:	1085883a 	add	r2,r2,r2
10106d58:	29400044 	addi	r5,r5,1
10106d5c:	143ffd16 	blt	r2,r16,10106d54 <__alt_data_end+0xfffe6d54>
10106d60:	9009883a 	mov	r4,r18
10106d64:	010658c0 	call	1010658c <_Balloc>
10106d68:	10c00504 	addi	r3,r2,20
10106d6c:	0540070e 	bge	zero,r21,10106d8c <__lshift+0x80>
10106d70:	ad6b883a 	add	r21,r21,r21
10106d74:	ad6b883a 	add	r21,r21,r21
10106d78:	1809883a 	mov	r4,r3
10106d7c:	1d47883a 	add	r3,r3,r21
10106d80:	20000015 	stw	zero,0(r4)
10106d84:	21000104 	addi	r4,r4,4
10106d88:	193ffd1e 	bne	r3,r4,10106d80 <__alt_data_end+0xfffe6d80>
10106d8c:	8a000417 	ldw	r8,16(r17)
10106d90:	89000504 	addi	r4,r17,20
10106d94:	a18007cc 	andi	r6,r20,31
10106d98:	4211883a 	add	r8,r8,r8
10106d9c:	4211883a 	add	r8,r8,r8
10106da0:	2211883a 	add	r8,r4,r8
10106da4:	30002326 	beq	r6,zero,10106e34 <__lshift+0x128>
10106da8:	02400804 	movi	r9,32
10106dac:	4993c83a 	sub	r9,r9,r6
10106db0:	000b883a 	mov	r5,zero
10106db4:	21c00017 	ldw	r7,0(r4)
10106db8:	1815883a 	mov	r10,r3
10106dbc:	18c00104 	addi	r3,r3,4
10106dc0:	398e983a 	sll	r7,r7,r6
10106dc4:	21000104 	addi	r4,r4,4
10106dc8:	394ab03a 	or	r5,r7,r5
10106dcc:	197fff15 	stw	r5,-4(r3)
10106dd0:	217fff17 	ldw	r5,-4(r4)
10106dd4:	2a4ad83a 	srl	r5,r5,r9
10106dd8:	223ff636 	bltu	r4,r8,10106db4 <__alt_data_end+0xfffe6db4>
10106ddc:	51400115 	stw	r5,4(r10)
10106de0:	28001a1e 	bne	r5,zero,10106e4c <__lshift+0x140>
10106de4:	843fffc4 	addi	r16,r16,-1
10106de8:	14000415 	stw	r16,16(r2)
10106dec:	88000826 	beq	r17,zero,10106e10 <__lshift+0x104>
10106df0:	89000117 	ldw	r4,4(r17)
10106df4:	90c01317 	ldw	r3,76(r18)
10106df8:	2109883a 	add	r4,r4,r4
10106dfc:	2109883a 	add	r4,r4,r4
10106e00:	1907883a 	add	r3,r3,r4
10106e04:	19000017 	ldw	r4,0(r3)
10106e08:	89000015 	stw	r4,0(r17)
10106e0c:	1c400015 	stw	r17,0(r3)
10106e10:	dfc00617 	ldw	ra,24(sp)
10106e14:	dd400517 	ldw	r21,20(sp)
10106e18:	dd000417 	ldw	r20,16(sp)
10106e1c:	dcc00317 	ldw	r19,12(sp)
10106e20:	dc800217 	ldw	r18,8(sp)
10106e24:	dc400117 	ldw	r17,4(sp)
10106e28:	dc000017 	ldw	r16,0(sp)
10106e2c:	dec00704 	addi	sp,sp,28
10106e30:	f800283a 	ret
10106e34:	21400017 	ldw	r5,0(r4)
10106e38:	18c00104 	addi	r3,r3,4
10106e3c:	21000104 	addi	r4,r4,4
10106e40:	197fff15 	stw	r5,-4(r3)
10106e44:	223ffb36 	bltu	r4,r8,10106e34 <__alt_data_end+0xfffe6e34>
10106e48:	003fe606 	br	10106de4 <__alt_data_end+0xfffe6de4>
10106e4c:	9c000084 	addi	r16,r19,2
10106e50:	003fe406 	br	10106de4 <__alt_data_end+0xfffe6de4>

10106e54 <__mcmp>:
10106e54:	20800417 	ldw	r2,16(r4)
10106e58:	28c00417 	ldw	r3,16(r5)
10106e5c:	10c5c83a 	sub	r2,r2,r3
10106e60:	1000111e 	bne	r2,zero,10106ea8 <__mcmp+0x54>
10106e64:	18c7883a 	add	r3,r3,r3
10106e68:	18c7883a 	add	r3,r3,r3
10106e6c:	21000504 	addi	r4,r4,20
10106e70:	29400504 	addi	r5,r5,20
10106e74:	20c5883a 	add	r2,r4,r3
10106e78:	28cb883a 	add	r5,r5,r3
10106e7c:	00000106 	br	10106e84 <__mcmp+0x30>
10106e80:	20800a2e 	bgeu	r4,r2,10106eac <__mcmp+0x58>
10106e84:	10bfff04 	addi	r2,r2,-4
10106e88:	297fff04 	addi	r5,r5,-4
10106e8c:	11800017 	ldw	r6,0(r2)
10106e90:	28c00017 	ldw	r3,0(r5)
10106e94:	30fffa26 	beq	r6,r3,10106e80 <__alt_data_end+0xfffe6e80>
10106e98:	30c00236 	bltu	r6,r3,10106ea4 <__mcmp+0x50>
10106e9c:	00800044 	movi	r2,1
10106ea0:	f800283a 	ret
10106ea4:	00bfffc4 	movi	r2,-1
10106ea8:	f800283a 	ret
10106eac:	0005883a 	mov	r2,zero
10106eb0:	f800283a 	ret

10106eb4 <__mdiff>:
10106eb4:	28c00417 	ldw	r3,16(r5)
10106eb8:	30800417 	ldw	r2,16(r6)
10106ebc:	defffa04 	addi	sp,sp,-24
10106ec0:	dcc00315 	stw	r19,12(sp)
10106ec4:	dc800215 	stw	r18,8(sp)
10106ec8:	dfc00515 	stw	ra,20(sp)
10106ecc:	dd000415 	stw	r20,16(sp)
10106ed0:	dc400115 	stw	r17,4(sp)
10106ed4:	dc000015 	stw	r16,0(sp)
10106ed8:	1887c83a 	sub	r3,r3,r2
10106edc:	2825883a 	mov	r18,r5
10106ee0:	3027883a 	mov	r19,r6
10106ee4:	1800141e 	bne	r3,zero,10106f38 <__mdiff+0x84>
10106ee8:	1085883a 	add	r2,r2,r2
10106eec:	1085883a 	add	r2,r2,r2
10106ef0:	2a000504 	addi	r8,r5,20
10106ef4:	34000504 	addi	r16,r6,20
10106ef8:	4087883a 	add	r3,r8,r2
10106efc:	8085883a 	add	r2,r16,r2
10106f00:	00000106 	br	10106f08 <__mdiff+0x54>
10106f04:	40c0592e 	bgeu	r8,r3,1010706c <__mdiff+0x1b8>
10106f08:	18ffff04 	addi	r3,r3,-4
10106f0c:	10bfff04 	addi	r2,r2,-4
10106f10:	19c00017 	ldw	r7,0(r3)
10106f14:	11400017 	ldw	r5,0(r2)
10106f18:	397ffa26 	beq	r7,r5,10106f04 <__alt_data_end+0xfffe6f04>
10106f1c:	3940592e 	bgeu	r7,r5,10107084 <__mdiff+0x1d0>
10106f20:	9005883a 	mov	r2,r18
10106f24:	4023883a 	mov	r17,r8
10106f28:	9825883a 	mov	r18,r19
10106f2c:	05000044 	movi	r20,1
10106f30:	1027883a 	mov	r19,r2
10106f34:	00000406 	br	10106f48 <__mdiff+0x94>
10106f38:	18005616 	blt	r3,zero,10107094 <__mdiff+0x1e0>
10106f3c:	34400504 	addi	r17,r6,20
10106f40:	2c000504 	addi	r16,r5,20
10106f44:	0029883a 	mov	r20,zero
10106f48:	91400117 	ldw	r5,4(r18)
10106f4c:	010658c0 	call	1010658c <_Balloc>
10106f50:	92400417 	ldw	r9,16(r18)
10106f54:	9b000417 	ldw	r12,16(r19)
10106f58:	12c00504 	addi	r11,r2,20
10106f5c:	4a51883a 	add	r8,r9,r9
10106f60:	6319883a 	add	r12,r12,r12
10106f64:	4211883a 	add	r8,r8,r8
10106f68:	6319883a 	add	r12,r12,r12
10106f6c:	15000315 	stw	r20,12(r2)
10106f70:	8211883a 	add	r8,r16,r8
10106f74:	8b19883a 	add	r12,r17,r12
10106f78:	0007883a 	mov	r3,zero
10106f7c:	81400017 	ldw	r5,0(r16)
10106f80:	89c00017 	ldw	r7,0(r17)
10106f84:	59800104 	addi	r6,r11,4
10106f88:	293fffcc 	andi	r4,r5,65535
10106f8c:	20c7883a 	add	r3,r4,r3
10106f90:	393fffcc 	andi	r4,r7,65535
10106f94:	1909c83a 	sub	r4,r3,r4
10106f98:	280ad43a 	srli	r5,r5,16
10106f9c:	380ed43a 	srli	r7,r7,16
10106fa0:	2007d43a 	srai	r3,r4,16
10106fa4:	213fffcc 	andi	r4,r4,65535
10106fa8:	29cbc83a 	sub	r5,r5,r7
10106fac:	28c7883a 	add	r3,r5,r3
10106fb0:	180a943a 	slli	r5,r3,16
10106fb4:	8c400104 	addi	r17,r17,4
10106fb8:	84000104 	addi	r16,r16,4
10106fbc:	2908b03a 	or	r4,r5,r4
10106fc0:	59000015 	stw	r4,0(r11)
10106fc4:	1807d43a 	srai	r3,r3,16
10106fc8:	3015883a 	mov	r10,r6
10106fcc:	3017883a 	mov	r11,r6
10106fd0:	8b3fea36 	bltu	r17,r12,10106f7c <__alt_data_end+0xfffe6f7c>
10106fd4:	8200162e 	bgeu	r16,r8,10107030 <__mdiff+0x17c>
10106fd8:	8017883a 	mov	r11,r16
10106fdc:	59400017 	ldw	r5,0(r11)
10106fe0:	31800104 	addi	r6,r6,4
10106fe4:	5ac00104 	addi	r11,r11,4
10106fe8:	293fffcc 	andi	r4,r5,65535
10106fec:	20c7883a 	add	r3,r4,r3
10106ff0:	280ed43a 	srli	r7,r5,16
10106ff4:	180bd43a 	srai	r5,r3,16
10106ff8:	193fffcc 	andi	r4,r3,65535
10106ffc:	3947883a 	add	r3,r7,r5
10107000:	180a943a 	slli	r5,r3,16
10107004:	1807d43a 	srai	r3,r3,16
10107008:	2908b03a 	or	r4,r5,r4
1010700c:	313fff15 	stw	r4,-4(r6)
10107010:	5a3ff236 	bltu	r11,r8,10106fdc <__alt_data_end+0xfffe6fdc>
10107014:	0406303a 	nor	r3,zero,r16
10107018:	1a07883a 	add	r3,r3,r8
1010701c:	1806d0ba 	srli	r3,r3,2
10107020:	18c00044 	addi	r3,r3,1
10107024:	18c7883a 	add	r3,r3,r3
10107028:	18c7883a 	add	r3,r3,r3
1010702c:	50d5883a 	add	r10,r10,r3
10107030:	50ffff04 	addi	r3,r10,-4
10107034:	2000041e 	bne	r4,zero,10107048 <__mdiff+0x194>
10107038:	18ffff04 	addi	r3,r3,-4
1010703c:	19000017 	ldw	r4,0(r3)
10107040:	4a7fffc4 	addi	r9,r9,-1
10107044:	203ffc26 	beq	r4,zero,10107038 <__alt_data_end+0xfffe7038>
10107048:	12400415 	stw	r9,16(r2)
1010704c:	dfc00517 	ldw	ra,20(sp)
10107050:	dd000417 	ldw	r20,16(sp)
10107054:	dcc00317 	ldw	r19,12(sp)
10107058:	dc800217 	ldw	r18,8(sp)
1010705c:	dc400117 	ldw	r17,4(sp)
10107060:	dc000017 	ldw	r16,0(sp)
10107064:	dec00604 	addi	sp,sp,24
10107068:	f800283a 	ret
1010706c:	000b883a 	mov	r5,zero
10107070:	010658c0 	call	1010658c <_Balloc>
10107074:	00c00044 	movi	r3,1
10107078:	10c00415 	stw	r3,16(r2)
1010707c:	10000515 	stw	zero,20(r2)
10107080:	003ff206 	br	1010704c <__alt_data_end+0xfffe704c>
10107084:	8023883a 	mov	r17,r16
10107088:	0029883a 	mov	r20,zero
1010708c:	4021883a 	mov	r16,r8
10107090:	003fad06 	br	10106f48 <__alt_data_end+0xfffe6f48>
10107094:	9005883a 	mov	r2,r18
10107098:	94400504 	addi	r17,r18,20
1010709c:	9c000504 	addi	r16,r19,20
101070a0:	9825883a 	mov	r18,r19
101070a4:	05000044 	movi	r20,1
101070a8:	1027883a 	mov	r19,r2
101070ac:	003fa606 	br	10106f48 <__alt_data_end+0xfffe6f48>

101070b0 <__ulp>:
101070b0:	295ffc2c 	andhi	r5,r5,32752
101070b4:	00bf3034 	movhi	r2,64704
101070b8:	2887883a 	add	r3,r5,r2
101070bc:	00c0020e 	bge	zero,r3,101070c8 <__ulp+0x18>
101070c0:	0005883a 	mov	r2,zero
101070c4:	f800283a 	ret
101070c8:	00c7c83a 	sub	r3,zero,r3
101070cc:	1807d53a 	srai	r3,r3,20
101070d0:	008004c4 	movi	r2,19
101070d4:	10c00b0e 	bge	r2,r3,10107104 <__ulp+0x54>
101070d8:	18bffb04 	addi	r2,r3,-20
101070dc:	01000784 	movi	r4,30
101070e0:	0007883a 	mov	r3,zero
101070e4:	20800516 	blt	r4,r2,101070fc <__ulp+0x4c>
101070e8:	010007c4 	movi	r4,31
101070ec:	2089c83a 	sub	r4,r4,r2
101070f0:	00800044 	movi	r2,1
101070f4:	1104983a 	sll	r2,r2,r4
101070f8:	f800283a 	ret
101070fc:	00800044 	movi	r2,1
10107100:	f800283a 	ret
10107104:	01400234 	movhi	r5,8
10107108:	28c7d83a 	sra	r3,r5,r3
1010710c:	0005883a 	mov	r2,zero
10107110:	f800283a 	ret

10107114 <__b2d>:
10107114:	defffa04 	addi	sp,sp,-24
10107118:	dc000015 	stw	r16,0(sp)
1010711c:	24000417 	ldw	r16,16(r4)
10107120:	dc400115 	stw	r17,4(sp)
10107124:	24400504 	addi	r17,r4,20
10107128:	8421883a 	add	r16,r16,r16
1010712c:	8421883a 	add	r16,r16,r16
10107130:	8c21883a 	add	r16,r17,r16
10107134:	dc800215 	stw	r18,8(sp)
10107138:	84bfff17 	ldw	r18,-4(r16)
1010713c:	dd000415 	stw	r20,16(sp)
10107140:	dcc00315 	stw	r19,12(sp)
10107144:	9009883a 	mov	r4,r18
10107148:	2829883a 	mov	r20,r5
1010714c:	dfc00515 	stw	ra,20(sp)
10107150:	01068800 	call	10106880 <__hi0bits>
10107154:	00c00804 	movi	r3,32
10107158:	1889c83a 	sub	r4,r3,r2
1010715c:	a1000015 	stw	r4,0(r20)
10107160:	01000284 	movi	r4,10
10107164:	84ffff04 	addi	r19,r16,-4
10107168:	20801216 	blt	r4,r2,101071b4 <__b2d+0xa0>
1010716c:	018002c4 	movi	r6,11
10107170:	308dc83a 	sub	r6,r6,r2
10107174:	9186d83a 	srl	r3,r18,r6
10107178:	18cffc34 	orhi	r3,r3,16368
1010717c:	8cc0212e 	bgeu	r17,r19,10107204 <__b2d+0xf0>
10107180:	813ffe17 	ldw	r4,-8(r16)
10107184:	218cd83a 	srl	r6,r4,r6
10107188:	10800544 	addi	r2,r2,21
1010718c:	9084983a 	sll	r2,r18,r2
10107190:	1184b03a 	or	r2,r2,r6
10107194:	dfc00517 	ldw	ra,20(sp)
10107198:	dd000417 	ldw	r20,16(sp)
1010719c:	dcc00317 	ldw	r19,12(sp)
101071a0:	dc800217 	ldw	r18,8(sp)
101071a4:	dc400117 	ldw	r17,4(sp)
101071a8:	dc000017 	ldw	r16,0(sp)
101071ac:	dec00604 	addi	sp,sp,24
101071b0:	f800283a 	ret
101071b4:	8cc00f2e 	bgeu	r17,r19,101071f4 <__b2d+0xe0>
101071b8:	117ffd44 	addi	r5,r2,-11
101071bc:	80bffe17 	ldw	r2,-8(r16)
101071c0:	28000e26 	beq	r5,zero,101071fc <__b2d+0xe8>
101071c4:	1949c83a 	sub	r4,r3,r5
101071c8:	9164983a 	sll	r18,r18,r5
101071cc:	1106d83a 	srl	r3,r2,r4
101071d0:	81bffe04 	addi	r6,r16,-8
101071d4:	948ffc34 	orhi	r18,r18,16368
101071d8:	90c6b03a 	or	r3,r18,r3
101071dc:	89800e2e 	bgeu	r17,r6,10107218 <__b2d+0x104>
101071e0:	81bffd17 	ldw	r6,-12(r16)
101071e4:	1144983a 	sll	r2,r2,r5
101071e8:	310ad83a 	srl	r5,r6,r4
101071ec:	2884b03a 	or	r2,r5,r2
101071f0:	003fe806 	br	10107194 <__alt_data_end+0xfffe7194>
101071f4:	10bffd44 	addi	r2,r2,-11
101071f8:	1000041e 	bne	r2,zero,1010720c <__b2d+0xf8>
101071fc:	90cffc34 	orhi	r3,r18,16368
10107200:	003fe406 	br	10107194 <__alt_data_end+0xfffe7194>
10107204:	000d883a 	mov	r6,zero
10107208:	003fdf06 	br	10107188 <__alt_data_end+0xfffe7188>
1010720c:	90a4983a 	sll	r18,r18,r2
10107210:	0005883a 	mov	r2,zero
10107214:	003ff906 	br	101071fc <__alt_data_end+0xfffe71fc>
10107218:	1144983a 	sll	r2,r2,r5
1010721c:	003fdd06 	br	10107194 <__alt_data_end+0xfffe7194>

10107220 <__d2b>:
10107220:	defff804 	addi	sp,sp,-32
10107224:	dc000215 	stw	r16,8(sp)
10107228:	3021883a 	mov	r16,r6
1010722c:	dc400315 	stw	r17,12(sp)
10107230:	8022907a 	slli	r17,r16,1
10107234:	dd000615 	stw	r20,24(sp)
10107238:	2829883a 	mov	r20,r5
1010723c:	01400044 	movi	r5,1
10107240:	dcc00515 	stw	r19,20(sp)
10107244:	dc800415 	stw	r18,16(sp)
10107248:	dfc00715 	stw	ra,28(sp)
1010724c:	3825883a 	mov	r18,r7
10107250:	8822d57a 	srli	r17,r17,21
10107254:	010658c0 	call	1010658c <_Balloc>
10107258:	1027883a 	mov	r19,r2
1010725c:	00800434 	movhi	r2,16
10107260:	10bfffc4 	addi	r2,r2,-1
10107264:	808c703a 	and	r6,r16,r2
10107268:	88000126 	beq	r17,zero,10107270 <__d2b+0x50>
1010726c:	31800434 	orhi	r6,r6,16
10107270:	d9800015 	stw	r6,0(sp)
10107274:	a0002426 	beq	r20,zero,10107308 <__d2b+0xe8>
10107278:	d9000104 	addi	r4,sp,4
1010727c:	dd000115 	stw	r20,4(sp)
10107280:	01068e80 	call	101068e8 <__lo0bits>
10107284:	d8c00017 	ldw	r3,0(sp)
10107288:	10002f1e 	bne	r2,zero,10107348 <__d2b+0x128>
1010728c:	d9000117 	ldw	r4,4(sp)
10107290:	99000515 	stw	r4,20(r19)
10107294:	1821003a 	cmpeq	r16,r3,zero
10107298:	01000084 	movi	r4,2
1010729c:	2421c83a 	sub	r16,r4,r16
101072a0:	98c00615 	stw	r3,24(r19)
101072a4:	9c000415 	stw	r16,16(r19)
101072a8:	88001f1e 	bne	r17,zero,10107328 <__d2b+0x108>
101072ac:	10bef384 	addi	r2,r2,-1074
101072b0:	90800015 	stw	r2,0(r18)
101072b4:	00900034 	movhi	r2,16384
101072b8:	10bfffc4 	addi	r2,r2,-1
101072bc:	8085883a 	add	r2,r16,r2
101072c0:	1085883a 	add	r2,r2,r2
101072c4:	1085883a 	add	r2,r2,r2
101072c8:	9885883a 	add	r2,r19,r2
101072cc:	11000517 	ldw	r4,20(r2)
101072d0:	8020917a 	slli	r16,r16,5
101072d4:	01068800 	call	10106880 <__hi0bits>
101072d8:	d8c00817 	ldw	r3,32(sp)
101072dc:	8085c83a 	sub	r2,r16,r2
101072e0:	18800015 	stw	r2,0(r3)
101072e4:	9805883a 	mov	r2,r19
101072e8:	dfc00717 	ldw	ra,28(sp)
101072ec:	dd000617 	ldw	r20,24(sp)
101072f0:	dcc00517 	ldw	r19,20(sp)
101072f4:	dc800417 	ldw	r18,16(sp)
101072f8:	dc400317 	ldw	r17,12(sp)
101072fc:	dc000217 	ldw	r16,8(sp)
10107300:	dec00804 	addi	sp,sp,32
10107304:	f800283a 	ret
10107308:	d809883a 	mov	r4,sp
1010730c:	01068e80 	call	101068e8 <__lo0bits>
10107310:	d8c00017 	ldw	r3,0(sp)
10107314:	04000044 	movi	r16,1
10107318:	9c000415 	stw	r16,16(r19)
1010731c:	98c00515 	stw	r3,20(r19)
10107320:	10800804 	addi	r2,r2,32
10107324:	883fe126 	beq	r17,zero,101072ac <__alt_data_end+0xfffe72ac>
10107328:	00c00d44 	movi	r3,53
1010732c:	8c7ef344 	addi	r17,r17,-1075
10107330:	88a3883a 	add	r17,r17,r2
10107334:	1885c83a 	sub	r2,r3,r2
10107338:	d8c00817 	ldw	r3,32(sp)
1010733c:	94400015 	stw	r17,0(r18)
10107340:	18800015 	stw	r2,0(r3)
10107344:	003fe706 	br	101072e4 <__alt_data_end+0xfffe72e4>
10107348:	01000804 	movi	r4,32
1010734c:	2089c83a 	sub	r4,r4,r2
10107350:	1908983a 	sll	r4,r3,r4
10107354:	d9400117 	ldw	r5,4(sp)
10107358:	1886d83a 	srl	r3,r3,r2
1010735c:	2148b03a 	or	r4,r4,r5
10107360:	99000515 	stw	r4,20(r19)
10107364:	d8c00015 	stw	r3,0(sp)
10107368:	003fca06 	br	10107294 <__alt_data_end+0xfffe7294>

1010736c <__ratio>:
1010736c:	defff904 	addi	sp,sp,-28
10107370:	dc400315 	stw	r17,12(sp)
10107374:	2823883a 	mov	r17,r5
10107378:	d9400104 	addi	r5,sp,4
1010737c:	dfc00615 	stw	ra,24(sp)
10107380:	dcc00515 	stw	r19,20(sp)
10107384:	dc800415 	stw	r18,16(sp)
10107388:	2027883a 	mov	r19,r4
1010738c:	dc000215 	stw	r16,8(sp)
10107390:	01071140 	call	10107114 <__b2d>
10107394:	d80b883a 	mov	r5,sp
10107398:	8809883a 	mov	r4,r17
1010739c:	1025883a 	mov	r18,r2
101073a0:	1821883a 	mov	r16,r3
101073a4:	01071140 	call	10107114 <__b2d>
101073a8:	8a000417 	ldw	r8,16(r17)
101073ac:	99000417 	ldw	r4,16(r19)
101073b0:	d9400117 	ldw	r5,4(sp)
101073b4:	2209c83a 	sub	r4,r4,r8
101073b8:	2010917a 	slli	r8,r4,5
101073bc:	d9000017 	ldw	r4,0(sp)
101073c0:	2909c83a 	sub	r4,r5,r4
101073c4:	4109883a 	add	r4,r8,r4
101073c8:	01000e0e 	bge	zero,r4,10107404 <__ratio+0x98>
101073cc:	2008953a 	slli	r4,r4,20
101073d0:	2421883a 	add	r16,r4,r16
101073d4:	100d883a 	mov	r6,r2
101073d8:	180f883a 	mov	r7,r3
101073dc:	9009883a 	mov	r4,r18
101073e0:	800b883a 	mov	r5,r16
101073e4:	010b2580 	call	1010b258 <__divdf3>
101073e8:	dfc00617 	ldw	ra,24(sp)
101073ec:	dcc00517 	ldw	r19,20(sp)
101073f0:	dc800417 	ldw	r18,16(sp)
101073f4:	dc400317 	ldw	r17,12(sp)
101073f8:	dc000217 	ldw	r16,8(sp)
101073fc:	dec00704 	addi	sp,sp,28
10107400:	f800283a 	ret
10107404:	2008953a 	slli	r4,r4,20
10107408:	1907c83a 	sub	r3,r3,r4
1010740c:	003ff106 	br	101073d4 <__alt_data_end+0xfffe73d4>

10107410 <_mprec_log10>:
10107410:	defffe04 	addi	sp,sp,-8
10107414:	dc000015 	stw	r16,0(sp)
10107418:	dfc00115 	stw	ra,4(sp)
1010741c:	008005c4 	movi	r2,23
10107420:	2021883a 	mov	r16,r4
10107424:	11000d0e 	bge	r2,r4,1010745c <_mprec_log10+0x4c>
10107428:	0005883a 	mov	r2,zero
1010742c:	00cffc34 	movhi	r3,16368
10107430:	843fffc4 	addi	r16,r16,-1
10107434:	000d883a 	mov	r6,zero
10107438:	01d00934 	movhi	r7,16420
1010743c:	1009883a 	mov	r4,r2
10107440:	180b883a 	mov	r5,r3
10107444:	010bd980 	call	1010bd98 <__muldf3>
10107448:	803ff91e 	bne	r16,zero,10107430 <__alt_data_end+0xfffe7430>
1010744c:	dfc00117 	ldw	ra,4(sp)
10107450:	dc000017 	ldw	r16,0(sp)
10107454:	dec00204 	addi	sp,sp,8
10107458:	f800283a 	ret
1010745c:	202090fa 	slli	r16,r4,3
10107460:	00840474 	movhi	r2,4113
10107464:	10bdee04 	addi	r2,r2,-2120
10107468:	1421883a 	add	r16,r2,r16
1010746c:	80800017 	ldw	r2,0(r16)
10107470:	80c00117 	ldw	r3,4(r16)
10107474:	dfc00117 	ldw	ra,4(sp)
10107478:	dc000017 	ldw	r16,0(sp)
1010747c:	dec00204 	addi	sp,sp,8
10107480:	f800283a 	ret

10107484 <__copybits>:
10107484:	297fffc4 	addi	r5,r5,-1
10107488:	280fd17a 	srai	r7,r5,5
1010748c:	30c00417 	ldw	r3,16(r6)
10107490:	30800504 	addi	r2,r6,20
10107494:	39c00044 	addi	r7,r7,1
10107498:	18c7883a 	add	r3,r3,r3
1010749c:	39cf883a 	add	r7,r7,r7
101074a0:	18c7883a 	add	r3,r3,r3
101074a4:	39cf883a 	add	r7,r7,r7
101074a8:	10c7883a 	add	r3,r2,r3
101074ac:	21cf883a 	add	r7,r4,r7
101074b0:	10c00d2e 	bgeu	r2,r3,101074e8 <__copybits+0x64>
101074b4:	200b883a 	mov	r5,r4
101074b8:	12000017 	ldw	r8,0(r2)
101074bc:	29400104 	addi	r5,r5,4
101074c0:	10800104 	addi	r2,r2,4
101074c4:	2a3fff15 	stw	r8,-4(r5)
101074c8:	10fffb36 	bltu	r2,r3,101074b8 <__alt_data_end+0xfffe74b8>
101074cc:	1985c83a 	sub	r2,r3,r6
101074d0:	10bffac4 	addi	r2,r2,-21
101074d4:	1004d0ba 	srli	r2,r2,2
101074d8:	10800044 	addi	r2,r2,1
101074dc:	1085883a 	add	r2,r2,r2
101074e0:	1085883a 	add	r2,r2,r2
101074e4:	2089883a 	add	r4,r4,r2
101074e8:	21c0032e 	bgeu	r4,r7,101074f8 <__copybits+0x74>
101074ec:	20000015 	stw	zero,0(r4)
101074f0:	21000104 	addi	r4,r4,4
101074f4:	21fffd36 	bltu	r4,r7,101074ec <__alt_data_end+0xfffe74ec>
101074f8:	f800283a 	ret

101074fc <__any_on>:
101074fc:	20c00417 	ldw	r3,16(r4)
10107500:	2805d17a 	srai	r2,r5,5
10107504:	21000504 	addi	r4,r4,20
10107508:	18800d0e 	bge	r3,r2,10107540 <__any_on+0x44>
1010750c:	18c7883a 	add	r3,r3,r3
10107510:	18c7883a 	add	r3,r3,r3
10107514:	20c7883a 	add	r3,r4,r3
10107518:	20c0192e 	bgeu	r4,r3,10107580 <__any_on+0x84>
1010751c:	18bfff17 	ldw	r2,-4(r3)
10107520:	18ffff04 	addi	r3,r3,-4
10107524:	1000041e 	bne	r2,zero,10107538 <__any_on+0x3c>
10107528:	20c0142e 	bgeu	r4,r3,1010757c <__any_on+0x80>
1010752c:	18ffff04 	addi	r3,r3,-4
10107530:	19400017 	ldw	r5,0(r3)
10107534:	283ffc26 	beq	r5,zero,10107528 <__alt_data_end+0xfffe7528>
10107538:	00800044 	movi	r2,1
1010753c:	f800283a 	ret
10107540:	10c00a0e 	bge	r2,r3,1010756c <__any_on+0x70>
10107544:	1085883a 	add	r2,r2,r2
10107548:	1085883a 	add	r2,r2,r2
1010754c:	294007cc 	andi	r5,r5,31
10107550:	2087883a 	add	r3,r4,r2
10107554:	283ff026 	beq	r5,zero,10107518 <__alt_data_end+0xfffe7518>
10107558:	19800017 	ldw	r6,0(r3)
1010755c:	3144d83a 	srl	r2,r6,r5
10107560:	114a983a 	sll	r5,r2,r5
10107564:	317ff41e 	bne	r6,r5,10107538 <__alt_data_end+0xfffe7538>
10107568:	003feb06 	br	10107518 <__alt_data_end+0xfffe7518>
1010756c:	1085883a 	add	r2,r2,r2
10107570:	1085883a 	add	r2,r2,r2
10107574:	2087883a 	add	r3,r4,r2
10107578:	003fe706 	br	10107518 <__alt_data_end+0xfffe7518>
1010757c:	f800283a 	ret
10107580:	0005883a 	mov	r2,zero
10107584:	f800283a 	ret

10107588 <_realloc_r>:
10107588:	defff604 	addi	sp,sp,-40
1010758c:	dc800215 	stw	r18,8(sp)
10107590:	dfc00915 	stw	ra,36(sp)
10107594:	df000815 	stw	fp,32(sp)
10107598:	ddc00715 	stw	r23,28(sp)
1010759c:	dd800615 	stw	r22,24(sp)
101075a0:	dd400515 	stw	r21,20(sp)
101075a4:	dd000415 	stw	r20,16(sp)
101075a8:	dcc00315 	stw	r19,12(sp)
101075ac:	dc400115 	stw	r17,4(sp)
101075b0:	dc000015 	stw	r16,0(sp)
101075b4:	3025883a 	mov	r18,r6
101075b8:	2800b726 	beq	r5,zero,10107898 <_realloc_r+0x310>
101075bc:	282b883a 	mov	r21,r5
101075c0:	2029883a 	mov	r20,r4
101075c4:	010d5900 	call	1010d590 <__malloc_lock>
101075c8:	a8bfff17 	ldw	r2,-4(r21)
101075cc:	043fff04 	movi	r16,-4
101075d0:	90c002c4 	addi	r3,r18,11
101075d4:	01000584 	movi	r4,22
101075d8:	acfffe04 	addi	r19,r21,-8
101075dc:	1420703a 	and	r16,r2,r16
101075e0:	20c0332e 	bgeu	r4,r3,101076b0 <_realloc_r+0x128>
101075e4:	047ffe04 	movi	r17,-8
101075e8:	1c62703a 	and	r17,r3,r17
101075ec:	8807883a 	mov	r3,r17
101075f0:	88005816 	blt	r17,zero,10107754 <_realloc_r+0x1cc>
101075f4:	8c805736 	bltu	r17,r18,10107754 <_realloc_r+0x1cc>
101075f8:	80c0300e 	bge	r16,r3,101076bc <_realloc_r+0x134>
101075fc:	07040474 	movhi	fp,4113
10107600:	e73f9c04 	addi	fp,fp,-400
10107604:	e1c00217 	ldw	r7,8(fp)
10107608:	9c09883a 	add	r4,r19,r16
1010760c:	22000117 	ldw	r8,4(r4)
10107610:	21c06326 	beq	r4,r7,101077a0 <_realloc_r+0x218>
10107614:	017fff84 	movi	r5,-2
10107618:	414a703a 	and	r5,r8,r5
1010761c:	214b883a 	add	r5,r4,r5
10107620:	29800117 	ldw	r6,4(r5)
10107624:	3180004c 	andi	r6,r6,1
10107628:	30003f26 	beq	r6,zero,10107728 <_realloc_r+0x1a0>
1010762c:	1080004c 	andi	r2,r2,1
10107630:	10008326 	beq	r2,zero,10107840 <_realloc_r+0x2b8>
10107634:	900b883a 	mov	r5,r18
10107638:	a009883a 	mov	r4,r20
1010763c:	01058d00 	call	101058d0 <_malloc_r>
10107640:	1025883a 	mov	r18,r2
10107644:	10011e26 	beq	r2,zero,10107ac0 <_realloc_r+0x538>
10107648:	a93fff17 	ldw	r4,-4(r21)
1010764c:	10fffe04 	addi	r3,r2,-8
10107650:	00bfff84 	movi	r2,-2
10107654:	2084703a 	and	r2,r4,r2
10107658:	9885883a 	add	r2,r19,r2
1010765c:	1880ee26 	beq	r3,r2,10107a18 <_realloc_r+0x490>
10107660:	81bfff04 	addi	r6,r16,-4
10107664:	00800904 	movi	r2,36
10107668:	1180b836 	bltu	r2,r6,1010794c <_realloc_r+0x3c4>
1010766c:	00c004c4 	movi	r3,19
10107670:	19809636 	bltu	r3,r6,101078cc <_realloc_r+0x344>
10107674:	9005883a 	mov	r2,r18
10107678:	a807883a 	mov	r3,r21
1010767c:	19000017 	ldw	r4,0(r3)
10107680:	11000015 	stw	r4,0(r2)
10107684:	19000117 	ldw	r4,4(r3)
10107688:	11000115 	stw	r4,4(r2)
1010768c:	18c00217 	ldw	r3,8(r3)
10107690:	10c00215 	stw	r3,8(r2)
10107694:	a80b883a 	mov	r5,r21
10107698:	a009883a 	mov	r4,r20
1010769c:	0104ce40 	call	10104ce4 <_free_r>
101076a0:	a009883a 	mov	r4,r20
101076a4:	010d5b40 	call	1010d5b4 <__malloc_unlock>
101076a8:	9005883a 	mov	r2,r18
101076ac:	00001206 	br	101076f8 <_realloc_r+0x170>
101076b0:	00c00404 	movi	r3,16
101076b4:	1823883a 	mov	r17,r3
101076b8:	003fce06 	br	101075f4 <__alt_data_end+0xfffe75f4>
101076bc:	a825883a 	mov	r18,r21
101076c0:	8445c83a 	sub	r2,r16,r17
101076c4:	00c003c4 	movi	r3,15
101076c8:	18802636 	bltu	r3,r2,10107764 <_realloc_r+0x1dc>
101076cc:	99800117 	ldw	r6,4(r19)
101076d0:	9c07883a 	add	r3,r19,r16
101076d4:	3180004c 	andi	r6,r6,1
101076d8:	3420b03a 	or	r16,r6,r16
101076dc:	9c000115 	stw	r16,4(r19)
101076e0:	18800117 	ldw	r2,4(r3)
101076e4:	10800054 	ori	r2,r2,1
101076e8:	18800115 	stw	r2,4(r3)
101076ec:	a009883a 	mov	r4,r20
101076f0:	010d5b40 	call	1010d5b4 <__malloc_unlock>
101076f4:	9005883a 	mov	r2,r18
101076f8:	dfc00917 	ldw	ra,36(sp)
101076fc:	df000817 	ldw	fp,32(sp)
10107700:	ddc00717 	ldw	r23,28(sp)
10107704:	dd800617 	ldw	r22,24(sp)
10107708:	dd400517 	ldw	r21,20(sp)
1010770c:	dd000417 	ldw	r20,16(sp)
10107710:	dcc00317 	ldw	r19,12(sp)
10107714:	dc800217 	ldw	r18,8(sp)
10107718:	dc400117 	ldw	r17,4(sp)
1010771c:	dc000017 	ldw	r16,0(sp)
10107720:	dec00a04 	addi	sp,sp,40
10107724:	f800283a 	ret
10107728:	017fff04 	movi	r5,-4
1010772c:	414a703a 	and	r5,r8,r5
10107730:	814d883a 	add	r6,r16,r5
10107734:	30c01f16 	blt	r6,r3,101077b4 <_realloc_r+0x22c>
10107738:	20800317 	ldw	r2,12(r4)
1010773c:	20c00217 	ldw	r3,8(r4)
10107740:	a825883a 	mov	r18,r21
10107744:	3021883a 	mov	r16,r6
10107748:	18800315 	stw	r2,12(r3)
1010774c:	10c00215 	stw	r3,8(r2)
10107750:	003fdb06 	br	101076c0 <__alt_data_end+0xfffe76c0>
10107754:	00800304 	movi	r2,12
10107758:	a0800015 	stw	r2,0(r20)
1010775c:	0005883a 	mov	r2,zero
10107760:	003fe506 	br	101076f8 <__alt_data_end+0xfffe76f8>
10107764:	98c00117 	ldw	r3,4(r19)
10107768:	9c4b883a 	add	r5,r19,r17
1010776c:	11000054 	ori	r4,r2,1
10107770:	18c0004c 	andi	r3,r3,1
10107774:	1c62b03a 	or	r17,r3,r17
10107778:	9c400115 	stw	r17,4(r19)
1010777c:	29000115 	stw	r4,4(r5)
10107780:	2885883a 	add	r2,r5,r2
10107784:	10c00117 	ldw	r3,4(r2)
10107788:	29400204 	addi	r5,r5,8
1010778c:	a009883a 	mov	r4,r20
10107790:	18c00054 	ori	r3,r3,1
10107794:	10c00115 	stw	r3,4(r2)
10107798:	0104ce40 	call	10104ce4 <_free_r>
1010779c:	003fd306 	br	101076ec <__alt_data_end+0xfffe76ec>
101077a0:	017fff04 	movi	r5,-4
101077a4:	414a703a 	and	r5,r8,r5
101077a8:	89800404 	addi	r6,r17,16
101077ac:	8151883a 	add	r8,r16,r5
101077b0:	4180590e 	bge	r8,r6,10107918 <_realloc_r+0x390>
101077b4:	1080004c 	andi	r2,r2,1
101077b8:	103f9e1e 	bne	r2,zero,10107634 <__alt_data_end+0xfffe7634>
101077bc:	adbffe17 	ldw	r22,-8(r21)
101077c0:	00bfff04 	movi	r2,-4
101077c4:	9dadc83a 	sub	r22,r19,r22
101077c8:	b1800117 	ldw	r6,4(r22)
101077cc:	3084703a 	and	r2,r6,r2
101077d0:	20002026 	beq	r4,zero,10107854 <_realloc_r+0x2cc>
101077d4:	80af883a 	add	r23,r16,r2
101077d8:	b96f883a 	add	r23,r23,r5
101077dc:	21c05f26 	beq	r4,r7,1010795c <_realloc_r+0x3d4>
101077e0:	b8c01c16 	blt	r23,r3,10107854 <_realloc_r+0x2cc>
101077e4:	20800317 	ldw	r2,12(r4)
101077e8:	20c00217 	ldw	r3,8(r4)
101077ec:	81bfff04 	addi	r6,r16,-4
101077f0:	01000904 	movi	r4,36
101077f4:	18800315 	stw	r2,12(r3)
101077f8:	10c00215 	stw	r3,8(r2)
101077fc:	b0c00217 	ldw	r3,8(r22)
10107800:	b0800317 	ldw	r2,12(r22)
10107804:	b4800204 	addi	r18,r22,8
10107808:	18800315 	stw	r2,12(r3)
1010780c:	10c00215 	stw	r3,8(r2)
10107810:	21801b36 	bltu	r4,r6,10107880 <_realloc_r+0x2f8>
10107814:	008004c4 	movi	r2,19
10107818:	1180352e 	bgeu	r2,r6,101078f0 <_realloc_r+0x368>
1010781c:	a8800017 	ldw	r2,0(r21)
10107820:	b0800215 	stw	r2,8(r22)
10107824:	a8800117 	ldw	r2,4(r21)
10107828:	b0800315 	stw	r2,12(r22)
1010782c:	008006c4 	movi	r2,27
10107830:	11807f36 	bltu	r2,r6,10107a30 <_realloc_r+0x4a8>
10107834:	b0800404 	addi	r2,r22,16
10107838:	ad400204 	addi	r21,r21,8
1010783c:	00002d06 	br	101078f4 <_realloc_r+0x36c>
10107840:	adbffe17 	ldw	r22,-8(r21)
10107844:	00bfff04 	movi	r2,-4
10107848:	9dadc83a 	sub	r22,r19,r22
1010784c:	b1000117 	ldw	r4,4(r22)
10107850:	2084703a 	and	r2,r4,r2
10107854:	b03f7726 	beq	r22,zero,10107634 <__alt_data_end+0xfffe7634>
10107858:	80af883a 	add	r23,r16,r2
1010785c:	b8ff7516 	blt	r23,r3,10107634 <__alt_data_end+0xfffe7634>
10107860:	b0800317 	ldw	r2,12(r22)
10107864:	b0c00217 	ldw	r3,8(r22)
10107868:	81bfff04 	addi	r6,r16,-4
1010786c:	01000904 	movi	r4,36
10107870:	18800315 	stw	r2,12(r3)
10107874:	10c00215 	stw	r3,8(r2)
10107878:	b4800204 	addi	r18,r22,8
1010787c:	21bfe52e 	bgeu	r4,r6,10107814 <__alt_data_end+0xfffe7814>
10107880:	a80b883a 	mov	r5,r21
10107884:	9009883a 	mov	r4,r18
10107888:	01063080 	call	10106308 <memmove>
1010788c:	b821883a 	mov	r16,r23
10107890:	b027883a 	mov	r19,r22
10107894:	003f8a06 	br	101076c0 <__alt_data_end+0xfffe76c0>
10107898:	300b883a 	mov	r5,r6
1010789c:	dfc00917 	ldw	ra,36(sp)
101078a0:	df000817 	ldw	fp,32(sp)
101078a4:	ddc00717 	ldw	r23,28(sp)
101078a8:	dd800617 	ldw	r22,24(sp)
101078ac:	dd400517 	ldw	r21,20(sp)
101078b0:	dd000417 	ldw	r20,16(sp)
101078b4:	dcc00317 	ldw	r19,12(sp)
101078b8:	dc800217 	ldw	r18,8(sp)
101078bc:	dc400117 	ldw	r17,4(sp)
101078c0:	dc000017 	ldw	r16,0(sp)
101078c4:	dec00a04 	addi	sp,sp,40
101078c8:	01058d01 	jmpi	101058d0 <_malloc_r>
101078cc:	a8c00017 	ldw	r3,0(r21)
101078d0:	90c00015 	stw	r3,0(r18)
101078d4:	a8c00117 	ldw	r3,4(r21)
101078d8:	90c00115 	stw	r3,4(r18)
101078dc:	00c006c4 	movi	r3,27
101078e0:	19804536 	bltu	r3,r6,101079f8 <_realloc_r+0x470>
101078e4:	90800204 	addi	r2,r18,8
101078e8:	a8c00204 	addi	r3,r21,8
101078ec:	003f6306 	br	1010767c <__alt_data_end+0xfffe767c>
101078f0:	9005883a 	mov	r2,r18
101078f4:	a8c00017 	ldw	r3,0(r21)
101078f8:	b821883a 	mov	r16,r23
101078fc:	b027883a 	mov	r19,r22
10107900:	10c00015 	stw	r3,0(r2)
10107904:	a8c00117 	ldw	r3,4(r21)
10107908:	10c00115 	stw	r3,4(r2)
1010790c:	a8c00217 	ldw	r3,8(r21)
10107910:	10c00215 	stw	r3,8(r2)
10107914:	003f6a06 	br	101076c0 <__alt_data_end+0xfffe76c0>
10107918:	9c67883a 	add	r19,r19,r17
1010791c:	4445c83a 	sub	r2,r8,r17
10107920:	e4c00215 	stw	r19,8(fp)
10107924:	10800054 	ori	r2,r2,1
10107928:	98800115 	stw	r2,4(r19)
1010792c:	a8bfff17 	ldw	r2,-4(r21)
10107930:	a009883a 	mov	r4,r20
10107934:	1080004c 	andi	r2,r2,1
10107938:	1462b03a 	or	r17,r2,r17
1010793c:	ac7fff15 	stw	r17,-4(r21)
10107940:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10107944:	a805883a 	mov	r2,r21
10107948:	003f6b06 	br	101076f8 <__alt_data_end+0xfffe76f8>
1010794c:	a80b883a 	mov	r5,r21
10107950:	9009883a 	mov	r4,r18
10107954:	01063080 	call	10106308 <memmove>
10107958:	003f4e06 	br	10107694 <__alt_data_end+0xfffe7694>
1010795c:	89000404 	addi	r4,r17,16
10107960:	b93fbc16 	blt	r23,r4,10107854 <__alt_data_end+0xfffe7854>
10107964:	b0800317 	ldw	r2,12(r22)
10107968:	b0c00217 	ldw	r3,8(r22)
1010796c:	81bfff04 	addi	r6,r16,-4
10107970:	01000904 	movi	r4,36
10107974:	18800315 	stw	r2,12(r3)
10107978:	10c00215 	stw	r3,8(r2)
1010797c:	b4800204 	addi	r18,r22,8
10107980:	21804336 	bltu	r4,r6,10107a90 <_realloc_r+0x508>
10107984:	008004c4 	movi	r2,19
10107988:	11803f2e 	bgeu	r2,r6,10107a88 <_realloc_r+0x500>
1010798c:	a8800017 	ldw	r2,0(r21)
10107990:	b0800215 	stw	r2,8(r22)
10107994:	a8800117 	ldw	r2,4(r21)
10107998:	b0800315 	stw	r2,12(r22)
1010799c:	008006c4 	movi	r2,27
101079a0:	11803f36 	bltu	r2,r6,10107aa0 <_realloc_r+0x518>
101079a4:	b0800404 	addi	r2,r22,16
101079a8:	ad400204 	addi	r21,r21,8
101079ac:	a8c00017 	ldw	r3,0(r21)
101079b0:	10c00015 	stw	r3,0(r2)
101079b4:	a8c00117 	ldw	r3,4(r21)
101079b8:	10c00115 	stw	r3,4(r2)
101079bc:	a8c00217 	ldw	r3,8(r21)
101079c0:	10c00215 	stw	r3,8(r2)
101079c4:	b447883a 	add	r3,r22,r17
101079c8:	bc45c83a 	sub	r2,r23,r17
101079cc:	e0c00215 	stw	r3,8(fp)
101079d0:	10800054 	ori	r2,r2,1
101079d4:	18800115 	stw	r2,4(r3)
101079d8:	b0800117 	ldw	r2,4(r22)
101079dc:	a009883a 	mov	r4,r20
101079e0:	1080004c 	andi	r2,r2,1
101079e4:	1462b03a 	or	r17,r2,r17
101079e8:	b4400115 	stw	r17,4(r22)
101079ec:	010d5b40 	call	1010d5b4 <__malloc_unlock>
101079f0:	9005883a 	mov	r2,r18
101079f4:	003f4006 	br	101076f8 <__alt_data_end+0xfffe76f8>
101079f8:	a8c00217 	ldw	r3,8(r21)
101079fc:	90c00215 	stw	r3,8(r18)
10107a00:	a8c00317 	ldw	r3,12(r21)
10107a04:	90c00315 	stw	r3,12(r18)
10107a08:	30801126 	beq	r6,r2,10107a50 <_realloc_r+0x4c8>
10107a0c:	90800404 	addi	r2,r18,16
10107a10:	a8c00404 	addi	r3,r21,16
10107a14:	003f1906 	br	1010767c <__alt_data_end+0xfffe767c>
10107a18:	90ffff17 	ldw	r3,-4(r18)
10107a1c:	00bfff04 	movi	r2,-4
10107a20:	a825883a 	mov	r18,r21
10107a24:	1884703a 	and	r2,r3,r2
10107a28:	80a1883a 	add	r16,r16,r2
10107a2c:	003f2406 	br	101076c0 <__alt_data_end+0xfffe76c0>
10107a30:	a8800217 	ldw	r2,8(r21)
10107a34:	b0800415 	stw	r2,16(r22)
10107a38:	a8800317 	ldw	r2,12(r21)
10107a3c:	b0800515 	stw	r2,20(r22)
10107a40:	31000a26 	beq	r6,r4,10107a6c <_realloc_r+0x4e4>
10107a44:	b0800604 	addi	r2,r22,24
10107a48:	ad400404 	addi	r21,r21,16
10107a4c:	003fa906 	br	101078f4 <__alt_data_end+0xfffe78f4>
10107a50:	a9000417 	ldw	r4,16(r21)
10107a54:	90800604 	addi	r2,r18,24
10107a58:	a8c00604 	addi	r3,r21,24
10107a5c:	91000415 	stw	r4,16(r18)
10107a60:	a9000517 	ldw	r4,20(r21)
10107a64:	91000515 	stw	r4,20(r18)
10107a68:	003f0406 	br	1010767c <__alt_data_end+0xfffe767c>
10107a6c:	a8c00417 	ldw	r3,16(r21)
10107a70:	ad400604 	addi	r21,r21,24
10107a74:	b0800804 	addi	r2,r22,32
10107a78:	b0c00615 	stw	r3,24(r22)
10107a7c:	a8ffff17 	ldw	r3,-4(r21)
10107a80:	b0c00715 	stw	r3,28(r22)
10107a84:	003f9b06 	br	101078f4 <__alt_data_end+0xfffe78f4>
10107a88:	9005883a 	mov	r2,r18
10107a8c:	003fc706 	br	101079ac <__alt_data_end+0xfffe79ac>
10107a90:	a80b883a 	mov	r5,r21
10107a94:	9009883a 	mov	r4,r18
10107a98:	01063080 	call	10106308 <memmove>
10107a9c:	003fc906 	br	101079c4 <__alt_data_end+0xfffe79c4>
10107aa0:	a8800217 	ldw	r2,8(r21)
10107aa4:	b0800415 	stw	r2,16(r22)
10107aa8:	a8800317 	ldw	r2,12(r21)
10107aac:	b0800515 	stw	r2,20(r22)
10107ab0:	31000726 	beq	r6,r4,10107ad0 <_realloc_r+0x548>
10107ab4:	b0800604 	addi	r2,r22,24
10107ab8:	ad400404 	addi	r21,r21,16
10107abc:	003fbb06 	br	101079ac <__alt_data_end+0xfffe79ac>
10107ac0:	a009883a 	mov	r4,r20
10107ac4:	010d5b40 	call	1010d5b4 <__malloc_unlock>
10107ac8:	0005883a 	mov	r2,zero
10107acc:	003f0a06 	br	101076f8 <__alt_data_end+0xfffe76f8>
10107ad0:	a8c00417 	ldw	r3,16(r21)
10107ad4:	ad400604 	addi	r21,r21,24
10107ad8:	b0800804 	addi	r2,r22,32
10107adc:	b0c00615 	stw	r3,24(r22)
10107ae0:	a8ffff17 	ldw	r3,-4(r21)
10107ae4:	b0c00715 	stw	r3,28(r22)
10107ae8:	003fb006 	br	101079ac <__alt_data_end+0xfffe79ac>

10107aec <__fpclassifyd>:
10107aec:	00a00034 	movhi	r2,32768
10107af0:	10bfffc4 	addi	r2,r2,-1
10107af4:	2884703a 	and	r2,r5,r2
10107af8:	10000726 	beq	r2,zero,10107b18 <__fpclassifyd+0x2c>
10107afc:	00fffc34 	movhi	r3,65520
10107b00:	019ff834 	movhi	r6,32736
10107b04:	28c7883a 	add	r3,r5,r3
10107b08:	31bfffc4 	addi	r6,r6,-1
10107b0c:	30c00536 	bltu	r6,r3,10107b24 <__fpclassifyd+0x38>
10107b10:	00800104 	movi	r2,4
10107b14:	f800283a 	ret
10107b18:	2000021e 	bne	r4,zero,10107b24 <__fpclassifyd+0x38>
10107b1c:	00800084 	movi	r2,2
10107b20:	f800283a 	ret
10107b24:	00dffc34 	movhi	r3,32752
10107b28:	019ff834 	movhi	r6,32736
10107b2c:	28cb883a 	add	r5,r5,r3
10107b30:	31bfffc4 	addi	r6,r6,-1
10107b34:	317ff62e 	bgeu	r6,r5,10107b10 <__alt_data_end+0xfffe7b10>
10107b38:	01400434 	movhi	r5,16
10107b3c:	297fffc4 	addi	r5,r5,-1
10107b40:	28800236 	bltu	r5,r2,10107b4c <__fpclassifyd+0x60>
10107b44:	008000c4 	movi	r2,3
10107b48:	f800283a 	ret
10107b4c:	10c00226 	beq	r2,r3,10107b58 <__fpclassifyd+0x6c>
10107b50:	0005883a 	mov	r2,zero
10107b54:	f800283a 	ret
10107b58:	2005003a 	cmpeq	r2,r4,zero
10107b5c:	f800283a 	ret

10107b60 <_sbrk_r>:
10107b60:	defffd04 	addi	sp,sp,-12
10107b64:	dc000015 	stw	r16,0(sp)
10107b68:	04040474 	movhi	r16,4113
10107b6c:	dc400115 	stw	r17,4(sp)
10107b70:	840bf104 	addi	r16,r16,12228
10107b74:	2023883a 	mov	r17,r4
10107b78:	2809883a 	mov	r4,r5
10107b7c:	dfc00215 	stw	ra,8(sp)
10107b80:	80000015 	stw	zero,0(r16)
10107b84:	010d7740 	call	1010d774 <sbrk>
10107b88:	00ffffc4 	movi	r3,-1
10107b8c:	10c00526 	beq	r2,r3,10107ba4 <_sbrk_r+0x44>
10107b90:	dfc00217 	ldw	ra,8(sp)
10107b94:	dc400117 	ldw	r17,4(sp)
10107b98:	dc000017 	ldw	r16,0(sp)
10107b9c:	dec00304 	addi	sp,sp,12
10107ba0:	f800283a 	ret
10107ba4:	80c00017 	ldw	r3,0(r16)
10107ba8:	183ff926 	beq	r3,zero,10107b90 <__alt_data_end+0xfffe7b90>
10107bac:	88c00015 	stw	r3,0(r17)
10107bb0:	003ff706 	br	10107b90 <__alt_data_end+0xfffe7b90>

10107bb4 <__sread>:
10107bb4:	defffe04 	addi	sp,sp,-8
10107bb8:	dc000015 	stw	r16,0(sp)
10107bbc:	2821883a 	mov	r16,r5
10107bc0:	2940038f 	ldh	r5,14(r5)
10107bc4:	dfc00115 	stw	ra,4(sp)
10107bc8:	01099a80 	call	101099a8 <_read_r>
10107bcc:	10000716 	blt	r2,zero,10107bec <__sread+0x38>
10107bd0:	80c01417 	ldw	r3,80(r16)
10107bd4:	1887883a 	add	r3,r3,r2
10107bd8:	80c01415 	stw	r3,80(r16)
10107bdc:	dfc00117 	ldw	ra,4(sp)
10107be0:	dc000017 	ldw	r16,0(sp)
10107be4:	dec00204 	addi	sp,sp,8
10107be8:	f800283a 	ret
10107bec:	80c0030b 	ldhu	r3,12(r16)
10107bf0:	18fbffcc 	andi	r3,r3,61439
10107bf4:	80c0030d 	sth	r3,12(r16)
10107bf8:	dfc00117 	ldw	ra,4(sp)
10107bfc:	dc000017 	ldw	r16,0(sp)
10107c00:	dec00204 	addi	sp,sp,8
10107c04:	f800283a 	ret

10107c08 <__seofread>:
10107c08:	0005883a 	mov	r2,zero
10107c0c:	f800283a 	ret

10107c10 <__swrite>:
10107c10:	2880030b 	ldhu	r2,12(r5)
10107c14:	defffb04 	addi	sp,sp,-20
10107c18:	dcc00315 	stw	r19,12(sp)
10107c1c:	dc800215 	stw	r18,8(sp)
10107c20:	dc400115 	stw	r17,4(sp)
10107c24:	dc000015 	stw	r16,0(sp)
10107c28:	dfc00415 	stw	ra,16(sp)
10107c2c:	10c0400c 	andi	r3,r2,256
10107c30:	2821883a 	mov	r16,r5
10107c34:	2023883a 	mov	r17,r4
10107c38:	3025883a 	mov	r18,r6
10107c3c:	3827883a 	mov	r19,r7
10107c40:	18000526 	beq	r3,zero,10107c58 <__swrite+0x48>
10107c44:	2940038f 	ldh	r5,14(r5)
10107c48:	01c00084 	movi	r7,2
10107c4c:	000d883a 	mov	r6,zero
10107c50:	01099480 	call	10109948 <_lseek_r>
10107c54:	8080030b 	ldhu	r2,12(r16)
10107c58:	8140038f 	ldh	r5,14(r16)
10107c5c:	10bbffcc 	andi	r2,r2,61439
10107c60:	980f883a 	mov	r7,r19
10107c64:	900d883a 	mov	r6,r18
10107c68:	8809883a 	mov	r4,r17
10107c6c:	8080030d 	sth	r2,12(r16)
10107c70:	dfc00417 	ldw	ra,16(sp)
10107c74:	dcc00317 	ldw	r19,12(sp)
10107c78:	dc800217 	ldw	r18,8(sp)
10107c7c:	dc400117 	ldw	r17,4(sp)
10107c80:	dc000017 	ldw	r16,0(sp)
10107c84:	dec00504 	addi	sp,sp,20
10107c88:	01094141 	jmpi	10109414 <_write_r>

10107c8c <__sseek>:
10107c8c:	defffe04 	addi	sp,sp,-8
10107c90:	dc000015 	stw	r16,0(sp)
10107c94:	2821883a 	mov	r16,r5
10107c98:	2940038f 	ldh	r5,14(r5)
10107c9c:	dfc00115 	stw	ra,4(sp)
10107ca0:	01099480 	call	10109948 <_lseek_r>
10107ca4:	00ffffc4 	movi	r3,-1
10107ca8:	10c00826 	beq	r2,r3,10107ccc <__sseek+0x40>
10107cac:	80c0030b 	ldhu	r3,12(r16)
10107cb0:	80801415 	stw	r2,80(r16)
10107cb4:	18c40014 	ori	r3,r3,4096
10107cb8:	80c0030d 	sth	r3,12(r16)
10107cbc:	dfc00117 	ldw	ra,4(sp)
10107cc0:	dc000017 	ldw	r16,0(sp)
10107cc4:	dec00204 	addi	sp,sp,8
10107cc8:	f800283a 	ret
10107ccc:	80c0030b 	ldhu	r3,12(r16)
10107cd0:	18fbffcc 	andi	r3,r3,61439
10107cd4:	80c0030d 	sth	r3,12(r16)
10107cd8:	dfc00117 	ldw	ra,4(sp)
10107cdc:	dc000017 	ldw	r16,0(sp)
10107ce0:	dec00204 	addi	sp,sp,8
10107ce4:	f800283a 	ret

10107ce8 <__sclose>:
10107ce8:	2940038f 	ldh	r5,14(r5)
10107cec:	01094741 	jmpi	10109474 <_close_r>

10107cf0 <strcmp>:
10107cf0:	2144b03a 	or	r2,r4,r5
10107cf4:	108000cc 	andi	r2,r2,3
10107cf8:	1000171e 	bne	r2,zero,10107d58 <strcmp+0x68>
10107cfc:	20800017 	ldw	r2,0(r4)
10107d00:	28c00017 	ldw	r3,0(r5)
10107d04:	10c0141e 	bne	r2,r3,10107d58 <strcmp+0x68>
10107d08:	027fbff4 	movhi	r9,65279
10107d0c:	4a7fbfc4 	addi	r9,r9,-257
10107d10:	0086303a 	nor	r3,zero,r2
10107d14:	02202074 	movhi	r8,32897
10107d18:	1245883a 	add	r2,r2,r9
10107d1c:	42202004 	addi	r8,r8,-32640
10107d20:	10c4703a 	and	r2,r2,r3
10107d24:	1204703a 	and	r2,r2,r8
10107d28:	10000226 	beq	r2,zero,10107d34 <strcmp+0x44>
10107d2c:	00002306 	br	10107dbc <strcmp+0xcc>
10107d30:	1000221e 	bne	r2,zero,10107dbc <strcmp+0xcc>
10107d34:	21000104 	addi	r4,r4,4
10107d38:	20c00017 	ldw	r3,0(r4)
10107d3c:	29400104 	addi	r5,r5,4
10107d40:	29800017 	ldw	r6,0(r5)
10107d44:	1a4f883a 	add	r7,r3,r9
10107d48:	00c4303a 	nor	r2,zero,r3
10107d4c:	3884703a 	and	r2,r7,r2
10107d50:	1204703a 	and	r2,r2,r8
10107d54:	19bff626 	beq	r3,r6,10107d30 <__alt_data_end+0xfffe7d30>
10107d58:	20800003 	ldbu	r2,0(r4)
10107d5c:	10c03fcc 	andi	r3,r2,255
10107d60:	18c0201c 	xori	r3,r3,128
10107d64:	18ffe004 	addi	r3,r3,-128
10107d68:	18000c26 	beq	r3,zero,10107d9c <strcmp+0xac>
10107d6c:	29800007 	ldb	r6,0(r5)
10107d70:	19800326 	beq	r3,r6,10107d80 <strcmp+0x90>
10107d74:	00001306 	br	10107dc4 <strcmp+0xd4>
10107d78:	29800007 	ldb	r6,0(r5)
10107d7c:	11800b1e 	bne	r2,r6,10107dac <strcmp+0xbc>
10107d80:	21000044 	addi	r4,r4,1
10107d84:	20c00003 	ldbu	r3,0(r4)
10107d88:	29400044 	addi	r5,r5,1
10107d8c:	18803fcc 	andi	r2,r3,255
10107d90:	1080201c 	xori	r2,r2,128
10107d94:	10bfe004 	addi	r2,r2,-128
10107d98:	103ff71e 	bne	r2,zero,10107d78 <__alt_data_end+0xfffe7d78>
10107d9c:	0007883a 	mov	r3,zero
10107da0:	28800003 	ldbu	r2,0(r5)
10107da4:	1885c83a 	sub	r2,r3,r2
10107da8:	f800283a 	ret
10107dac:	28800003 	ldbu	r2,0(r5)
10107db0:	18c03fcc 	andi	r3,r3,255
10107db4:	1885c83a 	sub	r2,r3,r2
10107db8:	f800283a 	ret
10107dbc:	0005883a 	mov	r2,zero
10107dc0:	f800283a 	ret
10107dc4:	10c03fcc 	andi	r3,r2,255
10107dc8:	003ff506 	br	10107da0 <__alt_data_end+0xfffe7da0>

10107dcc <__sprint_r.part.0>:
10107dcc:	28801917 	ldw	r2,100(r5)
10107dd0:	defff604 	addi	sp,sp,-40
10107dd4:	dd400515 	stw	r21,20(sp)
10107dd8:	dfc00915 	stw	ra,36(sp)
10107ddc:	df000815 	stw	fp,32(sp)
10107de0:	ddc00715 	stw	r23,28(sp)
10107de4:	dd800615 	stw	r22,24(sp)
10107de8:	dd000415 	stw	r20,16(sp)
10107dec:	dcc00315 	stw	r19,12(sp)
10107df0:	dc800215 	stw	r18,8(sp)
10107df4:	dc400115 	stw	r17,4(sp)
10107df8:	dc000015 	stw	r16,0(sp)
10107dfc:	1088000c 	andi	r2,r2,8192
10107e00:	302b883a 	mov	r21,r6
10107e04:	10002e26 	beq	r2,zero,10107ec0 <__sprint_r.part.0+0xf4>
10107e08:	30800217 	ldw	r2,8(r6)
10107e0c:	35800017 	ldw	r22,0(r6)
10107e10:	10002926 	beq	r2,zero,10107eb8 <__sprint_r.part.0+0xec>
10107e14:	2827883a 	mov	r19,r5
10107e18:	2029883a 	mov	r20,r4
10107e1c:	b5c00104 	addi	r23,r22,4
10107e20:	04bfffc4 	movi	r18,-1
10107e24:	bc400017 	ldw	r17,0(r23)
10107e28:	b4000017 	ldw	r16,0(r22)
10107e2c:	0039883a 	mov	fp,zero
10107e30:	8822d0ba 	srli	r17,r17,2
10107e34:	8800031e 	bne	r17,zero,10107e44 <__sprint_r.part.0+0x78>
10107e38:	00001806 	br	10107e9c <__sprint_r.part.0+0xd0>
10107e3c:	84000104 	addi	r16,r16,4
10107e40:	8f001526 	beq	r17,fp,10107e98 <__sprint_r.part.0+0xcc>
10107e44:	81400017 	ldw	r5,0(r16)
10107e48:	980d883a 	mov	r6,r19
10107e4c:	a009883a 	mov	r4,r20
10107e50:	01097f40 	call	101097f4 <_fputwc_r>
10107e54:	e7000044 	addi	fp,fp,1
10107e58:	14bff81e 	bne	r2,r18,10107e3c <__alt_data_end+0xfffe7e3c>
10107e5c:	9005883a 	mov	r2,r18
10107e60:	a8000215 	stw	zero,8(r21)
10107e64:	a8000115 	stw	zero,4(r21)
10107e68:	dfc00917 	ldw	ra,36(sp)
10107e6c:	df000817 	ldw	fp,32(sp)
10107e70:	ddc00717 	ldw	r23,28(sp)
10107e74:	dd800617 	ldw	r22,24(sp)
10107e78:	dd400517 	ldw	r21,20(sp)
10107e7c:	dd000417 	ldw	r20,16(sp)
10107e80:	dcc00317 	ldw	r19,12(sp)
10107e84:	dc800217 	ldw	r18,8(sp)
10107e88:	dc400117 	ldw	r17,4(sp)
10107e8c:	dc000017 	ldw	r16,0(sp)
10107e90:	dec00a04 	addi	sp,sp,40
10107e94:	f800283a 	ret
10107e98:	a8800217 	ldw	r2,8(r21)
10107e9c:	8c63883a 	add	r17,r17,r17
10107ea0:	8c63883a 	add	r17,r17,r17
10107ea4:	1445c83a 	sub	r2,r2,r17
10107ea8:	a8800215 	stw	r2,8(r21)
10107eac:	b5800204 	addi	r22,r22,8
10107eb0:	bdc00204 	addi	r23,r23,8
10107eb4:	103fdb1e 	bne	r2,zero,10107e24 <__alt_data_end+0xfffe7e24>
10107eb8:	0005883a 	mov	r2,zero
10107ebc:	003fe806 	br	10107e60 <__alt_data_end+0xfffe7e60>
10107ec0:	0104ff40 	call	10104ff4 <__sfvwrite_r>
10107ec4:	003fe606 	br	10107e60 <__alt_data_end+0xfffe7e60>

10107ec8 <__sprint_r>:
10107ec8:	30c00217 	ldw	r3,8(r6)
10107ecc:	18000126 	beq	r3,zero,10107ed4 <__sprint_r+0xc>
10107ed0:	0107dcc1 	jmpi	10107dcc <__sprint_r.part.0>
10107ed4:	30000115 	stw	zero,4(r6)
10107ed8:	0005883a 	mov	r2,zero
10107edc:	f800283a 	ret

10107ee0 <___vfiprintf_internal_r>:
10107ee0:	deffc904 	addi	sp,sp,-220
10107ee4:	df003515 	stw	fp,212(sp)
10107ee8:	dd003115 	stw	r20,196(sp)
10107eec:	dfc03615 	stw	ra,216(sp)
10107ef0:	ddc03415 	stw	r23,208(sp)
10107ef4:	dd803315 	stw	r22,204(sp)
10107ef8:	dd403215 	stw	r21,200(sp)
10107efc:	dcc03015 	stw	r19,192(sp)
10107f00:	dc802f15 	stw	r18,188(sp)
10107f04:	dc402e15 	stw	r17,184(sp)
10107f08:	dc002d15 	stw	r16,180(sp)
10107f0c:	d9002015 	stw	r4,128(sp)
10107f10:	d9c02215 	stw	r7,136(sp)
10107f14:	2829883a 	mov	r20,r5
10107f18:	3039883a 	mov	fp,r6
10107f1c:	20000226 	beq	r4,zero,10107f28 <___vfiprintf_internal_r+0x48>
10107f20:	20800e17 	ldw	r2,56(r4)
10107f24:	1000cf26 	beq	r2,zero,10108264 <___vfiprintf_internal_r+0x384>
10107f28:	a080030b 	ldhu	r2,12(r20)
10107f2c:	10c8000c 	andi	r3,r2,8192
10107f30:	1800061e 	bne	r3,zero,10107f4c <___vfiprintf_internal_r+0x6c>
10107f34:	a1001917 	ldw	r4,100(r20)
10107f38:	00f7ffc4 	movi	r3,-8193
10107f3c:	10880014 	ori	r2,r2,8192
10107f40:	20c6703a 	and	r3,r4,r3
10107f44:	a080030d 	sth	r2,12(r20)
10107f48:	a0c01915 	stw	r3,100(r20)
10107f4c:	10c0020c 	andi	r3,r2,8
10107f50:	1800a926 	beq	r3,zero,101081f8 <___vfiprintf_internal_r+0x318>
10107f54:	a0c00417 	ldw	r3,16(r20)
10107f58:	1800a726 	beq	r3,zero,101081f8 <___vfiprintf_internal_r+0x318>
10107f5c:	1080068c 	andi	r2,r2,26
10107f60:	00c00284 	movi	r3,10
10107f64:	10c0ac26 	beq	r2,r3,10108218 <___vfiprintf_internal_r+0x338>
10107f68:	da801a04 	addi	r10,sp,104
10107f6c:	da801e15 	stw	r10,120(sp)
10107f70:	d8801e17 	ldw	r2,120(sp)
10107f74:	da8019c4 	addi	r10,sp,103
10107f78:	05840474 	movhi	r22,4113
10107f7c:	05c40474 	movhi	r23,4113
10107f80:	da801f15 	stw	r10,124(sp)
10107f84:	1295c83a 	sub	r10,r2,r10
10107f88:	b5be2404 	addi	r22,r22,-1904
10107f8c:	bdfe2004 	addi	r23,r23,-1920
10107f90:	dec01a15 	stw	sp,104(sp)
10107f94:	d8001c15 	stw	zero,112(sp)
10107f98:	d8001b15 	stw	zero,108(sp)
10107f9c:	d8002615 	stw	zero,152(sp)
10107fa0:	d8002315 	stw	zero,140(sp)
10107fa4:	da802715 	stw	r10,156(sp)
10107fa8:	d811883a 	mov	r8,sp
10107fac:	dd002115 	stw	r20,132(sp)
10107fb0:	e021883a 	mov	r16,fp
10107fb4:	80800007 	ldb	r2,0(r16)
10107fb8:	1003ea26 	beq	r2,zero,10108f64 <___vfiprintf_internal_r+0x1084>
10107fbc:	00c00944 	movi	r3,37
10107fc0:	8025883a 	mov	r18,r16
10107fc4:	10c0021e 	bne	r2,r3,10107fd0 <___vfiprintf_internal_r+0xf0>
10107fc8:	00001606 	br	10108024 <___vfiprintf_internal_r+0x144>
10107fcc:	10c00326 	beq	r2,r3,10107fdc <___vfiprintf_internal_r+0xfc>
10107fd0:	94800044 	addi	r18,r18,1
10107fd4:	90800007 	ldb	r2,0(r18)
10107fd8:	103ffc1e 	bne	r2,zero,10107fcc <__alt_data_end+0xfffe7fcc>
10107fdc:	9423c83a 	sub	r17,r18,r16
10107fe0:	88001026 	beq	r17,zero,10108024 <___vfiprintf_internal_r+0x144>
10107fe4:	d8c01c17 	ldw	r3,112(sp)
10107fe8:	d8801b17 	ldw	r2,108(sp)
10107fec:	44000015 	stw	r16,0(r8)
10107ff0:	88c7883a 	add	r3,r17,r3
10107ff4:	10800044 	addi	r2,r2,1
10107ff8:	44400115 	stw	r17,4(r8)
10107ffc:	d8c01c15 	stw	r3,112(sp)
10108000:	d8801b15 	stw	r2,108(sp)
10108004:	010001c4 	movi	r4,7
10108008:	2080760e 	bge	r4,r2,101081e4 <___vfiprintf_internal_r+0x304>
1010800c:	1803821e 	bne	r3,zero,10108e18 <___vfiprintf_internal_r+0xf38>
10108010:	da802317 	ldw	r10,140(sp)
10108014:	d8001b15 	stw	zero,108(sp)
10108018:	d811883a 	mov	r8,sp
1010801c:	5455883a 	add	r10,r10,r17
10108020:	da802315 	stw	r10,140(sp)
10108024:	90800007 	ldb	r2,0(r18)
10108028:	10044626 	beq	r2,zero,10109144 <___vfiprintf_internal_r+0x1264>
1010802c:	90c00047 	ldb	r3,1(r18)
10108030:	94000044 	addi	r16,r18,1
10108034:	d8001d85 	stb	zero,118(sp)
10108038:	0009883a 	mov	r4,zero
1010803c:	000f883a 	mov	r7,zero
10108040:	027fffc4 	movi	r9,-1
10108044:	0023883a 	mov	r17,zero
10108048:	0029883a 	mov	r20,zero
1010804c:	01401604 	movi	r5,88
10108050:	01800244 	movi	r6,9
10108054:	03400a84 	movi	r13,42
10108058:	03001b04 	movi	r12,108
1010805c:	84000044 	addi	r16,r16,1
10108060:	18bff804 	addi	r2,r3,-32
10108064:	28827336 	bltu	r5,r2,10108a34 <___vfiprintf_internal_r+0xb54>
10108068:	100490ba 	slli	r2,r2,2
1010806c:	02840474 	movhi	r10,4113
10108070:	52a02004 	addi	r10,r10,-32640
10108074:	1285883a 	add	r2,r2,r10
10108078:	10800017 	ldw	r2,0(r2)
1010807c:	1000683a 	jmp	r2
10108080:	10108768 	cmpgeui	zero,r2,16925
10108084:	10108a34 	orhi	zero,r2,16936
10108088:	10108a34 	orhi	zero,r2,16936
1010808c:	10108788 	cmpgei	zero,r2,16926
10108090:	10108a34 	orhi	zero,r2,16936
10108094:	10108a34 	orhi	zero,r2,16936
10108098:	10108a34 	orhi	zero,r2,16936
1010809c:	10108a34 	orhi	zero,r2,16936
101080a0:	10108a34 	orhi	zero,r2,16936
101080a4:	10108a34 	orhi	zero,r2,16936
101080a8:	10108970 	cmpltui	zero,r2,16933
101080ac:	1010898c 	andi	zero,r2,16934
101080b0:	10108a34 	orhi	zero,r2,16936
101080b4:	10108274 	orhi	zero,r2,16905
101080b8:	1010899c 	xori	zero,r2,16934
101080bc:	10108a34 	orhi	zero,r2,16936
101080c0:	10108794 	ori	zero,r2,16926
101080c4:	101087a0 	cmpeqi	zero,r2,16926
101080c8:	101087a0 	cmpeqi	zero,r2,16926
101080cc:	101087a0 	cmpeqi	zero,r2,16926
101080d0:	101087a0 	cmpeqi	zero,r2,16926
101080d4:	101087a0 	cmpeqi	zero,r2,16926
101080d8:	101087a0 	cmpeqi	zero,r2,16926
101080dc:	101087a0 	cmpeqi	zero,r2,16926
101080e0:	101087a0 	cmpeqi	zero,r2,16926
101080e4:	101087a0 	cmpeqi	zero,r2,16926
101080e8:	10108a34 	orhi	zero,r2,16936
101080ec:	10108a34 	orhi	zero,r2,16936
101080f0:	10108a34 	orhi	zero,r2,16936
101080f4:	10108a34 	orhi	zero,r2,16936
101080f8:	10108a34 	orhi	zero,r2,16936
101080fc:	10108a34 	orhi	zero,r2,16936
10108100:	10108a34 	orhi	zero,r2,16936
10108104:	10108a34 	orhi	zero,r2,16936
10108108:	10108a34 	orhi	zero,r2,16936
1010810c:	10108a34 	orhi	zero,r2,16936
10108110:	101087cc 	andi	zero,r2,16927
10108114:	10108a34 	orhi	zero,r2,16936
10108118:	10108a34 	orhi	zero,r2,16936
1010811c:	10108a34 	orhi	zero,r2,16936
10108120:	10108a34 	orhi	zero,r2,16936
10108124:	10108a34 	orhi	zero,r2,16936
10108128:	10108a34 	orhi	zero,r2,16936
1010812c:	10108a34 	orhi	zero,r2,16936
10108130:	10108a34 	orhi	zero,r2,16936
10108134:	10108a34 	orhi	zero,r2,16936
10108138:	10108a34 	orhi	zero,r2,16936
1010813c:	10108804 	addi	zero,r2,16928
10108140:	10108a34 	orhi	zero,r2,16936
10108144:	10108a34 	orhi	zero,r2,16936
10108148:	10108a34 	orhi	zero,r2,16936
1010814c:	10108a34 	orhi	zero,r2,16936
10108150:	10108a34 	orhi	zero,r2,16936
10108154:	1010885c 	xori	zero,r2,16929
10108158:	10108a34 	orhi	zero,r2,16936
1010815c:	10108a34 	orhi	zero,r2,16936
10108160:	101088cc 	andi	zero,r2,16931
10108164:	10108a34 	orhi	zero,r2,16936
10108168:	10108a34 	orhi	zero,r2,16936
1010816c:	10108a34 	orhi	zero,r2,16936
10108170:	10108a34 	orhi	zero,r2,16936
10108174:	10108a34 	orhi	zero,r2,16936
10108178:	10108a34 	orhi	zero,r2,16936
1010817c:	10108a34 	orhi	zero,r2,16936
10108180:	10108a34 	orhi	zero,r2,16936
10108184:	10108a34 	orhi	zero,r2,16936
10108188:	10108a34 	orhi	zero,r2,16936
1010818c:	10108678 	rdprs	zero,r2,16921
10108190:	101086a4 	muli	zero,r2,16922
10108194:	10108a34 	orhi	zero,r2,16936
10108198:	10108a34 	orhi	zero,r2,16936
1010819c:	10108a34 	orhi	zero,r2,16936
101081a0:	101089dc 	xori	zero,r2,16935
101081a4:	101086a4 	muli	zero,r2,16922
101081a8:	10108a34 	orhi	zero,r2,16936
101081ac:	10108a34 	orhi	zero,r2,16936
101081b0:	10108538 	rdprs	zero,r2,16916
101081b4:	10108a34 	orhi	zero,r2,16936
101081b8:	10108548 	cmpgei	zero,r2,16917
101081bc:	10108584 	addi	zero,r2,16918
101081c0:	10108280 	call	11010828 <__alt_data_end+0xef0828>
101081c4:	1010852c 	andhi	zero,r2,16916
101081c8:	10108a34 	orhi	zero,r2,16936
101081cc:	10108908 	cmpgei	zero,r2,16932
101081d0:	10108a34 	orhi	zero,r2,16936
101081d4:	10108960 	cmpeqi	zero,r2,16933
101081d8:	10108a34 	orhi	zero,r2,16936
101081dc:	10108a34 	orhi	zero,r2,16936
101081e0:	10108624 	muli	zero,r2,16920
101081e4:	42000204 	addi	r8,r8,8
101081e8:	da802317 	ldw	r10,140(sp)
101081ec:	5455883a 	add	r10,r10,r17
101081f0:	da802315 	stw	r10,140(sp)
101081f4:	003f8b06 	br	10108024 <__alt_data_end+0xfffe8024>
101081f8:	d9002017 	ldw	r4,128(sp)
101081fc:	a00b883a 	mov	r5,r20
10108200:	0102b9c0 	call	10102b9c <__swsetup_r>
10108204:	1003b11e 	bne	r2,zero,101090cc <___vfiprintf_internal_r+0x11ec>
10108208:	a080030b 	ldhu	r2,12(r20)
1010820c:	00c00284 	movi	r3,10
10108210:	1080068c 	andi	r2,r2,26
10108214:	10ff541e 	bne	r2,r3,10107f68 <__alt_data_end+0xfffe7f68>
10108218:	a080038f 	ldh	r2,14(r20)
1010821c:	103f5216 	blt	r2,zero,10107f68 <__alt_data_end+0xfffe7f68>
10108220:	d9c02217 	ldw	r7,136(sp)
10108224:	d9002017 	ldw	r4,128(sp)
10108228:	e00d883a 	mov	r6,fp
1010822c:	a00b883a 	mov	r5,r20
10108230:	01093580 	call	10109358 <__sbprintf>
10108234:	dfc03617 	ldw	ra,216(sp)
10108238:	df003517 	ldw	fp,212(sp)
1010823c:	ddc03417 	ldw	r23,208(sp)
10108240:	dd803317 	ldw	r22,204(sp)
10108244:	dd403217 	ldw	r21,200(sp)
10108248:	dd003117 	ldw	r20,196(sp)
1010824c:	dcc03017 	ldw	r19,192(sp)
10108250:	dc802f17 	ldw	r18,188(sp)
10108254:	dc402e17 	ldw	r17,184(sp)
10108258:	dc002d17 	ldw	r16,180(sp)
1010825c:	dec03704 	addi	sp,sp,220
10108260:	f800283a 	ret
10108264:	0104b700 	call	10104b70 <__sinit>
10108268:	003f2f06 	br	10107f28 <__alt_data_end+0xfffe7f28>
1010826c:	0463c83a 	sub	r17,zero,r17
10108270:	d8802215 	stw	r2,136(sp)
10108274:	a5000114 	ori	r20,r20,4
10108278:	80c00007 	ldb	r3,0(r16)
1010827c:	003f7706 	br	1010805c <__alt_data_end+0xfffe805c>
10108280:	00800c04 	movi	r2,48
10108284:	da802217 	ldw	r10,136(sp)
10108288:	d8801d05 	stb	r2,116(sp)
1010828c:	00801e04 	movi	r2,120
10108290:	d8801d45 	stb	r2,117(sp)
10108294:	d8001d85 	stb	zero,118(sp)
10108298:	50c00104 	addi	r3,r10,4
1010829c:	54800017 	ldw	r18,0(r10)
101082a0:	0027883a 	mov	r19,zero
101082a4:	a0800094 	ori	r2,r20,2
101082a8:	48030b16 	blt	r9,zero,10108ed8 <___vfiprintf_internal_r+0xff8>
101082ac:	00bfdfc4 	movi	r2,-129
101082b0:	a096703a 	and	r11,r20,r2
101082b4:	d8c02215 	stw	r3,136(sp)
101082b8:	5d000094 	ori	r20,r11,2
101082bc:	90032b1e 	bne	r18,zero,10108f6c <___vfiprintf_internal_r+0x108c>
101082c0:	00840474 	movhi	r2,4113
101082c4:	10bdbf04 	addi	r2,r2,-2308
101082c8:	d8802615 	stw	r2,152(sp)
101082cc:	0039883a 	mov	fp,zero
101082d0:	48017b1e 	bne	r9,zero,101088c0 <___vfiprintf_internal_r+0x9e0>
101082d4:	0013883a 	mov	r9,zero
101082d8:	0027883a 	mov	r19,zero
101082dc:	dd401a04 	addi	r21,sp,104
101082e0:	4825883a 	mov	r18,r9
101082e4:	4cc0010e 	bge	r9,r19,101082ec <___vfiprintf_internal_r+0x40c>
101082e8:	9825883a 	mov	r18,r19
101082ec:	e7003fcc 	andi	fp,fp,255
101082f0:	e700201c 	xori	fp,fp,128
101082f4:	e73fe004 	addi	fp,fp,-128
101082f8:	e0000126 	beq	fp,zero,10108300 <___vfiprintf_internal_r+0x420>
101082fc:	94800044 	addi	r18,r18,1
10108300:	a380008c 	andi	r14,r20,2
10108304:	70000126 	beq	r14,zero,1010830c <___vfiprintf_internal_r+0x42c>
10108308:	94800084 	addi	r18,r18,2
1010830c:	a700210c 	andi	fp,r20,132
10108310:	e001df1e 	bne	fp,zero,10108a90 <___vfiprintf_internal_r+0xbb0>
10108314:	8c87c83a 	sub	r3,r17,r18
10108318:	00c1dd0e 	bge	zero,r3,10108a90 <___vfiprintf_internal_r+0xbb0>
1010831c:	01c00404 	movi	r7,16
10108320:	d8801c17 	ldw	r2,112(sp)
10108324:	38c3ad0e 	bge	r7,r3,101091dc <___vfiprintf_internal_r+0x12fc>
10108328:	02840474 	movhi	r10,4113
1010832c:	52be2404 	addi	r10,r10,-1904
10108330:	dc002915 	stw	r16,164(sp)
10108334:	d9801b17 	ldw	r6,108(sp)
10108338:	da802415 	stw	r10,144(sp)
1010833c:	03c001c4 	movi	r15,7
10108340:	da402515 	stw	r9,148(sp)
10108344:	db802815 	stw	r14,160(sp)
10108348:	1821883a 	mov	r16,r3
1010834c:	00000506 	br	10108364 <___vfiprintf_internal_r+0x484>
10108350:	31400084 	addi	r5,r6,2
10108354:	42000204 	addi	r8,r8,8
10108358:	200d883a 	mov	r6,r4
1010835c:	843ffc04 	addi	r16,r16,-16
10108360:	3c000d0e 	bge	r7,r16,10108398 <___vfiprintf_internal_r+0x4b8>
10108364:	10800404 	addi	r2,r2,16
10108368:	31000044 	addi	r4,r6,1
1010836c:	45800015 	stw	r22,0(r8)
10108370:	41c00115 	stw	r7,4(r8)
10108374:	d8801c15 	stw	r2,112(sp)
10108378:	d9001b15 	stw	r4,108(sp)
1010837c:	793ff40e 	bge	r15,r4,10108350 <__alt_data_end+0xfffe8350>
10108380:	1001b51e 	bne	r2,zero,10108a58 <___vfiprintf_internal_r+0xb78>
10108384:	843ffc04 	addi	r16,r16,-16
10108388:	000d883a 	mov	r6,zero
1010838c:	01400044 	movi	r5,1
10108390:	d811883a 	mov	r8,sp
10108394:	3c3ff316 	blt	r7,r16,10108364 <__alt_data_end+0xfffe8364>
10108398:	8007883a 	mov	r3,r16
1010839c:	da402517 	ldw	r9,148(sp)
101083a0:	db802817 	ldw	r14,160(sp)
101083a4:	dc002917 	ldw	r16,164(sp)
101083a8:	da802417 	ldw	r10,144(sp)
101083ac:	1885883a 	add	r2,r3,r2
101083b0:	40c00115 	stw	r3,4(r8)
101083b4:	42800015 	stw	r10,0(r8)
101083b8:	d8801c15 	stw	r2,112(sp)
101083bc:	d9401b15 	stw	r5,108(sp)
101083c0:	00c001c4 	movi	r3,7
101083c4:	19426016 	blt	r3,r5,10108d48 <___vfiprintf_internal_r+0xe68>
101083c8:	d8c01d87 	ldb	r3,118(sp)
101083cc:	42000204 	addi	r8,r8,8
101083d0:	29000044 	addi	r4,r5,1
101083d4:	1801b31e 	bne	r3,zero,10108aa4 <___vfiprintf_internal_r+0xbc4>
101083d8:	7001c026 	beq	r14,zero,10108adc <___vfiprintf_internal_r+0xbfc>
101083dc:	d8c01d04 	addi	r3,sp,116
101083e0:	10800084 	addi	r2,r2,2
101083e4:	40c00015 	stw	r3,0(r8)
101083e8:	00c00084 	movi	r3,2
101083ec:	40c00115 	stw	r3,4(r8)
101083f0:	d8801c15 	stw	r2,112(sp)
101083f4:	d9001b15 	stw	r4,108(sp)
101083f8:	00c001c4 	movi	r3,7
101083fc:	1902650e 	bge	r3,r4,10108d94 <___vfiprintf_internal_r+0xeb4>
10108400:	10029a1e 	bne	r2,zero,10108e6c <___vfiprintf_internal_r+0xf8c>
10108404:	00c02004 	movi	r3,128
10108408:	01000044 	movi	r4,1
1010840c:	000b883a 	mov	r5,zero
10108410:	d811883a 	mov	r8,sp
10108414:	e0c1b31e 	bne	fp,r3,10108ae4 <___vfiprintf_internal_r+0xc04>
10108418:	8cb9c83a 	sub	fp,r17,r18
1010841c:	0701b10e 	bge	zero,fp,10108ae4 <___vfiprintf_internal_r+0xc04>
10108420:	01c00404 	movi	r7,16
10108424:	3f03890e 	bge	r7,fp,1010924c <___vfiprintf_internal_r+0x136c>
10108428:	00c40474 	movhi	r3,4113
1010842c:	18fe2004 	addi	r3,r3,-1920
10108430:	d8c02415 	stw	r3,144(sp)
10108434:	8007883a 	mov	r3,r16
10108438:	034001c4 	movi	r13,7
1010843c:	e021883a 	mov	r16,fp
10108440:	da402515 	stw	r9,148(sp)
10108444:	1839883a 	mov	fp,r3
10108448:	00000506 	br	10108460 <___vfiprintf_internal_r+0x580>
1010844c:	29800084 	addi	r6,r5,2
10108450:	42000204 	addi	r8,r8,8
10108454:	180b883a 	mov	r5,r3
10108458:	843ffc04 	addi	r16,r16,-16
1010845c:	3c000d0e 	bge	r7,r16,10108494 <___vfiprintf_internal_r+0x5b4>
10108460:	10800404 	addi	r2,r2,16
10108464:	28c00044 	addi	r3,r5,1
10108468:	45c00015 	stw	r23,0(r8)
1010846c:	41c00115 	stw	r7,4(r8)
10108470:	d8801c15 	stw	r2,112(sp)
10108474:	d8c01b15 	stw	r3,108(sp)
10108478:	68fff40e 	bge	r13,r3,1010844c <__alt_data_end+0xfffe844c>
1010847c:	1002241e 	bne	r2,zero,10108d10 <___vfiprintf_internal_r+0xe30>
10108480:	843ffc04 	addi	r16,r16,-16
10108484:	01800044 	movi	r6,1
10108488:	000b883a 	mov	r5,zero
1010848c:	d811883a 	mov	r8,sp
10108490:	3c3ff316 	blt	r7,r16,10108460 <__alt_data_end+0xfffe8460>
10108494:	da402517 	ldw	r9,148(sp)
10108498:	e007883a 	mov	r3,fp
1010849c:	8039883a 	mov	fp,r16
101084a0:	1821883a 	mov	r16,r3
101084a4:	d8c02417 	ldw	r3,144(sp)
101084a8:	1705883a 	add	r2,r2,fp
101084ac:	47000115 	stw	fp,4(r8)
101084b0:	40c00015 	stw	r3,0(r8)
101084b4:	d8801c15 	stw	r2,112(sp)
101084b8:	d9801b15 	stw	r6,108(sp)
101084bc:	00c001c4 	movi	r3,7
101084c0:	19827616 	blt	r3,r6,10108e9c <___vfiprintf_internal_r+0xfbc>
101084c4:	4cf9c83a 	sub	fp,r9,r19
101084c8:	42000204 	addi	r8,r8,8
101084cc:	31000044 	addi	r4,r6,1
101084d0:	300b883a 	mov	r5,r6
101084d4:	07018516 	blt	zero,fp,10108aec <___vfiprintf_internal_r+0xc0c>
101084d8:	9885883a 	add	r2,r19,r2
101084dc:	45400015 	stw	r21,0(r8)
101084e0:	44c00115 	stw	r19,4(r8)
101084e4:	d8801c15 	stw	r2,112(sp)
101084e8:	d9001b15 	stw	r4,108(sp)
101084ec:	00c001c4 	movi	r3,7
101084f0:	1901dd0e 	bge	r3,r4,10108c68 <___vfiprintf_internal_r+0xd88>
101084f4:	1002401e 	bne	r2,zero,10108df8 <___vfiprintf_internal_r+0xf18>
101084f8:	d8001b15 	stw	zero,108(sp)
101084fc:	a2c0010c 	andi	r11,r20,4
10108500:	58000226 	beq	r11,zero,1010850c <___vfiprintf_internal_r+0x62c>
10108504:	8ca7c83a 	sub	r19,r17,r18
10108508:	04c2f216 	blt	zero,r19,101090d4 <___vfiprintf_internal_r+0x11f4>
1010850c:	8c80010e 	bge	r17,r18,10108514 <___vfiprintf_internal_r+0x634>
10108510:	9023883a 	mov	r17,r18
10108514:	da802317 	ldw	r10,140(sp)
10108518:	5455883a 	add	r10,r10,r17
1010851c:	da802315 	stw	r10,140(sp)
10108520:	d8001b15 	stw	zero,108(sp)
10108524:	d811883a 	mov	r8,sp
10108528:	003ea206 	br	10107fb4 <__alt_data_end+0xfffe7fb4>
1010852c:	a5000814 	ori	r20,r20,32
10108530:	80c00007 	ldb	r3,0(r16)
10108534:	003ec906 	br	1010805c <__alt_data_end+0xfffe805c>
10108538:	80c00007 	ldb	r3,0(r16)
1010853c:	1b030926 	beq	r3,r12,10109164 <___vfiprintf_internal_r+0x1284>
10108540:	a5000414 	ori	r20,r20,16
10108544:	003ec506 	br	1010805c <__alt_data_end+0xfffe805c>
10108548:	21003fcc 	andi	r4,r4,255
1010854c:	20035e1e 	bne	r4,zero,101092c8 <___vfiprintf_internal_r+0x13e8>
10108550:	a080080c 	andi	r2,r20,32
10108554:	1002a526 	beq	r2,zero,10108fec <___vfiprintf_internal_r+0x110c>
10108558:	da802217 	ldw	r10,136(sp)
1010855c:	50800017 	ldw	r2,0(r10)
10108560:	da802317 	ldw	r10,140(sp)
10108564:	5007d7fa 	srai	r3,r10,31
10108568:	da802217 	ldw	r10,136(sp)
1010856c:	10c00115 	stw	r3,4(r2)
10108570:	52800104 	addi	r10,r10,4
10108574:	da802215 	stw	r10,136(sp)
10108578:	da802317 	ldw	r10,140(sp)
1010857c:	12800015 	stw	r10,0(r2)
10108580:	003e8c06 	br	10107fb4 <__alt_data_end+0xfffe7fb4>
10108584:	21003fcc 	andi	r4,r4,255
10108588:	2003511e 	bne	r4,zero,101092d0 <___vfiprintf_internal_r+0x13f0>
1010858c:	a080080c 	andi	r2,r20,32
10108590:	1000a126 	beq	r2,zero,10108818 <___vfiprintf_internal_r+0x938>
10108594:	da802217 	ldw	r10,136(sp)
10108598:	d8001d85 	stb	zero,118(sp)
1010859c:	50800204 	addi	r2,r10,8
101085a0:	54800017 	ldw	r18,0(r10)
101085a4:	54c00117 	ldw	r19,4(r10)
101085a8:	4802b416 	blt	r9,zero,1010907c <___vfiprintf_internal_r+0x119c>
101085ac:	013fdfc4 	movi	r4,-129
101085b0:	94c6b03a 	or	r3,r18,r19
101085b4:	d8802215 	stw	r2,136(sp)
101085b8:	a128703a 	and	r20,r20,r4
101085bc:	1800a226 	beq	r3,zero,10108848 <___vfiprintf_internal_r+0x968>
101085c0:	0039883a 	mov	fp,zero
101085c4:	dd401a04 	addi	r21,sp,104
101085c8:	9006d0fa 	srli	r3,r18,3
101085cc:	9808977a 	slli	r4,r19,29
101085d0:	9826d0fa 	srli	r19,r19,3
101085d4:	948001cc 	andi	r18,r18,7
101085d8:	90800c04 	addi	r2,r18,48
101085dc:	ad7fffc4 	addi	r21,r21,-1
101085e0:	20e4b03a 	or	r18,r4,r3
101085e4:	a8800005 	stb	r2,0(r21)
101085e8:	94c6b03a 	or	r3,r18,r19
101085ec:	183ff61e 	bne	r3,zero,101085c8 <__alt_data_end+0xfffe85c8>
101085f0:	a0c0004c 	andi	r3,r20,1
101085f4:	18005926 	beq	r3,zero,1010875c <___vfiprintf_internal_r+0x87c>
101085f8:	10803fcc 	andi	r2,r2,255
101085fc:	1080201c 	xori	r2,r2,128
10108600:	10bfe004 	addi	r2,r2,-128
10108604:	00c00c04 	movi	r3,48
10108608:	10c05426 	beq	r2,r3,1010875c <___vfiprintf_internal_r+0x87c>
1010860c:	da801e17 	ldw	r10,120(sp)
10108610:	a8bfffc4 	addi	r2,r21,-1
10108614:	a8ffffc5 	stb	r3,-1(r21)
10108618:	50a7c83a 	sub	r19,r10,r2
1010861c:	102b883a 	mov	r21,r2
10108620:	003f2f06 	br	101082e0 <__alt_data_end+0xfffe82e0>
10108624:	21003fcc 	andi	r4,r4,255
10108628:	2003421e 	bne	r4,zero,10109334 <___vfiprintf_internal_r+0x1454>
1010862c:	00840474 	movhi	r2,4113
10108630:	10bdbf04 	addi	r2,r2,-2308
10108634:	d8802615 	stw	r2,152(sp)
10108638:	a080080c 	andi	r2,r20,32
1010863c:	1000aa26 	beq	r2,zero,101088e8 <___vfiprintf_internal_r+0xa08>
10108640:	da802217 	ldw	r10,136(sp)
10108644:	54800017 	ldw	r18,0(r10)
10108648:	54c00117 	ldw	r19,4(r10)
1010864c:	52800204 	addi	r10,r10,8
10108650:	da802215 	stw	r10,136(sp)
10108654:	a080004c 	andi	r2,r20,1
10108658:	1001d226 	beq	r2,zero,10108da4 <___vfiprintf_internal_r+0xec4>
1010865c:	94c4b03a 	or	r2,r18,r19
10108660:	1002351e 	bne	r2,zero,10108f38 <___vfiprintf_internal_r+0x1058>
10108664:	d8001d85 	stb	zero,118(sp)
10108668:	48022216 	blt	r9,zero,10108ef4 <___vfiprintf_internal_r+0x1014>
1010866c:	00bfdfc4 	movi	r2,-129
10108670:	a0a8703a 	and	r20,r20,r2
10108674:	003f1506 	br	101082cc <__alt_data_end+0xfffe82cc>
10108678:	da802217 	ldw	r10,136(sp)
1010867c:	04800044 	movi	r18,1
10108680:	d8001d85 	stb	zero,118(sp)
10108684:	50800017 	ldw	r2,0(r10)
10108688:	52800104 	addi	r10,r10,4
1010868c:	da802215 	stw	r10,136(sp)
10108690:	d8801005 	stb	r2,64(sp)
10108694:	9027883a 	mov	r19,r18
10108698:	dd401004 	addi	r21,sp,64
1010869c:	0013883a 	mov	r9,zero
101086a0:	003f1706 	br	10108300 <__alt_data_end+0xfffe8300>
101086a4:	21003fcc 	andi	r4,r4,255
101086a8:	2003201e 	bne	r4,zero,1010932c <___vfiprintf_internal_r+0x144c>
101086ac:	a080080c 	andi	r2,r20,32
101086b0:	10004b26 	beq	r2,zero,101087e0 <___vfiprintf_internal_r+0x900>
101086b4:	da802217 	ldw	r10,136(sp)
101086b8:	50800117 	ldw	r2,4(r10)
101086bc:	54800017 	ldw	r18,0(r10)
101086c0:	52800204 	addi	r10,r10,8
101086c4:	da802215 	stw	r10,136(sp)
101086c8:	1027883a 	mov	r19,r2
101086cc:	10022c16 	blt	r2,zero,10108f80 <___vfiprintf_internal_r+0x10a0>
101086d0:	df001d83 	ldbu	fp,118(sp)
101086d4:	48007216 	blt	r9,zero,101088a0 <___vfiprintf_internal_r+0x9c0>
101086d8:	00ffdfc4 	movi	r3,-129
101086dc:	94c4b03a 	or	r2,r18,r19
101086e0:	a0e8703a 	and	r20,r20,r3
101086e4:	1000cc26 	beq	r2,zero,10108a18 <___vfiprintf_internal_r+0xb38>
101086e8:	98021026 	beq	r19,zero,10108f2c <___vfiprintf_internal_r+0x104c>
101086ec:	dc402415 	stw	r17,144(sp)
101086f0:	dc002515 	stw	r16,148(sp)
101086f4:	9823883a 	mov	r17,r19
101086f8:	9021883a 	mov	r16,r18
101086fc:	dd401a04 	addi	r21,sp,104
10108700:	4825883a 	mov	r18,r9
10108704:	4027883a 	mov	r19,r8
10108708:	8009883a 	mov	r4,r16
1010870c:	880b883a 	mov	r5,r17
10108710:	01800284 	movi	r6,10
10108714:	000f883a 	mov	r7,zero
10108718:	010a2c00 	call	1010a2c0 <__umoddi3>
1010871c:	10800c04 	addi	r2,r2,48
10108720:	ad7fffc4 	addi	r21,r21,-1
10108724:	8009883a 	mov	r4,r16
10108728:	880b883a 	mov	r5,r17
1010872c:	a8800005 	stb	r2,0(r21)
10108730:	01800284 	movi	r6,10
10108734:	000f883a 	mov	r7,zero
10108738:	0109d480 	call	10109d48 <__udivdi3>
1010873c:	1021883a 	mov	r16,r2
10108740:	10c4b03a 	or	r2,r2,r3
10108744:	1823883a 	mov	r17,r3
10108748:	103fef1e 	bne	r2,zero,10108708 <__alt_data_end+0xfffe8708>
1010874c:	dc402417 	ldw	r17,144(sp)
10108750:	dc002517 	ldw	r16,148(sp)
10108754:	9013883a 	mov	r9,r18
10108758:	9811883a 	mov	r8,r19
1010875c:	da801e17 	ldw	r10,120(sp)
10108760:	5567c83a 	sub	r19,r10,r21
10108764:	003ede06 	br	101082e0 <__alt_data_end+0xfffe82e0>
10108768:	38803fcc 	andi	r2,r7,255
1010876c:	1080201c 	xori	r2,r2,128
10108770:	10bfe004 	addi	r2,r2,-128
10108774:	1002371e 	bne	r2,zero,10109054 <___vfiprintf_internal_r+0x1174>
10108778:	01000044 	movi	r4,1
1010877c:	01c00804 	movi	r7,32
10108780:	80c00007 	ldb	r3,0(r16)
10108784:	003e3506 	br	1010805c <__alt_data_end+0xfffe805c>
10108788:	a5000054 	ori	r20,r20,1
1010878c:	80c00007 	ldb	r3,0(r16)
10108790:	003e3206 	br	1010805c <__alt_data_end+0xfffe805c>
10108794:	a5002014 	ori	r20,r20,128
10108798:	80c00007 	ldb	r3,0(r16)
1010879c:	003e2f06 	br	1010805c <__alt_data_end+0xfffe805c>
101087a0:	8015883a 	mov	r10,r16
101087a4:	0023883a 	mov	r17,zero
101087a8:	18bff404 	addi	r2,r3,-48
101087ac:	50c00007 	ldb	r3,0(r10)
101087b0:	8c4002a4 	muli	r17,r17,10
101087b4:	84000044 	addi	r16,r16,1
101087b8:	8015883a 	mov	r10,r16
101087bc:	1463883a 	add	r17,r2,r17
101087c0:	18bff404 	addi	r2,r3,-48
101087c4:	30bff92e 	bgeu	r6,r2,101087ac <__alt_data_end+0xfffe87ac>
101087c8:	003e2506 	br	10108060 <__alt_data_end+0xfffe8060>
101087cc:	21003fcc 	andi	r4,r4,255
101087d0:	2002d41e 	bne	r4,zero,10109324 <___vfiprintf_internal_r+0x1444>
101087d4:	a5000414 	ori	r20,r20,16
101087d8:	a080080c 	andi	r2,r20,32
101087dc:	103fb51e 	bne	r2,zero,101086b4 <__alt_data_end+0xfffe86b4>
101087e0:	a080040c 	andi	r2,r20,16
101087e4:	1001f826 	beq	r2,zero,10108fc8 <___vfiprintf_internal_r+0x10e8>
101087e8:	da802217 	ldw	r10,136(sp)
101087ec:	54800017 	ldw	r18,0(r10)
101087f0:	52800104 	addi	r10,r10,4
101087f4:	da802215 	stw	r10,136(sp)
101087f8:	9027d7fa 	srai	r19,r18,31
101087fc:	9805883a 	mov	r2,r19
10108800:	003fb206 	br	101086cc <__alt_data_end+0xfffe86cc>
10108804:	21003fcc 	andi	r4,r4,255
10108808:	2002c41e 	bne	r4,zero,1010931c <___vfiprintf_internal_r+0x143c>
1010880c:	a5000414 	ori	r20,r20,16
10108810:	a080080c 	andi	r2,r20,32
10108814:	103f5f1e 	bne	r2,zero,10108594 <__alt_data_end+0xfffe8594>
10108818:	a080040c 	andi	r2,r20,16
1010881c:	10020f26 	beq	r2,zero,1010905c <___vfiprintf_internal_r+0x117c>
10108820:	da802217 	ldw	r10,136(sp)
10108824:	d8001d85 	stb	zero,118(sp)
10108828:	0027883a 	mov	r19,zero
1010882c:	50800104 	addi	r2,r10,4
10108830:	54800017 	ldw	r18,0(r10)
10108834:	48021116 	blt	r9,zero,1010907c <___vfiprintf_internal_r+0x119c>
10108838:	00ffdfc4 	movi	r3,-129
1010883c:	d8802215 	stw	r2,136(sp)
10108840:	a0e8703a 	and	r20,r20,r3
10108844:	903f5e1e 	bne	r18,zero,101085c0 <__alt_data_end+0xfffe85c0>
10108848:	0039883a 	mov	fp,zero
1010884c:	4802a626 	beq	r9,zero,101092e8 <___vfiprintf_internal_r+0x1408>
10108850:	0025883a 	mov	r18,zero
10108854:	0027883a 	mov	r19,zero
10108858:	003f5a06 	br	101085c4 <__alt_data_end+0xfffe85c4>
1010885c:	21003fcc 	andi	r4,r4,255
10108860:	20029f1e 	bne	r4,zero,101092e0 <___vfiprintf_internal_r+0x1400>
10108864:	a5000414 	ori	r20,r20,16
10108868:	a080080c 	andi	r2,r20,32
1010886c:	10005e1e 	bne	r2,zero,101089e8 <___vfiprintf_internal_r+0xb08>
10108870:	a080040c 	andi	r2,r20,16
10108874:	1001a21e 	bne	r2,zero,10108f00 <___vfiprintf_internal_r+0x1020>
10108878:	a080100c 	andi	r2,r20,64
1010887c:	d8001d85 	stb	zero,118(sp)
10108880:	da802217 	ldw	r10,136(sp)
10108884:	1002231e 	bne	r2,zero,10109114 <___vfiprintf_internal_r+0x1234>
10108888:	50800104 	addi	r2,r10,4
1010888c:	54800017 	ldw	r18,0(r10)
10108890:	0027883a 	mov	r19,zero
10108894:	4801a00e 	bge	r9,zero,10108f18 <___vfiprintf_internal_r+0x1038>
10108898:	d8802215 	stw	r2,136(sp)
1010889c:	0039883a 	mov	fp,zero
101088a0:	94c4b03a 	or	r2,r18,r19
101088a4:	103f901e 	bne	r2,zero,101086e8 <__alt_data_end+0xfffe86e8>
101088a8:	00800044 	movi	r2,1
101088ac:	10803fcc 	andi	r2,r2,255
101088b0:	00c00044 	movi	r3,1
101088b4:	10c05926 	beq	r2,r3,10108a1c <___vfiprintf_internal_r+0xb3c>
101088b8:	00c00084 	movi	r3,2
101088bc:	10ffe41e 	bne	r2,r3,10108850 <__alt_data_end+0xfffe8850>
101088c0:	0025883a 	mov	r18,zero
101088c4:	0027883a 	mov	r19,zero
101088c8:	00013d06 	br	10108dc0 <___vfiprintf_internal_r+0xee0>
101088cc:	21003fcc 	andi	r4,r4,255
101088d0:	2002811e 	bne	r4,zero,101092d8 <___vfiprintf_internal_r+0x13f8>
101088d4:	00840474 	movhi	r2,4113
101088d8:	10bdba04 	addi	r2,r2,-2328
101088dc:	d8802615 	stw	r2,152(sp)
101088e0:	a080080c 	andi	r2,r20,32
101088e4:	103f561e 	bne	r2,zero,10108640 <__alt_data_end+0xfffe8640>
101088e8:	a080040c 	andi	r2,r20,16
101088ec:	1001d126 	beq	r2,zero,10109034 <___vfiprintf_internal_r+0x1154>
101088f0:	da802217 	ldw	r10,136(sp)
101088f4:	0027883a 	mov	r19,zero
101088f8:	54800017 	ldw	r18,0(r10)
101088fc:	52800104 	addi	r10,r10,4
10108900:	da802215 	stw	r10,136(sp)
10108904:	003f5306 	br	10108654 <__alt_data_end+0xfffe8654>
10108908:	da802217 	ldw	r10,136(sp)
1010890c:	d8001d85 	stb	zero,118(sp)
10108910:	55400017 	ldw	r21,0(r10)
10108914:	50c00104 	addi	r3,r10,4
10108918:	a8024226 	beq	r21,zero,10109224 <___vfiprintf_internal_r+0x1344>
1010891c:	48021816 	blt	r9,zero,10109180 <___vfiprintf_internal_r+0x12a0>
10108920:	480d883a 	mov	r6,r9
10108924:	000b883a 	mov	r5,zero
10108928:	a809883a 	mov	r4,r21
1010892c:	d8c02a15 	stw	r3,168(sp)
10108930:	da002b15 	stw	r8,172(sp)
10108934:	da402c15 	stw	r9,176(sp)
10108938:	01060dc0 	call	101060dc <memchr>
1010893c:	d8c02a17 	ldw	r3,168(sp)
10108940:	da002b17 	ldw	r8,172(sp)
10108944:	da402c17 	ldw	r9,176(sp)
10108948:	10024826 	beq	r2,zero,1010926c <___vfiprintf_internal_r+0x138c>
1010894c:	1567c83a 	sub	r19,r2,r21
10108950:	df001d83 	ldbu	fp,118(sp)
10108954:	d8c02215 	stw	r3,136(sp)
10108958:	0013883a 	mov	r9,zero
1010895c:	003e6006 	br	101082e0 <__alt_data_end+0xfffe82e0>
10108960:	21003fcc 	andi	r4,r4,255
10108964:	203fc026 	beq	r4,zero,10108868 <__alt_data_end+0xfffe8868>
10108968:	d9c01d85 	stb	r7,118(sp)
1010896c:	003fbe06 	br	10108868 <__alt_data_end+0xfffe8868>
10108970:	da802217 	ldw	r10,136(sp)
10108974:	54400017 	ldw	r17,0(r10)
10108978:	50800104 	addi	r2,r10,4
1010897c:	883e3b16 	blt	r17,zero,1010826c <__alt_data_end+0xfffe826c>
10108980:	d8802215 	stw	r2,136(sp)
10108984:	80c00007 	ldb	r3,0(r16)
10108988:	003db406 	br	1010805c <__alt_data_end+0xfffe805c>
1010898c:	01000044 	movi	r4,1
10108990:	01c00ac4 	movi	r7,43
10108994:	80c00007 	ldb	r3,0(r16)
10108998:	003db006 	br	1010805c <__alt_data_end+0xfffe805c>
1010899c:	80c00007 	ldb	r3,0(r16)
101089a0:	82800044 	addi	r10,r16,1
101089a4:	1b423c26 	beq	r3,r13,10109298 <___vfiprintf_internal_r+0x13b8>
101089a8:	18bff404 	addi	r2,r3,-48
101089ac:	0013883a 	mov	r9,zero
101089b0:	30822b36 	bltu	r6,r2,10109260 <___vfiprintf_internal_r+0x1380>
101089b4:	50c00007 	ldb	r3,0(r10)
101089b8:	4a4002a4 	muli	r9,r9,10
101089bc:	54000044 	addi	r16,r10,1
101089c0:	8015883a 	mov	r10,r16
101089c4:	4893883a 	add	r9,r9,r2
101089c8:	18bff404 	addi	r2,r3,-48
101089cc:	30bff92e 	bgeu	r6,r2,101089b4 <__alt_data_end+0xfffe89b4>
101089d0:	483da30e 	bge	r9,zero,10108060 <__alt_data_end+0xfffe8060>
101089d4:	027fffc4 	movi	r9,-1
101089d8:	003da106 	br	10108060 <__alt_data_end+0xfffe8060>
101089dc:	a5001014 	ori	r20,r20,64
101089e0:	80c00007 	ldb	r3,0(r16)
101089e4:	003d9d06 	br	1010805c <__alt_data_end+0xfffe805c>
101089e8:	da802217 	ldw	r10,136(sp)
101089ec:	d8001d85 	stb	zero,118(sp)
101089f0:	50c00204 	addi	r3,r10,8
101089f4:	54800017 	ldw	r18,0(r10)
101089f8:	54c00117 	ldw	r19,4(r10)
101089fc:	4801ca16 	blt	r9,zero,10109128 <___vfiprintf_internal_r+0x1248>
10108a00:	013fdfc4 	movi	r4,-129
10108a04:	94c4b03a 	or	r2,r18,r19
10108a08:	d8c02215 	stw	r3,136(sp)
10108a0c:	a128703a 	and	r20,r20,r4
10108a10:	0039883a 	mov	fp,zero
10108a14:	103f341e 	bne	r2,zero,101086e8 <__alt_data_end+0xfffe86e8>
10108a18:	483e2e26 	beq	r9,zero,101082d4 <__alt_data_end+0xfffe82d4>
10108a1c:	0025883a 	mov	r18,zero
10108a20:	94800c04 	addi	r18,r18,48
10108a24:	dc8019c5 	stb	r18,103(sp)
10108a28:	dcc02717 	ldw	r19,156(sp)
10108a2c:	dd4019c4 	addi	r21,sp,103
10108a30:	003e2b06 	br	101082e0 <__alt_data_end+0xfffe82e0>
10108a34:	21003fcc 	andi	r4,r4,255
10108a38:	2002361e 	bne	r4,zero,10109314 <___vfiprintf_internal_r+0x1434>
10108a3c:	1801c126 	beq	r3,zero,10109144 <___vfiprintf_internal_r+0x1264>
10108a40:	04800044 	movi	r18,1
10108a44:	d8c01005 	stb	r3,64(sp)
10108a48:	d8001d85 	stb	zero,118(sp)
10108a4c:	9027883a 	mov	r19,r18
10108a50:	dd401004 	addi	r21,sp,64
10108a54:	003f1106 	br	1010869c <__alt_data_end+0xfffe869c>
10108a58:	d9402117 	ldw	r5,132(sp)
10108a5c:	d9002017 	ldw	r4,128(sp)
10108a60:	d9801a04 	addi	r6,sp,104
10108a64:	d9c02b15 	stw	r7,172(sp)
10108a68:	dbc02a15 	stw	r15,168(sp)
10108a6c:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108a70:	d9c02b17 	ldw	r7,172(sp)
10108a74:	dbc02a17 	ldw	r15,168(sp)
10108a78:	10006d1e 	bne	r2,zero,10108c30 <___vfiprintf_internal_r+0xd50>
10108a7c:	d9801b17 	ldw	r6,108(sp)
10108a80:	d8801c17 	ldw	r2,112(sp)
10108a84:	d811883a 	mov	r8,sp
10108a88:	31400044 	addi	r5,r6,1
10108a8c:	003e3306 	br	1010835c <__alt_data_end+0xfffe835c>
10108a90:	d9401b17 	ldw	r5,108(sp)
10108a94:	d8801c17 	ldw	r2,112(sp)
10108a98:	29000044 	addi	r4,r5,1
10108a9c:	d8c01d87 	ldb	r3,118(sp)
10108aa0:	183e4d26 	beq	r3,zero,101083d8 <__alt_data_end+0xfffe83d8>
10108aa4:	00c00044 	movi	r3,1
10108aa8:	d9401d84 	addi	r5,sp,118
10108aac:	10c5883a 	add	r2,r2,r3
10108ab0:	41400015 	stw	r5,0(r8)
10108ab4:	40c00115 	stw	r3,4(r8)
10108ab8:	d8801c15 	stw	r2,112(sp)
10108abc:	d9001b15 	stw	r4,108(sp)
10108ac0:	014001c4 	movi	r5,7
10108ac4:	2900a90e 	bge	r5,r4,10108d6c <___vfiprintf_internal_r+0xe8c>
10108ac8:	1000da1e 	bne	r2,zero,10108e34 <___vfiprintf_internal_r+0xf54>
10108acc:	7000ab1e 	bne	r14,zero,10108d7c <___vfiprintf_internal_r+0xe9c>
10108ad0:	000b883a 	mov	r5,zero
10108ad4:	1809883a 	mov	r4,r3
10108ad8:	d811883a 	mov	r8,sp
10108adc:	00c02004 	movi	r3,128
10108ae0:	e0fe4d26 	beq	fp,r3,10108418 <__alt_data_end+0xfffe8418>
10108ae4:	4cf9c83a 	sub	fp,r9,r19
10108ae8:	073e7b0e 	bge	zero,fp,101084d8 <__alt_data_end+0xfffe84d8>
10108aec:	01c00404 	movi	r7,16
10108af0:	3f01900e 	bge	r7,fp,10109134 <___vfiprintf_internal_r+0x1254>
10108af4:	00c40474 	movhi	r3,4113
10108af8:	18fe2004 	addi	r3,r3,-1920
10108afc:	d8c02415 	stw	r3,144(sp)
10108b00:	034001c4 	movi	r13,7
10108b04:	00000506 	br	10108b1c <___vfiprintf_internal_r+0xc3c>
10108b08:	29000084 	addi	r4,r5,2
10108b0c:	42000204 	addi	r8,r8,8
10108b10:	180b883a 	mov	r5,r3
10108b14:	e73ffc04 	addi	fp,fp,-16
10108b18:	3f000d0e 	bge	r7,fp,10108b50 <___vfiprintf_internal_r+0xc70>
10108b1c:	10800404 	addi	r2,r2,16
10108b20:	28c00044 	addi	r3,r5,1
10108b24:	45c00015 	stw	r23,0(r8)
10108b28:	41c00115 	stw	r7,4(r8)
10108b2c:	d8801c15 	stw	r2,112(sp)
10108b30:	d8c01b15 	stw	r3,108(sp)
10108b34:	68fff40e 	bge	r13,r3,10108b08 <__alt_data_end+0xfffe8b08>
10108b38:	1000101e 	bne	r2,zero,10108b7c <___vfiprintf_internal_r+0xc9c>
10108b3c:	e73ffc04 	addi	fp,fp,-16
10108b40:	01000044 	movi	r4,1
10108b44:	000b883a 	mov	r5,zero
10108b48:	d811883a 	mov	r8,sp
10108b4c:	3f3ff316 	blt	r7,fp,10108b1c <__alt_data_end+0xfffe8b1c>
10108b50:	da802417 	ldw	r10,144(sp)
10108b54:	1705883a 	add	r2,r2,fp
10108b58:	47000115 	stw	fp,4(r8)
10108b5c:	42800015 	stw	r10,0(r8)
10108b60:	d8801c15 	stw	r2,112(sp)
10108b64:	d9001b15 	stw	r4,108(sp)
10108b68:	00c001c4 	movi	r3,7
10108b6c:	19003616 	blt	r3,r4,10108c48 <___vfiprintf_internal_r+0xd68>
10108b70:	42000204 	addi	r8,r8,8
10108b74:	21000044 	addi	r4,r4,1
10108b78:	003e5706 	br	101084d8 <__alt_data_end+0xfffe84d8>
10108b7c:	d9402117 	ldw	r5,132(sp)
10108b80:	d9002017 	ldw	r4,128(sp)
10108b84:	d9801a04 	addi	r6,sp,104
10108b88:	d9c02b15 	stw	r7,172(sp)
10108b8c:	db402a15 	stw	r13,168(sp)
10108b90:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108b94:	d9c02b17 	ldw	r7,172(sp)
10108b98:	db402a17 	ldw	r13,168(sp)
10108b9c:	1000241e 	bne	r2,zero,10108c30 <___vfiprintf_internal_r+0xd50>
10108ba0:	d9401b17 	ldw	r5,108(sp)
10108ba4:	d8801c17 	ldw	r2,112(sp)
10108ba8:	d811883a 	mov	r8,sp
10108bac:	29000044 	addi	r4,r5,1
10108bb0:	003fd806 	br	10108b14 <__alt_data_end+0xfffe8b14>
10108bb4:	d9401b17 	ldw	r5,108(sp)
10108bb8:	00c40474 	movhi	r3,4113
10108bbc:	18fe2404 	addi	r3,r3,-1904
10108bc0:	d8c02415 	stw	r3,144(sp)
10108bc4:	29400044 	addi	r5,r5,1
10108bc8:	d8c02417 	ldw	r3,144(sp)
10108bcc:	14c5883a 	add	r2,r2,r19
10108bd0:	44c00115 	stw	r19,4(r8)
10108bd4:	40c00015 	stw	r3,0(r8)
10108bd8:	d8801c15 	stw	r2,112(sp)
10108bdc:	d9401b15 	stw	r5,108(sp)
10108be0:	00c001c4 	movi	r3,7
10108be4:	1940070e 	bge	r3,r5,10108c04 <___vfiprintf_internal_r+0xd24>
10108be8:	103e4826 	beq	r2,zero,1010850c <__alt_data_end+0xfffe850c>
10108bec:	d9402117 	ldw	r5,132(sp)
10108bf0:	d9002017 	ldw	r4,128(sp)
10108bf4:	d9801a04 	addi	r6,sp,104
10108bf8:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108bfc:	10000c1e 	bne	r2,zero,10108c30 <___vfiprintf_internal_r+0xd50>
10108c00:	d8801c17 	ldw	r2,112(sp)
10108c04:	8c80010e 	bge	r17,r18,10108c0c <___vfiprintf_internal_r+0xd2c>
10108c08:	9023883a 	mov	r17,r18
10108c0c:	da802317 	ldw	r10,140(sp)
10108c10:	5455883a 	add	r10,r10,r17
10108c14:	da802315 	stw	r10,140(sp)
10108c18:	103e4126 	beq	r2,zero,10108520 <__alt_data_end+0xfffe8520>
10108c1c:	d9402117 	ldw	r5,132(sp)
10108c20:	d9002017 	ldw	r4,128(sp)
10108c24:	d9801a04 	addi	r6,sp,104
10108c28:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108c2c:	103e3c26 	beq	r2,zero,10108520 <__alt_data_end+0xfffe8520>
10108c30:	dd002117 	ldw	r20,132(sp)
10108c34:	a080030b 	ldhu	r2,12(r20)
10108c38:	1080100c 	andi	r2,r2,64
10108c3c:	1001231e 	bne	r2,zero,101090cc <___vfiprintf_internal_r+0x11ec>
10108c40:	d8802317 	ldw	r2,140(sp)
10108c44:	003d7b06 	br	10108234 <__alt_data_end+0xfffe8234>
10108c48:	1000991e 	bne	r2,zero,10108eb0 <___vfiprintf_internal_r+0xfd0>
10108c4c:	00c00044 	movi	r3,1
10108c50:	9805883a 	mov	r2,r19
10108c54:	dd400015 	stw	r21,0(sp)
10108c58:	dcc00115 	stw	r19,4(sp)
10108c5c:	dcc01c15 	stw	r19,112(sp)
10108c60:	d8c01b15 	stw	r3,108(sp)
10108c64:	d811883a 	mov	r8,sp
10108c68:	42000204 	addi	r8,r8,8
10108c6c:	a2c0010c 	andi	r11,r20,4
10108c70:	583fe426 	beq	r11,zero,10108c04 <__alt_data_end+0xfffe8c04>
10108c74:	8ca7c83a 	sub	r19,r17,r18
10108c78:	04ffe20e 	bge	zero,r19,10108c04 <__alt_data_end+0xfffe8c04>
10108c7c:	01c00404 	movi	r7,16
10108c80:	3cffcc0e 	bge	r7,r19,10108bb4 <__alt_data_end+0xfffe8bb4>
10108c84:	02840474 	movhi	r10,4113
10108c88:	52be2404 	addi	r10,r10,-1904
10108c8c:	d9001b17 	ldw	r4,108(sp)
10108c90:	da802415 	stw	r10,144(sp)
10108c94:	382b883a 	mov	r21,r7
10108c98:	050001c4 	movi	r20,7
10108c9c:	df002017 	ldw	fp,128(sp)
10108ca0:	00000506 	br	10108cb8 <___vfiprintf_internal_r+0xdd8>
10108ca4:	21400084 	addi	r5,r4,2
10108ca8:	42000204 	addi	r8,r8,8
10108cac:	1809883a 	mov	r4,r3
10108cb0:	9cfffc04 	addi	r19,r19,-16
10108cb4:	acffc40e 	bge	r21,r19,10108bc8 <__alt_data_end+0xfffe8bc8>
10108cb8:	10800404 	addi	r2,r2,16
10108cbc:	20c00044 	addi	r3,r4,1
10108cc0:	45800015 	stw	r22,0(r8)
10108cc4:	45400115 	stw	r21,4(r8)
10108cc8:	d8801c15 	stw	r2,112(sp)
10108ccc:	d8c01b15 	stw	r3,108(sp)
10108cd0:	a0fff40e 	bge	r20,r3,10108ca4 <__alt_data_end+0xfffe8ca4>
10108cd4:	1000041e 	bne	r2,zero,10108ce8 <___vfiprintf_internal_r+0xe08>
10108cd8:	01400044 	movi	r5,1
10108cdc:	0009883a 	mov	r4,zero
10108ce0:	d811883a 	mov	r8,sp
10108ce4:	003ff206 	br	10108cb0 <__alt_data_end+0xfffe8cb0>
10108ce8:	d9402117 	ldw	r5,132(sp)
10108cec:	d9801a04 	addi	r6,sp,104
10108cf0:	e009883a 	mov	r4,fp
10108cf4:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108cf8:	103fcd1e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108cfc:	d9001b17 	ldw	r4,108(sp)
10108d00:	d8801c17 	ldw	r2,112(sp)
10108d04:	d811883a 	mov	r8,sp
10108d08:	21400044 	addi	r5,r4,1
10108d0c:	003fe806 	br	10108cb0 <__alt_data_end+0xfffe8cb0>
10108d10:	d9402117 	ldw	r5,132(sp)
10108d14:	d9002017 	ldw	r4,128(sp)
10108d18:	d9801a04 	addi	r6,sp,104
10108d1c:	d9c02b15 	stw	r7,172(sp)
10108d20:	db402a15 	stw	r13,168(sp)
10108d24:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108d28:	d9c02b17 	ldw	r7,172(sp)
10108d2c:	db402a17 	ldw	r13,168(sp)
10108d30:	103fbf1e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108d34:	d9401b17 	ldw	r5,108(sp)
10108d38:	d8801c17 	ldw	r2,112(sp)
10108d3c:	d811883a 	mov	r8,sp
10108d40:	29800044 	addi	r6,r5,1
10108d44:	003dc406 	br	10108458 <__alt_data_end+0xfffe8458>
10108d48:	1000d21e 	bne	r2,zero,10109094 <___vfiprintf_internal_r+0x11b4>
10108d4c:	d8c01d87 	ldb	r3,118(sp)
10108d50:	18009526 	beq	r3,zero,10108fa8 <___vfiprintf_internal_r+0x10c8>
10108d54:	00800044 	movi	r2,1
10108d58:	d8c01d84 	addi	r3,sp,118
10108d5c:	1009883a 	mov	r4,r2
10108d60:	d8c00015 	stw	r3,0(sp)
10108d64:	d8800115 	stw	r2,4(sp)
10108d68:	d811883a 	mov	r8,sp
10108d6c:	200b883a 	mov	r5,r4
10108d70:	42000204 	addi	r8,r8,8
10108d74:	21000044 	addi	r4,r4,1
10108d78:	003d9706 	br	101083d8 <__alt_data_end+0xfffe83d8>
10108d7c:	d9001d04 	addi	r4,sp,116
10108d80:	00800084 	movi	r2,2
10108d84:	d9000015 	stw	r4,0(sp)
10108d88:	d8800115 	stw	r2,4(sp)
10108d8c:	1809883a 	mov	r4,r3
10108d90:	d811883a 	mov	r8,sp
10108d94:	200b883a 	mov	r5,r4
10108d98:	42000204 	addi	r8,r8,8
10108d9c:	21000044 	addi	r4,r4,1
10108da0:	003f4e06 	br	10108adc <__alt_data_end+0xfffe8adc>
10108da4:	d8001d85 	stb	zero,118(sp)
10108da8:	48005016 	blt	r9,zero,10108eec <___vfiprintf_internal_r+0x100c>
10108dac:	00ffdfc4 	movi	r3,-129
10108db0:	94c4b03a 	or	r2,r18,r19
10108db4:	a0e8703a 	and	r20,r20,r3
10108db8:	103d4426 	beq	r2,zero,101082cc <__alt_data_end+0xfffe82cc>
10108dbc:	0039883a 	mov	fp,zero
10108dc0:	d9002617 	ldw	r4,152(sp)
10108dc4:	dd401a04 	addi	r21,sp,104
10108dc8:	908003cc 	andi	r2,r18,15
10108dcc:	9806973a 	slli	r3,r19,28
10108dd0:	2085883a 	add	r2,r4,r2
10108dd4:	9024d13a 	srli	r18,r18,4
10108dd8:	10800003 	ldbu	r2,0(r2)
10108ddc:	9826d13a 	srli	r19,r19,4
10108de0:	ad7fffc4 	addi	r21,r21,-1
10108de4:	1ca4b03a 	or	r18,r3,r18
10108de8:	a8800005 	stb	r2,0(r21)
10108dec:	94c4b03a 	or	r2,r18,r19
10108df0:	103ff51e 	bne	r2,zero,10108dc8 <__alt_data_end+0xfffe8dc8>
10108df4:	003e5906 	br	1010875c <__alt_data_end+0xfffe875c>
10108df8:	d9402117 	ldw	r5,132(sp)
10108dfc:	d9002017 	ldw	r4,128(sp)
10108e00:	d9801a04 	addi	r6,sp,104
10108e04:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108e08:	103f891e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108e0c:	d8801c17 	ldw	r2,112(sp)
10108e10:	d811883a 	mov	r8,sp
10108e14:	003f9506 	br	10108c6c <__alt_data_end+0xfffe8c6c>
10108e18:	d9402117 	ldw	r5,132(sp)
10108e1c:	d9002017 	ldw	r4,128(sp)
10108e20:	d9801a04 	addi	r6,sp,104
10108e24:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108e28:	103f811e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108e2c:	d811883a 	mov	r8,sp
10108e30:	003ced06 	br	101081e8 <__alt_data_end+0xfffe81e8>
10108e34:	d9402117 	ldw	r5,132(sp)
10108e38:	d9002017 	ldw	r4,128(sp)
10108e3c:	d9801a04 	addi	r6,sp,104
10108e40:	da402c15 	stw	r9,176(sp)
10108e44:	db802a15 	stw	r14,168(sp)
10108e48:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108e4c:	da402c17 	ldw	r9,176(sp)
10108e50:	db802a17 	ldw	r14,168(sp)
10108e54:	103f761e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108e58:	d9401b17 	ldw	r5,108(sp)
10108e5c:	d8801c17 	ldw	r2,112(sp)
10108e60:	d811883a 	mov	r8,sp
10108e64:	29000044 	addi	r4,r5,1
10108e68:	003d5b06 	br	101083d8 <__alt_data_end+0xfffe83d8>
10108e6c:	d9402117 	ldw	r5,132(sp)
10108e70:	d9002017 	ldw	r4,128(sp)
10108e74:	d9801a04 	addi	r6,sp,104
10108e78:	da402c15 	stw	r9,176(sp)
10108e7c:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108e80:	da402c17 	ldw	r9,176(sp)
10108e84:	103f6a1e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108e88:	d9401b17 	ldw	r5,108(sp)
10108e8c:	d8801c17 	ldw	r2,112(sp)
10108e90:	d811883a 	mov	r8,sp
10108e94:	29000044 	addi	r4,r5,1
10108e98:	003f1006 	br	10108adc <__alt_data_end+0xfffe8adc>
10108e9c:	1000c31e 	bne	r2,zero,101091ac <___vfiprintf_internal_r+0x12cc>
10108ea0:	01000044 	movi	r4,1
10108ea4:	000b883a 	mov	r5,zero
10108ea8:	d811883a 	mov	r8,sp
10108eac:	003f0d06 	br	10108ae4 <__alt_data_end+0xfffe8ae4>
10108eb0:	d9402117 	ldw	r5,132(sp)
10108eb4:	d9002017 	ldw	r4,128(sp)
10108eb8:	d9801a04 	addi	r6,sp,104
10108ebc:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10108ec0:	103f5b1e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108ec4:	d9001b17 	ldw	r4,108(sp)
10108ec8:	d8801c17 	ldw	r2,112(sp)
10108ecc:	d811883a 	mov	r8,sp
10108ed0:	21000044 	addi	r4,r4,1
10108ed4:	003d8006 	br	101084d8 <__alt_data_end+0xfffe84d8>
10108ed8:	01040474 	movhi	r4,4113
10108edc:	213dbf04 	addi	r4,r4,-2308
10108ee0:	d9002615 	stw	r4,152(sp)
10108ee4:	d8c02215 	stw	r3,136(sp)
10108ee8:	1029883a 	mov	r20,r2
10108eec:	94c4b03a 	or	r2,r18,r19
10108ef0:	103fb21e 	bne	r2,zero,10108dbc <__alt_data_end+0xfffe8dbc>
10108ef4:	0039883a 	mov	fp,zero
10108ef8:	00800084 	movi	r2,2
10108efc:	003e6b06 	br	101088ac <__alt_data_end+0xfffe88ac>
10108f00:	da802217 	ldw	r10,136(sp)
10108f04:	d8001d85 	stb	zero,118(sp)
10108f08:	0027883a 	mov	r19,zero
10108f0c:	50800104 	addi	r2,r10,4
10108f10:	54800017 	ldw	r18,0(r10)
10108f14:	483e6016 	blt	r9,zero,10108898 <__alt_data_end+0xfffe8898>
10108f18:	00ffdfc4 	movi	r3,-129
10108f1c:	d8802215 	stw	r2,136(sp)
10108f20:	a0e8703a 	and	r20,r20,r3
10108f24:	0039883a 	mov	fp,zero
10108f28:	903ebb26 	beq	r18,zero,10108a18 <__alt_data_end+0xfffe8a18>
10108f2c:	00800244 	movi	r2,9
10108f30:	14bdee36 	bltu	r2,r18,101086ec <__alt_data_end+0xfffe86ec>
10108f34:	003eba06 	br	10108a20 <__alt_data_end+0xfffe8a20>
10108f38:	00800c04 	movi	r2,48
10108f3c:	d8c01d45 	stb	r3,117(sp)
10108f40:	d8801d05 	stb	r2,116(sp)
10108f44:	d8001d85 	stb	zero,118(sp)
10108f48:	a0c00094 	ori	r3,r20,2
10108f4c:	4800a916 	blt	r9,zero,101091f4 <___vfiprintf_internal_r+0x1314>
10108f50:	00bfdfc4 	movi	r2,-129
10108f54:	a096703a 	and	r11,r20,r2
10108f58:	5d000094 	ori	r20,r11,2
10108f5c:	0039883a 	mov	fp,zero
10108f60:	003f9706 	br	10108dc0 <__alt_data_end+0xfffe8dc0>
10108f64:	8025883a 	mov	r18,r16
10108f68:	003c2e06 	br	10108024 <__alt_data_end+0xfffe8024>
10108f6c:	00840474 	movhi	r2,4113
10108f70:	10bdbf04 	addi	r2,r2,-2308
10108f74:	0039883a 	mov	fp,zero
10108f78:	d8802615 	stw	r2,152(sp)
10108f7c:	003f9006 	br	10108dc0 <__alt_data_end+0xfffe8dc0>
10108f80:	04a5c83a 	sub	r18,zero,r18
10108f84:	07000b44 	movi	fp,45
10108f88:	9004c03a 	cmpne	r2,r18,zero
10108f8c:	04e7c83a 	sub	r19,zero,r19
10108f90:	df001d85 	stb	fp,118(sp)
10108f94:	98a7c83a 	sub	r19,r19,r2
10108f98:	48009f16 	blt	r9,zero,10109218 <___vfiprintf_internal_r+0x1338>
10108f9c:	00bfdfc4 	movi	r2,-129
10108fa0:	a0a8703a 	and	r20,r20,r2
10108fa4:	003dd006 	br	101086e8 <__alt_data_end+0xfffe86e8>
10108fa8:	70004c26 	beq	r14,zero,101090dc <___vfiprintf_internal_r+0x11fc>
10108fac:	00800084 	movi	r2,2
10108fb0:	d8c01d04 	addi	r3,sp,116
10108fb4:	d8c00015 	stw	r3,0(sp)
10108fb8:	d8800115 	stw	r2,4(sp)
10108fbc:	01000044 	movi	r4,1
10108fc0:	d811883a 	mov	r8,sp
10108fc4:	003f7306 	br	10108d94 <__alt_data_end+0xfffe8d94>
10108fc8:	a080100c 	andi	r2,r20,64
10108fcc:	da802217 	ldw	r10,136(sp)
10108fd0:	103e0626 	beq	r2,zero,101087ec <__alt_data_end+0xfffe87ec>
10108fd4:	5480000f 	ldh	r18,0(r10)
10108fd8:	52800104 	addi	r10,r10,4
10108fdc:	da802215 	stw	r10,136(sp)
10108fe0:	9027d7fa 	srai	r19,r18,31
10108fe4:	9805883a 	mov	r2,r19
10108fe8:	003db806 	br	101086cc <__alt_data_end+0xfffe86cc>
10108fec:	a080040c 	andi	r2,r20,16
10108ff0:	1000091e 	bne	r2,zero,10109018 <___vfiprintf_internal_r+0x1138>
10108ff4:	a2c0100c 	andi	r11,r20,64
10108ff8:	58000726 	beq	r11,zero,10109018 <___vfiprintf_internal_r+0x1138>
10108ffc:	da802217 	ldw	r10,136(sp)
10109000:	50800017 	ldw	r2,0(r10)
10109004:	52800104 	addi	r10,r10,4
10109008:	da802215 	stw	r10,136(sp)
1010900c:	da802317 	ldw	r10,140(sp)
10109010:	1280000d 	sth	r10,0(r2)
10109014:	003be706 	br	10107fb4 <__alt_data_end+0xfffe7fb4>
10109018:	da802217 	ldw	r10,136(sp)
1010901c:	50800017 	ldw	r2,0(r10)
10109020:	52800104 	addi	r10,r10,4
10109024:	da802215 	stw	r10,136(sp)
10109028:	da802317 	ldw	r10,140(sp)
1010902c:	12800015 	stw	r10,0(r2)
10109030:	003be006 	br	10107fb4 <__alt_data_end+0xfffe7fb4>
10109034:	a080100c 	andi	r2,r20,64
10109038:	da802217 	ldw	r10,136(sp)
1010903c:	10003026 	beq	r2,zero,10109100 <___vfiprintf_internal_r+0x1220>
10109040:	5480000b 	ldhu	r18,0(r10)
10109044:	52800104 	addi	r10,r10,4
10109048:	0027883a 	mov	r19,zero
1010904c:	da802215 	stw	r10,136(sp)
10109050:	003d8006 	br	10108654 <__alt_data_end+0xfffe8654>
10109054:	80c00007 	ldb	r3,0(r16)
10109058:	003c0006 	br	1010805c <__alt_data_end+0xfffe805c>
1010905c:	a080100c 	andi	r2,r20,64
10109060:	d8001d85 	stb	zero,118(sp)
10109064:	da802217 	ldw	r10,136(sp)
10109068:	1000201e 	bne	r2,zero,101090ec <___vfiprintf_internal_r+0x120c>
1010906c:	50800104 	addi	r2,r10,4
10109070:	54800017 	ldw	r18,0(r10)
10109074:	0027883a 	mov	r19,zero
10109078:	483def0e 	bge	r9,zero,10108838 <__alt_data_end+0xfffe8838>
1010907c:	94c6b03a 	or	r3,r18,r19
10109080:	d8802215 	stw	r2,136(sp)
10109084:	183d4e1e 	bne	r3,zero,101085c0 <__alt_data_end+0xfffe85c0>
10109088:	0039883a 	mov	fp,zero
1010908c:	0005883a 	mov	r2,zero
10109090:	003e0606 	br	101088ac <__alt_data_end+0xfffe88ac>
10109094:	d9402117 	ldw	r5,132(sp)
10109098:	d9002017 	ldw	r4,128(sp)
1010909c:	d9801a04 	addi	r6,sp,104
101090a0:	da402c15 	stw	r9,176(sp)
101090a4:	db802a15 	stw	r14,168(sp)
101090a8:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
101090ac:	da402c17 	ldw	r9,176(sp)
101090b0:	db802a17 	ldw	r14,168(sp)
101090b4:	103ede1e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
101090b8:	d9401b17 	ldw	r5,108(sp)
101090bc:	d8801c17 	ldw	r2,112(sp)
101090c0:	d811883a 	mov	r8,sp
101090c4:	29000044 	addi	r4,r5,1
101090c8:	003e7406 	br	10108a9c <__alt_data_end+0xfffe8a9c>
101090cc:	00bfffc4 	movi	r2,-1
101090d0:	003c5806 	br	10108234 <__alt_data_end+0xfffe8234>
101090d4:	d811883a 	mov	r8,sp
101090d8:	003ee806 	br	10108c7c <__alt_data_end+0xfffe8c7c>
101090dc:	000b883a 	mov	r5,zero
101090e0:	01000044 	movi	r4,1
101090e4:	d811883a 	mov	r8,sp
101090e8:	003e7c06 	br	10108adc <__alt_data_end+0xfffe8adc>
101090ec:	50800104 	addi	r2,r10,4
101090f0:	5480000b 	ldhu	r18,0(r10)
101090f4:	0027883a 	mov	r19,zero
101090f8:	483dcf0e 	bge	r9,zero,10108838 <__alt_data_end+0xfffe8838>
101090fc:	003fdf06 	br	1010907c <__alt_data_end+0xfffe907c>
10109100:	54800017 	ldw	r18,0(r10)
10109104:	52800104 	addi	r10,r10,4
10109108:	0027883a 	mov	r19,zero
1010910c:	da802215 	stw	r10,136(sp)
10109110:	003d5006 	br	10108654 <__alt_data_end+0xfffe8654>
10109114:	50800104 	addi	r2,r10,4
10109118:	5480000b 	ldhu	r18,0(r10)
1010911c:	0027883a 	mov	r19,zero
10109120:	483f7d0e 	bge	r9,zero,10108f18 <__alt_data_end+0xfffe8f18>
10109124:	003ddc06 	br	10108898 <__alt_data_end+0xfffe8898>
10109128:	d8c02215 	stw	r3,136(sp)
1010912c:	0039883a 	mov	fp,zero
10109130:	003ddb06 	br	101088a0 <__alt_data_end+0xfffe88a0>
10109134:	02840474 	movhi	r10,4113
10109138:	52be2004 	addi	r10,r10,-1920
1010913c:	da802415 	stw	r10,144(sp)
10109140:	003e8306 	br	10108b50 <__alt_data_end+0xfffe8b50>
10109144:	d8801c17 	ldw	r2,112(sp)
10109148:	dd002117 	ldw	r20,132(sp)
1010914c:	103eb926 	beq	r2,zero,10108c34 <__alt_data_end+0xfffe8c34>
10109150:	d9002017 	ldw	r4,128(sp)
10109154:	d9801a04 	addi	r6,sp,104
10109158:	a00b883a 	mov	r5,r20
1010915c:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
10109160:	003eb406 	br	10108c34 <__alt_data_end+0xfffe8c34>
10109164:	80c00043 	ldbu	r3,1(r16)
10109168:	a5000814 	ori	r20,r20,32
1010916c:	84000044 	addi	r16,r16,1
10109170:	18c03fcc 	andi	r3,r3,255
10109174:	18c0201c 	xori	r3,r3,128
10109178:	18ffe004 	addi	r3,r3,-128
1010917c:	003bb706 	br	1010805c <__alt_data_end+0xfffe805c>
10109180:	a809883a 	mov	r4,r21
10109184:	d8c02a15 	stw	r3,168(sp)
10109188:	da002b15 	stw	r8,172(sp)
1010918c:	01008340 	call	10100834 <strlen>
10109190:	d8c02a17 	ldw	r3,168(sp)
10109194:	1027883a 	mov	r19,r2
10109198:	df001d83 	ldbu	fp,118(sp)
1010919c:	d8c02215 	stw	r3,136(sp)
101091a0:	0013883a 	mov	r9,zero
101091a4:	da002b17 	ldw	r8,172(sp)
101091a8:	003c4d06 	br	101082e0 <__alt_data_end+0xfffe82e0>
101091ac:	d9402117 	ldw	r5,132(sp)
101091b0:	d9002017 	ldw	r4,128(sp)
101091b4:	d9801a04 	addi	r6,sp,104
101091b8:	da402c15 	stw	r9,176(sp)
101091bc:	0107dcc0 	call	10107dcc <__sprint_r.part.0>
101091c0:	da402c17 	ldw	r9,176(sp)
101091c4:	103e9a1e 	bne	r2,zero,10108c30 <__alt_data_end+0xfffe8c30>
101091c8:	d9401b17 	ldw	r5,108(sp)
101091cc:	d8801c17 	ldw	r2,112(sp)
101091d0:	d811883a 	mov	r8,sp
101091d4:	29000044 	addi	r4,r5,1
101091d8:	003e4206 	br	10108ae4 <__alt_data_end+0xfffe8ae4>
101091dc:	d9401b17 	ldw	r5,108(sp)
101091e0:	01040474 	movhi	r4,4113
101091e4:	213e2404 	addi	r4,r4,-1904
101091e8:	d9002415 	stw	r4,144(sp)
101091ec:	29400044 	addi	r5,r5,1
101091f0:	003c6d06 	br	101083a8 <__alt_data_end+0xfffe83a8>
101091f4:	0039883a 	mov	fp,zero
101091f8:	00800084 	movi	r2,2
101091fc:	10803fcc 	andi	r2,r2,255
10109200:	01000044 	movi	r4,1
10109204:	11001e26 	beq	r2,r4,10109280 <___vfiprintf_internal_r+0x13a0>
10109208:	01000084 	movi	r4,2
1010920c:	11001e1e 	bne	r2,r4,10109288 <___vfiprintf_internal_r+0x13a8>
10109210:	1829883a 	mov	r20,r3
10109214:	003eea06 	br	10108dc0 <__alt_data_end+0xfffe8dc0>
10109218:	a007883a 	mov	r3,r20
1010921c:	00800044 	movi	r2,1
10109220:	003ff606 	br	101091fc <__alt_data_end+0xfffe91fc>
10109224:	00800184 	movi	r2,6
10109228:	1240012e 	bgeu	r2,r9,10109230 <___vfiprintf_internal_r+0x1350>
1010922c:	1013883a 	mov	r9,r2
10109230:	4827883a 	mov	r19,r9
10109234:	4825883a 	mov	r18,r9
10109238:	48001516 	blt	r9,zero,10109290 <___vfiprintf_internal_r+0x13b0>
1010923c:	05440474 	movhi	r21,4113
10109240:	d8c02215 	stw	r3,136(sp)
10109244:	ad7dc404 	addi	r21,r21,-2288
10109248:	003d1406 	br	1010869c <__alt_data_end+0xfffe869c>
1010924c:	02840474 	movhi	r10,4113
10109250:	52be2004 	addi	r10,r10,-1920
10109254:	da802415 	stw	r10,144(sp)
10109258:	200d883a 	mov	r6,r4
1010925c:	003c9106 	br	101084a4 <__alt_data_end+0xfffe84a4>
10109260:	5021883a 	mov	r16,r10
10109264:	0013883a 	mov	r9,zero
10109268:	003b7d06 	br	10108060 <__alt_data_end+0xfffe8060>
1010926c:	4827883a 	mov	r19,r9
10109270:	df001d83 	ldbu	fp,118(sp)
10109274:	d8c02215 	stw	r3,136(sp)
10109278:	0013883a 	mov	r9,zero
1010927c:	003c1806 	br	101082e0 <__alt_data_end+0xfffe82e0>
10109280:	1829883a 	mov	r20,r3
10109284:	003d1806 	br	101086e8 <__alt_data_end+0xfffe86e8>
10109288:	1829883a 	mov	r20,r3
1010928c:	003ccd06 	br	101085c4 <__alt_data_end+0xfffe85c4>
10109290:	0025883a 	mov	r18,zero
10109294:	003fe906 	br	1010923c <__alt_data_end+0xfffe923c>
10109298:	d8802217 	ldw	r2,136(sp)
1010929c:	80c00043 	ldbu	r3,1(r16)
101092a0:	5021883a 	mov	r16,r10
101092a4:	12400017 	ldw	r9,0(r2)
101092a8:	10800104 	addi	r2,r2,4
101092ac:	d8802215 	stw	r2,136(sp)
101092b0:	483faf0e 	bge	r9,zero,10109170 <__alt_data_end+0xfffe9170>
101092b4:	18c03fcc 	andi	r3,r3,255
101092b8:	18c0201c 	xori	r3,r3,128
101092bc:	027fffc4 	movi	r9,-1
101092c0:	18ffe004 	addi	r3,r3,-128
101092c4:	003b6506 	br	1010805c <__alt_data_end+0xfffe805c>
101092c8:	d9c01d85 	stb	r7,118(sp)
101092cc:	003ca006 	br	10108550 <__alt_data_end+0xfffe8550>
101092d0:	d9c01d85 	stb	r7,118(sp)
101092d4:	003cad06 	br	1010858c <__alt_data_end+0xfffe858c>
101092d8:	d9c01d85 	stb	r7,118(sp)
101092dc:	003d7d06 	br	101088d4 <__alt_data_end+0xfffe88d4>
101092e0:	d9c01d85 	stb	r7,118(sp)
101092e4:	003d5f06 	br	10108864 <__alt_data_end+0xfffe8864>
101092e8:	a080004c 	andi	r2,r20,1
101092ec:	0039883a 	mov	fp,zero
101092f0:	10000526 	beq	r2,zero,10109308 <___vfiprintf_internal_r+0x1428>
101092f4:	00800c04 	movi	r2,48
101092f8:	d88019c5 	stb	r2,103(sp)
101092fc:	dcc02717 	ldw	r19,156(sp)
10109300:	dd4019c4 	addi	r21,sp,103
10109304:	003bf606 	br	101082e0 <__alt_data_end+0xfffe82e0>
10109308:	0027883a 	mov	r19,zero
1010930c:	dd401a04 	addi	r21,sp,104
10109310:	003bf306 	br	101082e0 <__alt_data_end+0xfffe82e0>
10109314:	d9c01d85 	stb	r7,118(sp)
10109318:	003dc806 	br	10108a3c <__alt_data_end+0xfffe8a3c>
1010931c:	d9c01d85 	stb	r7,118(sp)
10109320:	003d3a06 	br	1010880c <__alt_data_end+0xfffe880c>
10109324:	d9c01d85 	stb	r7,118(sp)
10109328:	003d2a06 	br	101087d4 <__alt_data_end+0xfffe87d4>
1010932c:	d9c01d85 	stb	r7,118(sp)
10109330:	003cde06 	br	101086ac <__alt_data_end+0xfffe86ac>
10109334:	d9c01d85 	stb	r7,118(sp)
10109338:	003cbc06 	br	1010862c <__alt_data_end+0xfffe862c>

1010933c <__vfiprintf_internal>:
1010933c:	00840474 	movhi	r2,4113
10109340:	10852104 	addi	r2,r2,5252
10109344:	300f883a 	mov	r7,r6
10109348:	280d883a 	mov	r6,r5
1010934c:	200b883a 	mov	r5,r4
10109350:	11000017 	ldw	r4,0(r2)
10109354:	0107ee01 	jmpi	10107ee0 <___vfiprintf_internal_r>

10109358 <__sbprintf>:
10109358:	2880030b 	ldhu	r2,12(r5)
1010935c:	2ac01917 	ldw	r11,100(r5)
10109360:	2a80038b 	ldhu	r10,14(r5)
10109364:	2a400717 	ldw	r9,28(r5)
10109368:	2a000917 	ldw	r8,36(r5)
1010936c:	defee204 	addi	sp,sp,-1144
10109370:	00c10004 	movi	r3,1024
10109374:	dc011a15 	stw	r16,1128(sp)
10109378:	10bfff4c 	andi	r2,r2,65533
1010937c:	2821883a 	mov	r16,r5
10109380:	d8cb883a 	add	r5,sp,r3
10109384:	dc811c15 	stw	r18,1136(sp)
10109388:	dc411b15 	stw	r17,1132(sp)
1010938c:	dfc11d15 	stw	ra,1140(sp)
10109390:	2025883a 	mov	r18,r4
10109394:	d881030d 	sth	r2,1036(sp)
10109398:	dac11915 	stw	r11,1124(sp)
1010939c:	da81038d 	sth	r10,1038(sp)
101093a0:	da410715 	stw	r9,1052(sp)
101093a4:	da010915 	stw	r8,1060(sp)
101093a8:	dec10015 	stw	sp,1024(sp)
101093ac:	dec10415 	stw	sp,1040(sp)
101093b0:	d8c10215 	stw	r3,1032(sp)
101093b4:	d8c10515 	stw	r3,1044(sp)
101093b8:	d8010615 	stw	zero,1048(sp)
101093bc:	0107ee00 	call	10107ee0 <___vfiprintf_internal_r>
101093c0:	1023883a 	mov	r17,r2
101093c4:	10000416 	blt	r2,zero,101093d8 <__sbprintf+0x80>
101093c8:	d9410004 	addi	r5,sp,1024
101093cc:	9009883a 	mov	r4,r18
101093d0:	01047940 	call	10104794 <_fflush_r>
101093d4:	10000d1e 	bne	r2,zero,1010940c <__sbprintf+0xb4>
101093d8:	d881030b 	ldhu	r2,1036(sp)
101093dc:	1080100c 	andi	r2,r2,64
101093e0:	10000326 	beq	r2,zero,101093f0 <__sbprintf+0x98>
101093e4:	8080030b 	ldhu	r2,12(r16)
101093e8:	10801014 	ori	r2,r2,64
101093ec:	8080030d 	sth	r2,12(r16)
101093f0:	8805883a 	mov	r2,r17
101093f4:	dfc11d17 	ldw	ra,1140(sp)
101093f8:	dc811c17 	ldw	r18,1136(sp)
101093fc:	dc411b17 	ldw	r17,1132(sp)
10109400:	dc011a17 	ldw	r16,1128(sp)
10109404:	dec11e04 	addi	sp,sp,1144
10109408:	f800283a 	ret
1010940c:	047fffc4 	movi	r17,-1
10109410:	003ff106 	br	101093d8 <__alt_data_end+0xfffe93d8>

10109414 <_write_r>:
10109414:	defffd04 	addi	sp,sp,-12
10109418:	2805883a 	mov	r2,r5
1010941c:	dc000015 	stw	r16,0(sp)
10109420:	04040474 	movhi	r16,4113
10109424:	dc400115 	stw	r17,4(sp)
10109428:	300b883a 	mov	r5,r6
1010942c:	840bf104 	addi	r16,r16,12228
10109430:	2023883a 	mov	r17,r4
10109434:	380d883a 	mov	r6,r7
10109438:	1009883a 	mov	r4,r2
1010943c:	dfc00215 	stw	ra,8(sp)
10109440:	80000015 	stw	zero,0(r16)
10109444:	010d8600 	call	1010d860 <write>
10109448:	00ffffc4 	movi	r3,-1
1010944c:	10c00526 	beq	r2,r3,10109464 <_write_r+0x50>
10109450:	dfc00217 	ldw	ra,8(sp)
10109454:	dc400117 	ldw	r17,4(sp)
10109458:	dc000017 	ldw	r16,0(sp)
1010945c:	dec00304 	addi	sp,sp,12
10109460:	f800283a 	ret
10109464:	80c00017 	ldw	r3,0(r16)
10109468:	183ff926 	beq	r3,zero,10109450 <__alt_data_end+0xfffe9450>
1010946c:	88c00015 	stw	r3,0(r17)
10109470:	003ff706 	br	10109450 <__alt_data_end+0xfffe9450>

10109474 <_close_r>:
10109474:	defffd04 	addi	sp,sp,-12
10109478:	dc000015 	stw	r16,0(sp)
1010947c:	04040474 	movhi	r16,4113
10109480:	dc400115 	stw	r17,4(sp)
10109484:	840bf104 	addi	r16,r16,12228
10109488:	2023883a 	mov	r17,r4
1010948c:	2809883a 	mov	r4,r5
10109490:	dfc00215 	stw	ra,8(sp)
10109494:	80000015 	stw	zero,0(r16)
10109498:	010d0500 	call	1010d050 <close>
1010949c:	00ffffc4 	movi	r3,-1
101094a0:	10c00526 	beq	r2,r3,101094b8 <_close_r+0x44>
101094a4:	dfc00217 	ldw	ra,8(sp)
101094a8:	dc400117 	ldw	r17,4(sp)
101094ac:	dc000017 	ldw	r16,0(sp)
101094b0:	dec00304 	addi	sp,sp,12
101094b4:	f800283a 	ret
101094b8:	80c00017 	ldw	r3,0(r16)
101094bc:	183ff926 	beq	r3,zero,101094a4 <__alt_data_end+0xfffe94a4>
101094c0:	88c00015 	stw	r3,0(r17)
101094c4:	003ff706 	br	101094a4 <__alt_data_end+0xfffe94a4>

101094c8 <_calloc_r>:
101094c8:	298b383a 	mul	r5,r5,r6
101094cc:	defffe04 	addi	sp,sp,-8
101094d0:	dfc00115 	stw	ra,4(sp)
101094d4:	dc000015 	stw	r16,0(sp)
101094d8:	01058d00 	call	101058d0 <_malloc_r>
101094dc:	10002926 	beq	r2,zero,10109584 <_calloc_r+0xbc>
101094e0:	11bfff17 	ldw	r6,-4(r2)
101094e4:	1021883a 	mov	r16,r2
101094e8:	00bfff04 	movi	r2,-4
101094ec:	308c703a 	and	r6,r6,r2
101094f0:	00c00904 	movi	r3,36
101094f4:	308d883a 	add	r6,r6,r2
101094f8:	19801636 	bltu	r3,r6,10109554 <_calloc_r+0x8c>
101094fc:	008004c4 	movi	r2,19
10109500:	11800b2e 	bgeu	r2,r6,10109530 <_calloc_r+0x68>
10109504:	80000015 	stw	zero,0(r16)
10109508:	80000115 	stw	zero,4(r16)
1010950c:	008006c4 	movi	r2,27
10109510:	11801a2e 	bgeu	r2,r6,1010957c <_calloc_r+0xb4>
10109514:	80000215 	stw	zero,8(r16)
10109518:	80000315 	stw	zero,12(r16)
1010951c:	30c0151e 	bne	r6,r3,10109574 <_calloc_r+0xac>
10109520:	80000415 	stw	zero,16(r16)
10109524:	80800604 	addi	r2,r16,24
10109528:	80000515 	stw	zero,20(r16)
1010952c:	00000106 	br	10109534 <_calloc_r+0x6c>
10109530:	8005883a 	mov	r2,r16
10109534:	10000015 	stw	zero,0(r2)
10109538:	10000115 	stw	zero,4(r2)
1010953c:	10000215 	stw	zero,8(r2)
10109540:	8005883a 	mov	r2,r16
10109544:	dfc00117 	ldw	ra,4(sp)
10109548:	dc000017 	ldw	r16,0(sp)
1010954c:	dec00204 	addi	sp,sp,8
10109550:	f800283a 	ret
10109554:	000b883a 	mov	r5,zero
10109558:	8009883a 	mov	r4,r16
1010955c:	01064640 	call	10106464 <memset>
10109560:	8005883a 	mov	r2,r16
10109564:	dfc00117 	ldw	ra,4(sp)
10109568:	dc000017 	ldw	r16,0(sp)
1010956c:	dec00204 	addi	sp,sp,8
10109570:	f800283a 	ret
10109574:	80800404 	addi	r2,r16,16
10109578:	003fee06 	br	10109534 <__alt_data_end+0xfffe9534>
1010957c:	80800204 	addi	r2,r16,8
10109580:	003fec06 	br	10109534 <__alt_data_end+0xfffe9534>
10109584:	0005883a 	mov	r2,zero
10109588:	003fee06 	br	10109544 <__alt_data_end+0xfffe9544>

1010958c <_fclose_r>:
1010958c:	28003926 	beq	r5,zero,10109674 <_fclose_r+0xe8>
10109590:	defffc04 	addi	sp,sp,-16
10109594:	dc400115 	stw	r17,4(sp)
10109598:	dc000015 	stw	r16,0(sp)
1010959c:	dfc00315 	stw	ra,12(sp)
101095a0:	dc800215 	stw	r18,8(sp)
101095a4:	2023883a 	mov	r17,r4
101095a8:	2821883a 	mov	r16,r5
101095ac:	20000226 	beq	r4,zero,101095b8 <_fclose_r+0x2c>
101095b0:	20800e17 	ldw	r2,56(r4)
101095b4:	10002726 	beq	r2,zero,10109654 <_fclose_r+0xc8>
101095b8:	8080030f 	ldh	r2,12(r16)
101095bc:	1000071e 	bne	r2,zero,101095dc <_fclose_r+0x50>
101095c0:	0005883a 	mov	r2,zero
101095c4:	dfc00317 	ldw	ra,12(sp)
101095c8:	dc800217 	ldw	r18,8(sp)
101095cc:	dc400117 	ldw	r17,4(sp)
101095d0:	dc000017 	ldw	r16,0(sp)
101095d4:	dec00404 	addi	sp,sp,16
101095d8:	f800283a 	ret
101095dc:	800b883a 	mov	r5,r16
101095e0:	8809883a 	mov	r4,r17
101095e4:	01045780 	call	10104578 <__sflush_r>
101095e8:	1025883a 	mov	r18,r2
101095ec:	80800b17 	ldw	r2,44(r16)
101095f0:	10000426 	beq	r2,zero,10109604 <_fclose_r+0x78>
101095f4:	81400717 	ldw	r5,28(r16)
101095f8:	8809883a 	mov	r4,r17
101095fc:	103ee83a 	callr	r2
10109600:	10001616 	blt	r2,zero,1010965c <_fclose_r+0xd0>
10109604:	8080030b 	ldhu	r2,12(r16)
10109608:	1080200c 	andi	r2,r2,128
1010960c:	1000151e 	bne	r2,zero,10109664 <_fclose_r+0xd8>
10109610:	81400c17 	ldw	r5,48(r16)
10109614:	28000526 	beq	r5,zero,1010962c <_fclose_r+0xa0>
10109618:	80801004 	addi	r2,r16,64
1010961c:	28800226 	beq	r5,r2,10109628 <_fclose_r+0x9c>
10109620:	8809883a 	mov	r4,r17
10109624:	0104ce40 	call	10104ce4 <_free_r>
10109628:	80000c15 	stw	zero,48(r16)
1010962c:	81401117 	ldw	r5,68(r16)
10109630:	28000326 	beq	r5,zero,10109640 <_fclose_r+0xb4>
10109634:	8809883a 	mov	r4,r17
10109638:	0104ce40 	call	10104ce4 <_free_r>
1010963c:	80001115 	stw	zero,68(r16)
10109640:	0104b800 	call	10104b80 <__sfp_lock_acquire>
10109644:	8000030d 	sth	zero,12(r16)
10109648:	0104b840 	call	10104b84 <__sfp_lock_release>
1010964c:	9005883a 	mov	r2,r18
10109650:	003fdc06 	br	101095c4 <__alt_data_end+0xfffe95c4>
10109654:	0104b700 	call	10104b70 <__sinit>
10109658:	003fd706 	br	101095b8 <__alt_data_end+0xfffe95b8>
1010965c:	04bfffc4 	movi	r18,-1
10109660:	003fe806 	br	10109604 <__alt_data_end+0xfffe9604>
10109664:	81400417 	ldw	r5,16(r16)
10109668:	8809883a 	mov	r4,r17
1010966c:	0104ce40 	call	10104ce4 <_free_r>
10109670:	003fe706 	br	10109610 <__alt_data_end+0xfffe9610>
10109674:	0005883a 	mov	r2,zero
10109678:	f800283a 	ret

1010967c <fclose>:
1010967c:	00840474 	movhi	r2,4113
10109680:	10852104 	addi	r2,r2,5252
10109684:	200b883a 	mov	r5,r4
10109688:	11000017 	ldw	r4,0(r2)
1010968c:	010958c1 	jmpi	1010958c <_fclose_r>

10109690 <__fputwc>:
10109690:	defff804 	addi	sp,sp,-32
10109694:	dcc00415 	stw	r19,16(sp)
10109698:	dc800315 	stw	r18,12(sp)
1010969c:	dc000115 	stw	r16,4(sp)
101096a0:	dfc00715 	stw	ra,28(sp)
101096a4:	dd400615 	stw	r21,24(sp)
101096a8:	dd000515 	stw	r20,20(sp)
101096ac:	dc400215 	stw	r17,8(sp)
101096b0:	2027883a 	mov	r19,r4
101096b4:	2825883a 	mov	r18,r5
101096b8:	3021883a 	mov	r16,r6
101096bc:	01056c00 	call	101056c0 <__locale_mb_cur_max>
101096c0:	00c00044 	movi	r3,1
101096c4:	10c03e26 	beq	r2,r3,101097c0 <__fputwc+0x130>
101096c8:	81c01704 	addi	r7,r16,92
101096cc:	900d883a 	mov	r6,r18
101096d0:	d80b883a 	mov	r5,sp
101096d4:	9809883a 	mov	r4,r19
101096d8:	0109b600 	call	10109b60 <_wcrtomb_r>
101096dc:	1029883a 	mov	r20,r2
101096e0:	00bfffc4 	movi	r2,-1
101096e4:	a0802026 	beq	r20,r2,10109768 <__fputwc+0xd8>
101096e8:	d9400003 	ldbu	r5,0(sp)
101096ec:	a0001c26 	beq	r20,zero,10109760 <__fputwc+0xd0>
101096f0:	0023883a 	mov	r17,zero
101096f4:	05400284 	movi	r21,10
101096f8:	00000906 	br	10109720 <__fputwc+0x90>
101096fc:	80800017 	ldw	r2,0(r16)
10109700:	11400005 	stb	r5,0(r2)
10109704:	80c00017 	ldw	r3,0(r16)
10109708:	18c00044 	addi	r3,r3,1
1010970c:	80c00015 	stw	r3,0(r16)
10109710:	8c400044 	addi	r17,r17,1
10109714:	dc45883a 	add	r2,sp,r17
10109718:	8d00112e 	bgeu	r17,r20,10109760 <__fputwc+0xd0>
1010971c:	11400003 	ldbu	r5,0(r2)
10109720:	80c00217 	ldw	r3,8(r16)
10109724:	18ffffc4 	addi	r3,r3,-1
10109728:	80c00215 	stw	r3,8(r16)
1010972c:	183ff30e 	bge	r3,zero,101096fc <__alt_data_end+0xfffe96fc>
10109730:	80800617 	ldw	r2,24(r16)
10109734:	18801916 	blt	r3,r2,1010979c <__fputwc+0x10c>
10109738:	80800017 	ldw	r2,0(r16)
1010973c:	11400005 	stb	r5,0(r2)
10109740:	80800017 	ldw	r2,0(r16)
10109744:	10c00003 	ldbu	r3,0(r2)
10109748:	10800044 	addi	r2,r2,1
1010974c:	1d402326 	beq	r3,r21,101097dc <__fputwc+0x14c>
10109750:	80800015 	stw	r2,0(r16)
10109754:	8c400044 	addi	r17,r17,1
10109758:	dc45883a 	add	r2,sp,r17
1010975c:	8d3fef36 	bltu	r17,r20,1010971c <__alt_data_end+0xfffe971c>
10109760:	9005883a 	mov	r2,r18
10109764:	00000406 	br	10109778 <__fputwc+0xe8>
10109768:	80c0030b 	ldhu	r3,12(r16)
1010976c:	a005883a 	mov	r2,r20
10109770:	18c01014 	ori	r3,r3,64
10109774:	80c0030d 	sth	r3,12(r16)
10109778:	dfc00717 	ldw	ra,28(sp)
1010977c:	dd400617 	ldw	r21,24(sp)
10109780:	dd000517 	ldw	r20,20(sp)
10109784:	dcc00417 	ldw	r19,16(sp)
10109788:	dc800317 	ldw	r18,12(sp)
1010978c:	dc400217 	ldw	r17,8(sp)
10109790:	dc000117 	ldw	r16,4(sp)
10109794:	dec00804 	addi	sp,sp,32
10109798:	f800283a 	ret
1010979c:	800d883a 	mov	r6,r16
101097a0:	29403fcc 	andi	r5,r5,255
101097a4:	9809883a 	mov	r4,r19
101097a8:	0109a080 	call	10109a08 <__swbuf_r>
101097ac:	10bfffe0 	cmpeqi	r2,r2,-1
101097b0:	10803fcc 	andi	r2,r2,255
101097b4:	103fd626 	beq	r2,zero,10109710 <__alt_data_end+0xfffe9710>
101097b8:	00bfffc4 	movi	r2,-1
101097bc:	003fee06 	br	10109778 <__alt_data_end+0xfffe9778>
101097c0:	90ffffc4 	addi	r3,r18,-1
101097c4:	01003f84 	movi	r4,254
101097c8:	20ffbf36 	bltu	r4,r3,101096c8 <__alt_data_end+0xfffe96c8>
101097cc:	900b883a 	mov	r5,r18
101097d0:	dc800005 	stb	r18,0(sp)
101097d4:	1029883a 	mov	r20,r2
101097d8:	003fc506 	br	101096f0 <__alt_data_end+0xfffe96f0>
101097dc:	800d883a 	mov	r6,r16
101097e0:	a80b883a 	mov	r5,r21
101097e4:	9809883a 	mov	r4,r19
101097e8:	0109a080 	call	10109a08 <__swbuf_r>
101097ec:	10bfffe0 	cmpeqi	r2,r2,-1
101097f0:	003fef06 	br	101097b0 <__alt_data_end+0xfffe97b0>

101097f4 <_fputwc_r>:
101097f4:	3080030b 	ldhu	r2,12(r6)
101097f8:	10c8000c 	andi	r3,r2,8192
101097fc:	1800051e 	bne	r3,zero,10109814 <_fputwc_r+0x20>
10109800:	30c01917 	ldw	r3,100(r6)
10109804:	10880014 	ori	r2,r2,8192
10109808:	3080030d 	sth	r2,12(r6)
1010980c:	18880014 	ori	r2,r3,8192
10109810:	30801915 	stw	r2,100(r6)
10109814:	01096901 	jmpi	10109690 <__fputwc>

10109818 <fputwc>:
10109818:	00840474 	movhi	r2,4113
1010981c:	defffc04 	addi	sp,sp,-16
10109820:	10852104 	addi	r2,r2,5252
10109824:	dc000115 	stw	r16,4(sp)
10109828:	14000017 	ldw	r16,0(r2)
1010982c:	dc400215 	stw	r17,8(sp)
10109830:	dfc00315 	stw	ra,12(sp)
10109834:	2023883a 	mov	r17,r4
10109838:	80000226 	beq	r16,zero,10109844 <fputwc+0x2c>
1010983c:	80800e17 	ldw	r2,56(r16)
10109840:	10001026 	beq	r2,zero,10109884 <fputwc+0x6c>
10109844:	2880030b 	ldhu	r2,12(r5)
10109848:	10c8000c 	andi	r3,r2,8192
1010984c:	1800051e 	bne	r3,zero,10109864 <fputwc+0x4c>
10109850:	28c01917 	ldw	r3,100(r5)
10109854:	10880014 	ori	r2,r2,8192
10109858:	2880030d 	sth	r2,12(r5)
1010985c:	18880014 	ori	r2,r3,8192
10109860:	28801915 	stw	r2,100(r5)
10109864:	280d883a 	mov	r6,r5
10109868:	8009883a 	mov	r4,r16
1010986c:	880b883a 	mov	r5,r17
10109870:	dfc00317 	ldw	ra,12(sp)
10109874:	dc400217 	ldw	r17,8(sp)
10109878:	dc000117 	ldw	r16,4(sp)
1010987c:	dec00404 	addi	sp,sp,16
10109880:	01096901 	jmpi	10109690 <__fputwc>
10109884:	8009883a 	mov	r4,r16
10109888:	d9400015 	stw	r5,0(sp)
1010988c:	0104b700 	call	10104b70 <__sinit>
10109890:	d9400017 	ldw	r5,0(sp)
10109894:	003feb06 	br	10109844 <__alt_data_end+0xfffe9844>

10109898 <_fstat_r>:
10109898:	defffd04 	addi	sp,sp,-12
1010989c:	2805883a 	mov	r2,r5
101098a0:	dc000015 	stw	r16,0(sp)
101098a4:	04040474 	movhi	r16,4113
101098a8:	dc400115 	stw	r17,4(sp)
101098ac:	840bf104 	addi	r16,r16,12228
101098b0:	2023883a 	mov	r17,r4
101098b4:	300b883a 	mov	r5,r6
101098b8:	1009883a 	mov	r4,r2
101098bc:	dfc00215 	stw	ra,8(sp)
101098c0:	80000015 	stw	zero,0(r16)
101098c4:	010d1880 	call	1010d188 <fstat>
101098c8:	00ffffc4 	movi	r3,-1
101098cc:	10c00526 	beq	r2,r3,101098e4 <_fstat_r+0x4c>
101098d0:	dfc00217 	ldw	ra,8(sp)
101098d4:	dc400117 	ldw	r17,4(sp)
101098d8:	dc000017 	ldw	r16,0(sp)
101098dc:	dec00304 	addi	sp,sp,12
101098e0:	f800283a 	ret
101098e4:	80c00017 	ldw	r3,0(r16)
101098e8:	183ff926 	beq	r3,zero,101098d0 <__alt_data_end+0xfffe98d0>
101098ec:	88c00015 	stw	r3,0(r17)
101098f0:	003ff706 	br	101098d0 <__alt_data_end+0xfffe98d0>

101098f4 <_isatty_r>:
101098f4:	defffd04 	addi	sp,sp,-12
101098f8:	dc000015 	stw	r16,0(sp)
101098fc:	04040474 	movhi	r16,4113
10109900:	dc400115 	stw	r17,4(sp)
10109904:	840bf104 	addi	r16,r16,12228
10109908:	2023883a 	mov	r17,r4
1010990c:	2809883a 	mov	r4,r5
10109910:	dfc00215 	stw	ra,8(sp)
10109914:	80000015 	stw	zero,0(r16)
10109918:	010d2740 	call	1010d274 <isatty>
1010991c:	00ffffc4 	movi	r3,-1
10109920:	10c00526 	beq	r2,r3,10109938 <_isatty_r+0x44>
10109924:	dfc00217 	ldw	ra,8(sp)
10109928:	dc400117 	ldw	r17,4(sp)
1010992c:	dc000017 	ldw	r16,0(sp)
10109930:	dec00304 	addi	sp,sp,12
10109934:	f800283a 	ret
10109938:	80c00017 	ldw	r3,0(r16)
1010993c:	183ff926 	beq	r3,zero,10109924 <__alt_data_end+0xfffe9924>
10109940:	88c00015 	stw	r3,0(r17)
10109944:	003ff706 	br	10109924 <__alt_data_end+0xfffe9924>

10109948 <_lseek_r>:
10109948:	defffd04 	addi	sp,sp,-12
1010994c:	2805883a 	mov	r2,r5
10109950:	dc000015 	stw	r16,0(sp)
10109954:	04040474 	movhi	r16,4113
10109958:	dc400115 	stw	r17,4(sp)
1010995c:	300b883a 	mov	r5,r6
10109960:	840bf104 	addi	r16,r16,12228
10109964:	2023883a 	mov	r17,r4
10109968:	380d883a 	mov	r6,r7
1010996c:	1009883a 	mov	r4,r2
10109970:	dfc00215 	stw	ra,8(sp)
10109974:	80000015 	stw	zero,0(r16)
10109978:	010d4400 	call	1010d440 <lseek>
1010997c:	00ffffc4 	movi	r3,-1
10109980:	10c00526 	beq	r2,r3,10109998 <_lseek_r+0x50>
10109984:	dfc00217 	ldw	ra,8(sp)
10109988:	dc400117 	ldw	r17,4(sp)
1010998c:	dc000017 	ldw	r16,0(sp)
10109990:	dec00304 	addi	sp,sp,12
10109994:	f800283a 	ret
10109998:	80c00017 	ldw	r3,0(r16)
1010999c:	183ff926 	beq	r3,zero,10109984 <__alt_data_end+0xfffe9984>
101099a0:	88c00015 	stw	r3,0(r17)
101099a4:	003ff706 	br	10109984 <__alt_data_end+0xfffe9984>

101099a8 <_read_r>:
101099a8:	defffd04 	addi	sp,sp,-12
101099ac:	2805883a 	mov	r2,r5
101099b0:	dc000015 	stw	r16,0(sp)
101099b4:	04040474 	movhi	r16,4113
101099b8:	dc400115 	stw	r17,4(sp)
101099bc:	300b883a 	mov	r5,r6
101099c0:	840bf104 	addi	r16,r16,12228
101099c4:	2023883a 	mov	r17,r4
101099c8:	380d883a 	mov	r6,r7
101099cc:	1009883a 	mov	r4,r2
101099d0:	dfc00215 	stw	ra,8(sp)
101099d4:	80000015 	stw	zero,0(r16)
101099d8:	010d6140 	call	1010d614 <read>
101099dc:	00ffffc4 	movi	r3,-1
101099e0:	10c00526 	beq	r2,r3,101099f8 <_read_r+0x50>
101099e4:	dfc00217 	ldw	ra,8(sp)
101099e8:	dc400117 	ldw	r17,4(sp)
101099ec:	dc000017 	ldw	r16,0(sp)
101099f0:	dec00304 	addi	sp,sp,12
101099f4:	f800283a 	ret
101099f8:	80c00017 	ldw	r3,0(r16)
101099fc:	183ff926 	beq	r3,zero,101099e4 <__alt_data_end+0xfffe99e4>
10109a00:	88c00015 	stw	r3,0(r17)
10109a04:	003ff706 	br	101099e4 <__alt_data_end+0xfffe99e4>

10109a08 <__swbuf_r>:
10109a08:	defffb04 	addi	sp,sp,-20
10109a0c:	dcc00315 	stw	r19,12(sp)
10109a10:	dc800215 	stw	r18,8(sp)
10109a14:	dc000015 	stw	r16,0(sp)
10109a18:	dfc00415 	stw	ra,16(sp)
10109a1c:	dc400115 	stw	r17,4(sp)
10109a20:	2025883a 	mov	r18,r4
10109a24:	2827883a 	mov	r19,r5
10109a28:	3021883a 	mov	r16,r6
10109a2c:	20000226 	beq	r4,zero,10109a38 <__swbuf_r+0x30>
10109a30:	20800e17 	ldw	r2,56(r4)
10109a34:	10004226 	beq	r2,zero,10109b40 <__swbuf_r+0x138>
10109a38:	80800617 	ldw	r2,24(r16)
10109a3c:	8100030b 	ldhu	r4,12(r16)
10109a40:	80800215 	stw	r2,8(r16)
10109a44:	2080020c 	andi	r2,r4,8
10109a48:	10003626 	beq	r2,zero,10109b24 <__swbuf_r+0x11c>
10109a4c:	80c00417 	ldw	r3,16(r16)
10109a50:	18003426 	beq	r3,zero,10109b24 <__swbuf_r+0x11c>
10109a54:	2088000c 	andi	r2,r4,8192
10109a58:	9c403fcc 	andi	r17,r19,255
10109a5c:	10001a26 	beq	r2,zero,10109ac8 <__swbuf_r+0xc0>
10109a60:	80800017 	ldw	r2,0(r16)
10109a64:	81000517 	ldw	r4,20(r16)
10109a68:	10c7c83a 	sub	r3,r2,r3
10109a6c:	1900200e 	bge	r3,r4,10109af0 <__swbuf_r+0xe8>
10109a70:	18c00044 	addi	r3,r3,1
10109a74:	81000217 	ldw	r4,8(r16)
10109a78:	11400044 	addi	r5,r2,1
10109a7c:	81400015 	stw	r5,0(r16)
10109a80:	213fffc4 	addi	r4,r4,-1
10109a84:	81000215 	stw	r4,8(r16)
10109a88:	14c00005 	stb	r19,0(r2)
10109a8c:	80800517 	ldw	r2,20(r16)
10109a90:	10c01e26 	beq	r2,r3,10109b0c <__swbuf_r+0x104>
10109a94:	8080030b 	ldhu	r2,12(r16)
10109a98:	1080004c 	andi	r2,r2,1
10109a9c:	10000226 	beq	r2,zero,10109aa8 <__swbuf_r+0xa0>
10109aa0:	00800284 	movi	r2,10
10109aa4:	88801926 	beq	r17,r2,10109b0c <__swbuf_r+0x104>
10109aa8:	8805883a 	mov	r2,r17
10109aac:	dfc00417 	ldw	ra,16(sp)
10109ab0:	dcc00317 	ldw	r19,12(sp)
10109ab4:	dc800217 	ldw	r18,8(sp)
10109ab8:	dc400117 	ldw	r17,4(sp)
10109abc:	dc000017 	ldw	r16,0(sp)
10109ac0:	dec00504 	addi	sp,sp,20
10109ac4:	f800283a 	ret
10109ac8:	81401917 	ldw	r5,100(r16)
10109acc:	00b7ffc4 	movi	r2,-8193
10109ad0:	21080014 	ori	r4,r4,8192
10109ad4:	2884703a 	and	r2,r5,r2
10109ad8:	80801915 	stw	r2,100(r16)
10109adc:	80800017 	ldw	r2,0(r16)
10109ae0:	8100030d 	sth	r4,12(r16)
10109ae4:	81000517 	ldw	r4,20(r16)
10109ae8:	10c7c83a 	sub	r3,r2,r3
10109aec:	193fe016 	blt	r3,r4,10109a70 <__alt_data_end+0xfffe9a70>
10109af0:	800b883a 	mov	r5,r16
10109af4:	9009883a 	mov	r4,r18
10109af8:	01047940 	call	10104794 <_fflush_r>
10109afc:	1000071e 	bne	r2,zero,10109b1c <__swbuf_r+0x114>
10109b00:	80800017 	ldw	r2,0(r16)
10109b04:	00c00044 	movi	r3,1
10109b08:	003fda06 	br	10109a74 <__alt_data_end+0xfffe9a74>
10109b0c:	800b883a 	mov	r5,r16
10109b10:	9009883a 	mov	r4,r18
10109b14:	01047940 	call	10104794 <_fflush_r>
10109b18:	103fe326 	beq	r2,zero,10109aa8 <__alt_data_end+0xfffe9aa8>
10109b1c:	00bfffc4 	movi	r2,-1
10109b20:	003fe206 	br	10109aac <__alt_data_end+0xfffe9aac>
10109b24:	800b883a 	mov	r5,r16
10109b28:	9009883a 	mov	r4,r18
10109b2c:	0102b9c0 	call	10102b9c <__swsetup_r>
10109b30:	103ffa1e 	bne	r2,zero,10109b1c <__alt_data_end+0xfffe9b1c>
10109b34:	8100030b 	ldhu	r4,12(r16)
10109b38:	80c00417 	ldw	r3,16(r16)
10109b3c:	003fc506 	br	10109a54 <__alt_data_end+0xfffe9a54>
10109b40:	0104b700 	call	10104b70 <__sinit>
10109b44:	003fbc06 	br	10109a38 <__alt_data_end+0xfffe9a38>

10109b48 <__swbuf>:
10109b48:	00840474 	movhi	r2,4113
10109b4c:	10852104 	addi	r2,r2,5252
10109b50:	280d883a 	mov	r6,r5
10109b54:	200b883a 	mov	r5,r4
10109b58:	11000017 	ldw	r4,0(r2)
10109b5c:	0109a081 	jmpi	10109a08 <__swbuf_r>

10109b60 <_wcrtomb_r>:
10109b60:	defff604 	addi	sp,sp,-40
10109b64:	00840474 	movhi	r2,4113
10109b68:	dc800815 	stw	r18,32(sp)
10109b6c:	dc400715 	stw	r17,28(sp)
10109b70:	dc000615 	stw	r16,24(sp)
10109b74:	10852504 	addi	r2,r2,5268
10109b78:	dfc00915 	stw	ra,36(sp)
10109b7c:	2021883a 	mov	r16,r4
10109b80:	3823883a 	mov	r17,r7
10109b84:	14800017 	ldw	r18,0(r2)
10109b88:	28001426 	beq	r5,zero,10109bdc <_wcrtomb_r+0x7c>
10109b8c:	d9400415 	stw	r5,16(sp)
10109b90:	d9800515 	stw	r6,20(sp)
10109b94:	01056b40 	call	101056b4 <__locale_charset>
10109b98:	d9800517 	ldw	r6,20(sp)
10109b9c:	d9400417 	ldw	r5,16(sp)
10109ba0:	100f883a 	mov	r7,r2
10109ba4:	dc400015 	stw	r17,0(sp)
10109ba8:	8009883a 	mov	r4,r16
10109bac:	903ee83a 	callr	r18
10109bb0:	00ffffc4 	movi	r3,-1
10109bb4:	10c0031e 	bne	r2,r3,10109bc4 <_wcrtomb_r+0x64>
10109bb8:	88000015 	stw	zero,0(r17)
10109bbc:	00c02284 	movi	r3,138
10109bc0:	80c00015 	stw	r3,0(r16)
10109bc4:	dfc00917 	ldw	ra,36(sp)
10109bc8:	dc800817 	ldw	r18,32(sp)
10109bcc:	dc400717 	ldw	r17,28(sp)
10109bd0:	dc000617 	ldw	r16,24(sp)
10109bd4:	dec00a04 	addi	sp,sp,40
10109bd8:	f800283a 	ret
10109bdc:	01056b40 	call	101056b4 <__locale_charset>
10109be0:	100f883a 	mov	r7,r2
10109be4:	dc400015 	stw	r17,0(sp)
10109be8:	000d883a 	mov	r6,zero
10109bec:	d9400104 	addi	r5,sp,4
10109bf0:	8009883a 	mov	r4,r16
10109bf4:	903ee83a 	callr	r18
10109bf8:	003fed06 	br	10109bb0 <__alt_data_end+0xfffe9bb0>

10109bfc <wcrtomb>:
10109bfc:	defff604 	addi	sp,sp,-40
10109c00:	00840474 	movhi	r2,4113
10109c04:	dc800615 	stw	r18,24(sp)
10109c08:	dc400515 	stw	r17,20(sp)
10109c0c:	10852104 	addi	r2,r2,5252
10109c10:	dfc00915 	stw	ra,36(sp)
10109c14:	dd000815 	stw	r20,32(sp)
10109c18:	dcc00715 	stw	r19,28(sp)
10109c1c:	dc000415 	stw	r16,16(sp)
10109c20:	3025883a 	mov	r18,r6
10109c24:	14400017 	ldw	r17,0(r2)
10109c28:	20001926 	beq	r4,zero,10109c90 <wcrtomb+0x94>
10109c2c:	00840474 	movhi	r2,4113
10109c30:	10852504 	addi	r2,r2,5268
10109c34:	15000017 	ldw	r20,0(r2)
10109c38:	2021883a 	mov	r16,r4
10109c3c:	2827883a 	mov	r19,r5
10109c40:	01056b40 	call	101056b4 <__locale_charset>
10109c44:	100f883a 	mov	r7,r2
10109c48:	dc800015 	stw	r18,0(sp)
10109c4c:	980d883a 	mov	r6,r19
10109c50:	800b883a 	mov	r5,r16
10109c54:	8809883a 	mov	r4,r17
10109c58:	a03ee83a 	callr	r20
10109c5c:	00ffffc4 	movi	r3,-1
10109c60:	10c0031e 	bne	r2,r3,10109c70 <wcrtomb+0x74>
10109c64:	90000015 	stw	zero,0(r18)
10109c68:	00c02284 	movi	r3,138
10109c6c:	88c00015 	stw	r3,0(r17)
10109c70:	dfc00917 	ldw	ra,36(sp)
10109c74:	dd000817 	ldw	r20,32(sp)
10109c78:	dcc00717 	ldw	r19,28(sp)
10109c7c:	dc800617 	ldw	r18,24(sp)
10109c80:	dc400517 	ldw	r17,20(sp)
10109c84:	dc000417 	ldw	r16,16(sp)
10109c88:	dec00a04 	addi	sp,sp,40
10109c8c:	f800283a 	ret
10109c90:	00840474 	movhi	r2,4113
10109c94:	10852504 	addi	r2,r2,5268
10109c98:	14000017 	ldw	r16,0(r2)
10109c9c:	01056b40 	call	101056b4 <__locale_charset>
10109ca0:	100f883a 	mov	r7,r2
10109ca4:	dc800015 	stw	r18,0(sp)
10109ca8:	000d883a 	mov	r6,zero
10109cac:	d9400104 	addi	r5,sp,4
10109cb0:	8809883a 	mov	r4,r17
10109cb4:	803ee83a 	callr	r16
10109cb8:	003fe806 	br	10109c5c <__alt_data_end+0xfffe9c5c>

10109cbc <__ascii_wctomb>:
10109cbc:	28000526 	beq	r5,zero,10109cd4 <__ascii_wctomb+0x18>
10109cc0:	00803fc4 	movi	r2,255
10109cc4:	11800536 	bltu	r2,r6,10109cdc <__ascii_wctomb+0x20>
10109cc8:	29800005 	stb	r6,0(r5)
10109ccc:	00800044 	movi	r2,1
10109cd0:	f800283a 	ret
10109cd4:	0005883a 	mov	r2,zero
10109cd8:	f800283a 	ret
10109cdc:	00802284 	movi	r2,138
10109ce0:	20800015 	stw	r2,0(r4)
10109ce4:	00bfffc4 	movi	r2,-1
10109ce8:	f800283a 	ret

10109cec <_wctomb_r>:
10109cec:	00840474 	movhi	r2,4113
10109cf0:	defff904 	addi	sp,sp,-28
10109cf4:	10852504 	addi	r2,r2,5268
10109cf8:	dfc00615 	stw	ra,24(sp)
10109cfc:	dc400515 	stw	r17,20(sp)
10109d00:	dc000415 	stw	r16,16(sp)
10109d04:	3823883a 	mov	r17,r7
10109d08:	14000017 	ldw	r16,0(r2)
10109d0c:	d9000115 	stw	r4,4(sp)
10109d10:	d9400215 	stw	r5,8(sp)
10109d14:	d9800315 	stw	r6,12(sp)
10109d18:	01056b40 	call	101056b4 <__locale_charset>
10109d1c:	d9800317 	ldw	r6,12(sp)
10109d20:	d9400217 	ldw	r5,8(sp)
10109d24:	d9000117 	ldw	r4,4(sp)
10109d28:	100f883a 	mov	r7,r2
10109d2c:	dc400015 	stw	r17,0(sp)
10109d30:	803ee83a 	callr	r16
10109d34:	dfc00617 	ldw	ra,24(sp)
10109d38:	dc400517 	ldw	r17,20(sp)
10109d3c:	dc000417 	ldw	r16,16(sp)
10109d40:	dec00704 	addi	sp,sp,28
10109d44:	f800283a 	ret

10109d48 <__udivdi3>:
10109d48:	defff504 	addi	sp,sp,-44
10109d4c:	dcc00415 	stw	r19,16(sp)
10109d50:	dc000115 	stw	r16,4(sp)
10109d54:	dfc00a15 	stw	ra,40(sp)
10109d58:	df000915 	stw	fp,36(sp)
10109d5c:	ddc00815 	stw	r23,32(sp)
10109d60:	dd800715 	stw	r22,28(sp)
10109d64:	dd400615 	stw	r21,24(sp)
10109d68:	dd000515 	stw	r20,20(sp)
10109d6c:	dc800315 	stw	r18,12(sp)
10109d70:	dc400215 	stw	r17,8(sp)
10109d74:	2027883a 	mov	r19,r4
10109d78:	2821883a 	mov	r16,r5
10109d7c:	3800411e 	bne	r7,zero,10109e84 <__udivdi3+0x13c>
10109d80:	3023883a 	mov	r17,r6
10109d84:	2025883a 	mov	r18,r4
10109d88:	2980522e 	bgeu	r5,r6,10109ed4 <__udivdi3+0x18c>
10109d8c:	00bfffd4 	movui	r2,65535
10109d90:	282d883a 	mov	r22,r5
10109d94:	1180a836 	bltu	r2,r6,1010a038 <__udivdi3+0x2f0>
10109d98:	00803fc4 	movi	r2,255
10109d9c:	1185803a 	cmpltu	r2,r2,r6
10109da0:	100490fa 	slli	r2,r2,3
10109da4:	3086d83a 	srl	r3,r6,r2
10109da8:	01040474 	movhi	r4,4113
10109dac:	213e2804 	addi	r4,r4,-1888
10109db0:	20c7883a 	add	r3,r4,r3
10109db4:	18c00003 	ldbu	r3,0(r3)
10109db8:	1885883a 	add	r2,r3,r2
10109dbc:	00c00804 	movi	r3,32
10109dc0:	1887c83a 	sub	r3,r3,r2
10109dc4:	18000526 	beq	r3,zero,10109ddc <__udivdi3+0x94>
10109dc8:	80e0983a 	sll	r16,r16,r3
10109dcc:	9884d83a 	srl	r2,r19,r2
10109dd0:	30e2983a 	sll	r17,r6,r3
10109dd4:	98e4983a 	sll	r18,r19,r3
10109dd8:	142cb03a 	or	r22,r2,r16
10109ddc:	882ad43a 	srli	r21,r17,16
10109de0:	b009883a 	mov	r4,r22
10109de4:	8d3fffcc 	andi	r20,r17,65535
10109de8:	a80b883a 	mov	r5,r21
10109dec:	010a9540 	call	1010a954 <__umodsi3>
10109df0:	b009883a 	mov	r4,r22
10109df4:	a80b883a 	mov	r5,r21
10109df8:	1027883a 	mov	r19,r2
10109dfc:	010a8f00 	call	1010a8f0 <__udivsi3>
10109e00:	102d883a 	mov	r22,r2
10109e04:	9826943a 	slli	r19,r19,16
10109e08:	9004d43a 	srli	r2,r18,16
10109e0c:	a5a1383a 	mul	r16,r20,r22
10109e10:	14c4b03a 	or	r2,r2,r19
10109e14:	1400052e 	bgeu	r2,r16,10109e2c <__udivdi3+0xe4>
10109e18:	1445883a 	add	r2,r2,r17
10109e1c:	b0ffffc4 	addi	r3,r22,-1
10109e20:	14400136 	bltu	r2,r17,10109e28 <__udivdi3+0xe0>
10109e24:	14012336 	bltu	r2,r16,1010a2b4 <__udivdi3+0x56c>
10109e28:	182d883a 	mov	r22,r3
10109e2c:	1421c83a 	sub	r16,r2,r16
10109e30:	a80b883a 	mov	r5,r21
10109e34:	8009883a 	mov	r4,r16
10109e38:	010a9540 	call	1010a954 <__umodsi3>
10109e3c:	1027883a 	mov	r19,r2
10109e40:	a80b883a 	mov	r5,r21
10109e44:	8009883a 	mov	r4,r16
10109e48:	010a8f00 	call	1010a8f0 <__udivsi3>
10109e4c:	9826943a 	slli	r19,r19,16
10109e50:	a0a9383a 	mul	r20,r20,r2
10109e54:	94bfffcc 	andi	r18,r18,65535
10109e58:	94e4b03a 	or	r18,r18,r19
10109e5c:	9500052e 	bgeu	r18,r20,10109e74 <__udivdi3+0x12c>
10109e60:	8ca5883a 	add	r18,r17,r18
10109e64:	10ffffc4 	addi	r3,r2,-1
10109e68:	9440f136 	bltu	r18,r17,1010a230 <__udivdi3+0x4e8>
10109e6c:	9500f02e 	bgeu	r18,r20,1010a230 <__udivdi3+0x4e8>
10109e70:	10bfff84 	addi	r2,r2,-2
10109e74:	b00c943a 	slli	r6,r22,16
10109e78:	0007883a 	mov	r3,zero
10109e7c:	3084b03a 	or	r2,r6,r2
10109e80:	00005906 	br	10109fe8 <__udivdi3+0x2a0>
10109e84:	29c05636 	bltu	r5,r7,10109fe0 <__udivdi3+0x298>
10109e88:	00bfffd4 	movui	r2,65535
10109e8c:	11c0622e 	bgeu	r2,r7,1010a018 <__udivdi3+0x2d0>
10109e90:	00804034 	movhi	r2,256
10109e94:	10bfffc4 	addi	r2,r2,-1
10109e98:	11c0ee36 	bltu	r2,r7,1010a254 <__udivdi3+0x50c>
10109e9c:	00800404 	movi	r2,16
10109ea0:	3886d83a 	srl	r3,r7,r2
10109ea4:	01040474 	movhi	r4,4113
10109ea8:	213e2804 	addi	r4,r4,-1888
10109eac:	20c7883a 	add	r3,r4,r3
10109eb0:	18c00003 	ldbu	r3,0(r3)
10109eb4:	05400804 	movi	r21,32
10109eb8:	1885883a 	add	r2,r3,r2
10109ebc:	a8abc83a 	sub	r21,r21,r2
10109ec0:	a800621e 	bne	r21,zero,1010a04c <__udivdi3+0x304>
10109ec4:	3c00e936 	bltu	r7,r16,1010a26c <__udivdi3+0x524>
10109ec8:	9985403a 	cmpgeu	r2,r19,r6
10109ecc:	0007883a 	mov	r3,zero
10109ed0:	00004506 	br	10109fe8 <__udivdi3+0x2a0>
10109ed4:	3000041e 	bne	r6,zero,10109ee8 <__udivdi3+0x1a0>
10109ed8:	000b883a 	mov	r5,zero
10109edc:	01000044 	movi	r4,1
10109ee0:	010a8f00 	call	1010a8f0 <__udivsi3>
10109ee4:	1023883a 	mov	r17,r2
10109ee8:	00bfffd4 	movui	r2,65535
10109eec:	14404e2e 	bgeu	r2,r17,1010a028 <__udivdi3+0x2e0>
10109ef0:	00804034 	movhi	r2,256
10109ef4:	10bfffc4 	addi	r2,r2,-1
10109ef8:	1440d836 	bltu	r2,r17,1010a25c <__udivdi3+0x514>
10109efc:	00800404 	movi	r2,16
10109f00:	8886d83a 	srl	r3,r17,r2
10109f04:	01040474 	movhi	r4,4113
10109f08:	213e2804 	addi	r4,r4,-1888
10109f0c:	20c7883a 	add	r3,r4,r3
10109f10:	18c00003 	ldbu	r3,0(r3)
10109f14:	1885883a 	add	r2,r3,r2
10109f18:	00c00804 	movi	r3,32
10109f1c:	1887c83a 	sub	r3,r3,r2
10109f20:	18008f1e 	bne	r3,zero,1010a160 <__udivdi3+0x418>
10109f24:	882ad43a 	srli	r21,r17,16
10109f28:	8461c83a 	sub	r16,r16,r17
10109f2c:	8d3fffcc 	andi	r20,r17,65535
10109f30:	00c00044 	movi	r3,1
10109f34:	8009883a 	mov	r4,r16
10109f38:	a80b883a 	mov	r5,r21
10109f3c:	d8c00015 	stw	r3,0(sp)
10109f40:	010a9540 	call	1010a954 <__umodsi3>
10109f44:	8009883a 	mov	r4,r16
10109f48:	a80b883a 	mov	r5,r21
10109f4c:	1027883a 	mov	r19,r2
10109f50:	010a8f00 	call	1010a8f0 <__udivsi3>
10109f54:	9826943a 	slli	r19,r19,16
10109f58:	9008d43a 	srli	r4,r18,16
10109f5c:	1521383a 	mul	r16,r2,r20
10109f60:	102d883a 	mov	r22,r2
10109f64:	24c8b03a 	or	r4,r4,r19
10109f68:	d8c00017 	ldw	r3,0(sp)
10109f6c:	2400052e 	bgeu	r4,r16,10109f84 <__udivdi3+0x23c>
10109f70:	2449883a 	add	r4,r4,r17
10109f74:	b0bfffc4 	addi	r2,r22,-1
10109f78:	24400136 	bltu	r4,r17,10109f80 <__udivdi3+0x238>
10109f7c:	2400ca36 	bltu	r4,r16,1010a2a8 <__udivdi3+0x560>
10109f80:	102d883a 	mov	r22,r2
10109f84:	2421c83a 	sub	r16,r4,r16
10109f88:	a80b883a 	mov	r5,r21
10109f8c:	8009883a 	mov	r4,r16
10109f90:	d8c00015 	stw	r3,0(sp)
10109f94:	010a9540 	call	1010a954 <__umodsi3>
10109f98:	1027883a 	mov	r19,r2
10109f9c:	a80b883a 	mov	r5,r21
10109fa0:	8009883a 	mov	r4,r16
10109fa4:	010a8f00 	call	1010a8f0 <__udivsi3>
10109fa8:	9826943a 	slli	r19,r19,16
10109fac:	1529383a 	mul	r20,r2,r20
10109fb0:	94bfffcc 	andi	r18,r18,65535
10109fb4:	94e4b03a 	or	r18,r18,r19
10109fb8:	d8c00017 	ldw	r3,0(sp)
10109fbc:	9500052e 	bgeu	r18,r20,10109fd4 <__udivdi3+0x28c>
10109fc0:	8ca5883a 	add	r18,r17,r18
10109fc4:	113fffc4 	addi	r4,r2,-1
10109fc8:	94409736 	bltu	r18,r17,1010a228 <__udivdi3+0x4e0>
10109fcc:	9500962e 	bgeu	r18,r20,1010a228 <__udivdi3+0x4e0>
10109fd0:	10bfff84 	addi	r2,r2,-2
10109fd4:	b00c943a 	slli	r6,r22,16
10109fd8:	3084b03a 	or	r2,r6,r2
10109fdc:	00000206 	br	10109fe8 <__udivdi3+0x2a0>
10109fe0:	0007883a 	mov	r3,zero
10109fe4:	0005883a 	mov	r2,zero
10109fe8:	dfc00a17 	ldw	ra,40(sp)
10109fec:	df000917 	ldw	fp,36(sp)
10109ff0:	ddc00817 	ldw	r23,32(sp)
10109ff4:	dd800717 	ldw	r22,28(sp)
10109ff8:	dd400617 	ldw	r21,24(sp)
10109ffc:	dd000517 	ldw	r20,20(sp)
1010a000:	dcc00417 	ldw	r19,16(sp)
1010a004:	dc800317 	ldw	r18,12(sp)
1010a008:	dc400217 	ldw	r17,8(sp)
1010a00c:	dc000117 	ldw	r16,4(sp)
1010a010:	dec00b04 	addi	sp,sp,44
1010a014:	f800283a 	ret
1010a018:	00803fc4 	movi	r2,255
1010a01c:	11c5803a 	cmpltu	r2,r2,r7
1010a020:	100490fa 	slli	r2,r2,3
1010a024:	003f9e06 	br	10109ea0 <__alt_data_end+0xfffe9ea0>
1010a028:	00803fc4 	movi	r2,255
1010a02c:	1445803a 	cmpltu	r2,r2,r17
1010a030:	100490fa 	slli	r2,r2,3
1010a034:	003fb206 	br	10109f00 <__alt_data_end+0xfffe9f00>
1010a038:	00804034 	movhi	r2,256
1010a03c:	10bfffc4 	addi	r2,r2,-1
1010a040:	11808836 	bltu	r2,r6,1010a264 <__udivdi3+0x51c>
1010a044:	00800404 	movi	r2,16
1010a048:	003f5606 	br	10109da4 <__alt_data_end+0xfffe9da4>
1010a04c:	30aed83a 	srl	r23,r6,r2
1010a050:	3d4e983a 	sll	r7,r7,r21
1010a054:	80acd83a 	srl	r22,r16,r2
1010a058:	9884d83a 	srl	r2,r19,r2
1010a05c:	3deeb03a 	or	r23,r7,r23
1010a060:	b824d43a 	srli	r18,r23,16
1010a064:	8560983a 	sll	r16,r16,r21
1010a068:	b009883a 	mov	r4,r22
1010a06c:	900b883a 	mov	r5,r18
1010a070:	3568983a 	sll	r20,r6,r21
1010a074:	1420b03a 	or	r16,r2,r16
1010a078:	010a9540 	call	1010a954 <__umodsi3>
1010a07c:	b009883a 	mov	r4,r22
1010a080:	900b883a 	mov	r5,r18
1010a084:	1023883a 	mov	r17,r2
1010a088:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a08c:	8808943a 	slli	r4,r17,16
1010a090:	bf3fffcc 	andi	fp,r23,65535
1010a094:	8006d43a 	srli	r3,r16,16
1010a098:	e0a3383a 	mul	r17,fp,r2
1010a09c:	100d883a 	mov	r6,r2
1010a0a0:	1906b03a 	or	r3,r3,r4
1010a0a4:	1c40042e 	bgeu	r3,r17,1010a0b8 <__udivdi3+0x370>
1010a0a8:	1dc7883a 	add	r3,r3,r23
1010a0ac:	10bfffc4 	addi	r2,r2,-1
1010a0b0:	1dc0752e 	bgeu	r3,r23,1010a288 <__udivdi3+0x540>
1010a0b4:	100d883a 	mov	r6,r2
1010a0b8:	1c63c83a 	sub	r17,r3,r17
1010a0bc:	900b883a 	mov	r5,r18
1010a0c0:	8809883a 	mov	r4,r17
1010a0c4:	d9800015 	stw	r6,0(sp)
1010a0c8:	010a9540 	call	1010a954 <__umodsi3>
1010a0cc:	102d883a 	mov	r22,r2
1010a0d0:	8809883a 	mov	r4,r17
1010a0d4:	900b883a 	mov	r5,r18
1010a0d8:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a0dc:	b02c943a 	slli	r22,r22,16
1010a0e0:	e089383a 	mul	r4,fp,r2
1010a0e4:	843fffcc 	andi	r16,r16,65535
1010a0e8:	85a0b03a 	or	r16,r16,r22
1010a0ec:	d9800017 	ldw	r6,0(sp)
1010a0f0:	8100042e 	bgeu	r16,r4,1010a104 <__udivdi3+0x3bc>
1010a0f4:	85e1883a 	add	r16,r16,r23
1010a0f8:	10ffffc4 	addi	r3,r2,-1
1010a0fc:	85c05e2e 	bgeu	r16,r23,1010a278 <__udivdi3+0x530>
1010a100:	1805883a 	mov	r2,r3
1010a104:	300c943a 	slli	r6,r6,16
1010a108:	a17fffcc 	andi	r5,r20,65535
1010a10c:	a028d43a 	srli	r20,r20,16
1010a110:	3084b03a 	or	r2,r6,r2
1010a114:	10ffffcc 	andi	r3,r2,65535
1010a118:	100cd43a 	srli	r6,r2,16
1010a11c:	194f383a 	mul	r7,r3,r5
1010a120:	1d07383a 	mul	r3,r3,r20
1010a124:	314b383a 	mul	r5,r6,r5
1010a128:	3810d43a 	srli	r8,r7,16
1010a12c:	8121c83a 	sub	r16,r16,r4
1010a130:	1947883a 	add	r3,r3,r5
1010a134:	40c7883a 	add	r3,r8,r3
1010a138:	350d383a 	mul	r6,r6,r20
1010a13c:	1940022e 	bgeu	r3,r5,1010a148 <__udivdi3+0x400>
1010a140:	01000074 	movhi	r4,1
1010a144:	310d883a 	add	r6,r6,r4
1010a148:	1828d43a 	srli	r20,r3,16
1010a14c:	a18d883a 	add	r6,r20,r6
1010a150:	81803e36 	bltu	r16,r6,1010a24c <__udivdi3+0x504>
1010a154:	81803826 	beq	r16,r6,1010a238 <__udivdi3+0x4f0>
1010a158:	0007883a 	mov	r3,zero
1010a15c:	003fa206 	br	10109fe8 <__alt_data_end+0xfffe9fe8>
1010a160:	88e2983a 	sll	r17,r17,r3
1010a164:	80a8d83a 	srl	r20,r16,r2
1010a168:	80e0983a 	sll	r16,r16,r3
1010a16c:	882ad43a 	srli	r21,r17,16
1010a170:	9884d83a 	srl	r2,r19,r2
1010a174:	a009883a 	mov	r4,r20
1010a178:	a80b883a 	mov	r5,r21
1010a17c:	142eb03a 	or	r23,r2,r16
1010a180:	98e4983a 	sll	r18,r19,r3
1010a184:	010a9540 	call	1010a954 <__umodsi3>
1010a188:	a009883a 	mov	r4,r20
1010a18c:	a80b883a 	mov	r5,r21
1010a190:	1021883a 	mov	r16,r2
1010a194:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a198:	1039883a 	mov	fp,r2
1010a19c:	8d3fffcc 	andi	r20,r17,65535
1010a1a0:	8020943a 	slli	r16,r16,16
1010a1a4:	b804d43a 	srli	r2,r23,16
1010a1a8:	a72d383a 	mul	r22,r20,fp
1010a1ac:	1404b03a 	or	r2,r2,r16
1010a1b0:	1580062e 	bgeu	r2,r22,1010a1cc <__udivdi3+0x484>
1010a1b4:	1445883a 	add	r2,r2,r17
1010a1b8:	e0ffffc4 	addi	r3,fp,-1
1010a1bc:	14403836 	bltu	r2,r17,1010a2a0 <__udivdi3+0x558>
1010a1c0:	1580372e 	bgeu	r2,r22,1010a2a0 <__udivdi3+0x558>
1010a1c4:	e73fff84 	addi	fp,fp,-2
1010a1c8:	1445883a 	add	r2,r2,r17
1010a1cc:	15adc83a 	sub	r22,r2,r22
1010a1d0:	a80b883a 	mov	r5,r21
1010a1d4:	b009883a 	mov	r4,r22
1010a1d8:	010a9540 	call	1010a954 <__umodsi3>
1010a1dc:	1027883a 	mov	r19,r2
1010a1e0:	b009883a 	mov	r4,r22
1010a1e4:	a80b883a 	mov	r5,r21
1010a1e8:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a1ec:	9826943a 	slli	r19,r19,16
1010a1f0:	a0a1383a 	mul	r16,r20,r2
1010a1f4:	b93fffcc 	andi	r4,r23,65535
1010a1f8:	24c8b03a 	or	r4,r4,r19
1010a1fc:	2400062e 	bgeu	r4,r16,1010a218 <__udivdi3+0x4d0>
1010a200:	2449883a 	add	r4,r4,r17
1010a204:	10ffffc4 	addi	r3,r2,-1
1010a208:	24402336 	bltu	r4,r17,1010a298 <__udivdi3+0x550>
1010a20c:	2400222e 	bgeu	r4,r16,1010a298 <__udivdi3+0x550>
1010a210:	10bfff84 	addi	r2,r2,-2
1010a214:	2449883a 	add	r4,r4,r17
1010a218:	e038943a 	slli	fp,fp,16
1010a21c:	2421c83a 	sub	r16,r4,r16
1010a220:	e086b03a 	or	r3,fp,r2
1010a224:	003f4306 	br	10109f34 <__alt_data_end+0xfffe9f34>
1010a228:	2005883a 	mov	r2,r4
1010a22c:	003f6906 	br	10109fd4 <__alt_data_end+0xfffe9fd4>
1010a230:	1805883a 	mov	r2,r3
1010a234:	003f0f06 	br	10109e74 <__alt_data_end+0xfffe9e74>
1010a238:	1806943a 	slli	r3,r3,16
1010a23c:	9d66983a 	sll	r19,r19,r21
1010a240:	39ffffcc 	andi	r7,r7,65535
1010a244:	19c7883a 	add	r3,r3,r7
1010a248:	98ffc32e 	bgeu	r19,r3,1010a158 <__alt_data_end+0xfffea158>
1010a24c:	10bfffc4 	addi	r2,r2,-1
1010a250:	003fc106 	br	1010a158 <__alt_data_end+0xfffea158>
1010a254:	00800604 	movi	r2,24
1010a258:	003f1106 	br	10109ea0 <__alt_data_end+0xfffe9ea0>
1010a25c:	00800604 	movi	r2,24
1010a260:	003f2706 	br	10109f00 <__alt_data_end+0xfffe9f00>
1010a264:	00800604 	movi	r2,24
1010a268:	003ece06 	br	10109da4 <__alt_data_end+0xfffe9da4>
1010a26c:	0007883a 	mov	r3,zero
1010a270:	00800044 	movi	r2,1
1010a274:	003f5c06 	br	10109fe8 <__alt_data_end+0xfffe9fe8>
1010a278:	813fa12e 	bgeu	r16,r4,1010a100 <__alt_data_end+0xfffea100>
1010a27c:	10bfff84 	addi	r2,r2,-2
1010a280:	85e1883a 	add	r16,r16,r23
1010a284:	003f9f06 	br	1010a104 <__alt_data_end+0xfffea104>
1010a288:	1c7f8a2e 	bgeu	r3,r17,1010a0b4 <__alt_data_end+0xfffea0b4>
1010a28c:	31bfff84 	addi	r6,r6,-2
1010a290:	1dc7883a 	add	r3,r3,r23
1010a294:	003f8806 	br	1010a0b8 <__alt_data_end+0xfffea0b8>
1010a298:	1805883a 	mov	r2,r3
1010a29c:	003fde06 	br	1010a218 <__alt_data_end+0xfffea218>
1010a2a0:	1839883a 	mov	fp,r3
1010a2a4:	003fc906 	br	1010a1cc <__alt_data_end+0xfffea1cc>
1010a2a8:	b5bfff84 	addi	r22,r22,-2
1010a2ac:	2449883a 	add	r4,r4,r17
1010a2b0:	003f3406 	br	10109f84 <__alt_data_end+0xfffe9f84>
1010a2b4:	b5bfff84 	addi	r22,r22,-2
1010a2b8:	1445883a 	add	r2,r2,r17
1010a2bc:	003edb06 	br	10109e2c <__alt_data_end+0xfffe9e2c>

1010a2c0 <__umoddi3>:
1010a2c0:	defff404 	addi	sp,sp,-48
1010a2c4:	df000a15 	stw	fp,40(sp)
1010a2c8:	dc400315 	stw	r17,12(sp)
1010a2cc:	dc000215 	stw	r16,8(sp)
1010a2d0:	dfc00b15 	stw	ra,44(sp)
1010a2d4:	ddc00915 	stw	r23,36(sp)
1010a2d8:	dd800815 	stw	r22,32(sp)
1010a2dc:	dd400715 	stw	r21,28(sp)
1010a2e0:	dd000615 	stw	r20,24(sp)
1010a2e4:	dcc00515 	stw	r19,20(sp)
1010a2e8:	dc800415 	stw	r18,16(sp)
1010a2ec:	2021883a 	mov	r16,r4
1010a2f0:	2823883a 	mov	r17,r5
1010a2f4:	2839883a 	mov	fp,r5
1010a2f8:	38003c1e 	bne	r7,zero,1010a3ec <__umoddi3+0x12c>
1010a2fc:	3027883a 	mov	r19,r6
1010a300:	2029883a 	mov	r20,r4
1010a304:	2980512e 	bgeu	r5,r6,1010a44c <__umoddi3+0x18c>
1010a308:	00bfffd4 	movui	r2,65535
1010a30c:	11809a36 	bltu	r2,r6,1010a578 <__umoddi3+0x2b8>
1010a310:	01003fc4 	movi	r4,255
1010a314:	2189803a 	cmpltu	r4,r4,r6
1010a318:	200890fa 	slli	r4,r4,3
1010a31c:	3104d83a 	srl	r2,r6,r4
1010a320:	00c40474 	movhi	r3,4113
1010a324:	18fe2804 	addi	r3,r3,-1888
1010a328:	1885883a 	add	r2,r3,r2
1010a32c:	10c00003 	ldbu	r3,0(r2)
1010a330:	00800804 	movi	r2,32
1010a334:	1909883a 	add	r4,r3,r4
1010a338:	1125c83a 	sub	r18,r2,r4
1010a33c:	90000526 	beq	r18,zero,1010a354 <__umoddi3+0x94>
1010a340:	8ca2983a 	sll	r17,r17,r18
1010a344:	8108d83a 	srl	r4,r16,r4
1010a348:	34a6983a 	sll	r19,r6,r18
1010a34c:	84a8983a 	sll	r20,r16,r18
1010a350:	2478b03a 	or	fp,r4,r17
1010a354:	982ed43a 	srli	r23,r19,16
1010a358:	e009883a 	mov	r4,fp
1010a35c:	9dbfffcc 	andi	r22,r19,65535
1010a360:	b80b883a 	mov	r5,r23
1010a364:	010a9540 	call	1010a954 <__umodsi3>
1010a368:	e009883a 	mov	r4,fp
1010a36c:	b80b883a 	mov	r5,r23
1010a370:	102b883a 	mov	r21,r2
1010a374:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a378:	a806943a 	slli	r3,r21,16
1010a37c:	a008d43a 	srli	r4,r20,16
1010a380:	b085383a 	mul	r2,r22,r2
1010a384:	20c8b03a 	or	r4,r4,r3
1010a388:	2080032e 	bgeu	r4,r2,1010a398 <__umoddi3+0xd8>
1010a38c:	24c9883a 	add	r4,r4,r19
1010a390:	24c00136 	bltu	r4,r19,1010a398 <__umoddi3+0xd8>
1010a394:	20811036 	bltu	r4,r2,1010a7d8 <__umoddi3+0x518>
1010a398:	20abc83a 	sub	r21,r4,r2
1010a39c:	b80b883a 	mov	r5,r23
1010a3a0:	a809883a 	mov	r4,r21
1010a3a4:	010a9540 	call	1010a954 <__umodsi3>
1010a3a8:	1023883a 	mov	r17,r2
1010a3ac:	b80b883a 	mov	r5,r23
1010a3b0:	a809883a 	mov	r4,r21
1010a3b4:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a3b8:	8822943a 	slli	r17,r17,16
1010a3bc:	b085383a 	mul	r2,r22,r2
1010a3c0:	a0ffffcc 	andi	r3,r20,65535
1010a3c4:	1c46b03a 	or	r3,r3,r17
1010a3c8:	1880042e 	bgeu	r3,r2,1010a3dc <__umoddi3+0x11c>
1010a3cc:	1cc7883a 	add	r3,r3,r19
1010a3d0:	1cc00236 	bltu	r3,r19,1010a3dc <__umoddi3+0x11c>
1010a3d4:	1880012e 	bgeu	r3,r2,1010a3dc <__umoddi3+0x11c>
1010a3d8:	1cc7883a 	add	r3,r3,r19
1010a3dc:	1885c83a 	sub	r2,r3,r2
1010a3e0:	1484d83a 	srl	r2,r2,r18
1010a3e4:	0007883a 	mov	r3,zero
1010a3e8:	00004f06 	br	1010a528 <__umoddi3+0x268>
1010a3ec:	29c04c36 	bltu	r5,r7,1010a520 <__umoddi3+0x260>
1010a3f0:	00bfffd4 	movui	r2,65535
1010a3f4:	11c0582e 	bgeu	r2,r7,1010a558 <__umoddi3+0x298>
1010a3f8:	00804034 	movhi	r2,256
1010a3fc:	10bfffc4 	addi	r2,r2,-1
1010a400:	11c0e736 	bltu	r2,r7,1010a7a0 <__umoddi3+0x4e0>
1010a404:	01000404 	movi	r4,16
1010a408:	3904d83a 	srl	r2,r7,r4
1010a40c:	00c40474 	movhi	r3,4113
1010a410:	18fe2804 	addi	r3,r3,-1888
1010a414:	1885883a 	add	r2,r3,r2
1010a418:	14c00003 	ldbu	r19,0(r2)
1010a41c:	00c00804 	movi	r3,32
1010a420:	9927883a 	add	r19,r19,r4
1010a424:	1ce9c83a 	sub	r20,r3,r19
1010a428:	a000581e 	bne	r20,zero,1010a58c <__umoddi3+0x2cc>
1010a42c:	3c400136 	bltu	r7,r17,1010a434 <__umoddi3+0x174>
1010a430:	8180eb36 	bltu	r16,r6,1010a7e0 <__umoddi3+0x520>
1010a434:	8185c83a 	sub	r2,r16,r6
1010a438:	89e3c83a 	sub	r17,r17,r7
1010a43c:	8089803a 	cmpltu	r4,r16,r2
1010a440:	8939c83a 	sub	fp,r17,r4
1010a444:	e007883a 	mov	r3,fp
1010a448:	00003706 	br	1010a528 <__umoddi3+0x268>
1010a44c:	3000041e 	bne	r6,zero,1010a460 <__umoddi3+0x1a0>
1010a450:	000b883a 	mov	r5,zero
1010a454:	01000044 	movi	r4,1
1010a458:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a45c:	1027883a 	mov	r19,r2
1010a460:	00bfffd4 	movui	r2,65535
1010a464:	14c0402e 	bgeu	r2,r19,1010a568 <__umoddi3+0x2a8>
1010a468:	00804034 	movhi	r2,256
1010a46c:	10bfffc4 	addi	r2,r2,-1
1010a470:	14c0cd36 	bltu	r2,r19,1010a7a8 <__umoddi3+0x4e8>
1010a474:	00800404 	movi	r2,16
1010a478:	9886d83a 	srl	r3,r19,r2
1010a47c:	01040474 	movhi	r4,4113
1010a480:	213e2804 	addi	r4,r4,-1888
1010a484:	20c7883a 	add	r3,r4,r3
1010a488:	18c00003 	ldbu	r3,0(r3)
1010a48c:	1887883a 	add	r3,r3,r2
1010a490:	00800804 	movi	r2,32
1010a494:	10e5c83a 	sub	r18,r2,r3
1010a498:	9000901e 	bne	r18,zero,1010a6dc <__umoddi3+0x41c>
1010a49c:	982cd43a 	srli	r22,r19,16
1010a4a0:	8ce3c83a 	sub	r17,r17,r19
1010a4a4:	9d7fffcc 	andi	r21,r19,65535
1010a4a8:	b00b883a 	mov	r5,r22
1010a4ac:	8809883a 	mov	r4,r17
1010a4b0:	010a9540 	call	1010a954 <__umodsi3>
1010a4b4:	8809883a 	mov	r4,r17
1010a4b8:	b00b883a 	mov	r5,r22
1010a4bc:	1021883a 	mov	r16,r2
1010a4c0:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a4c4:	8006943a 	slli	r3,r16,16
1010a4c8:	a008d43a 	srli	r4,r20,16
1010a4cc:	1545383a 	mul	r2,r2,r21
1010a4d0:	20c8b03a 	or	r4,r4,r3
1010a4d4:	2080042e 	bgeu	r4,r2,1010a4e8 <__umoddi3+0x228>
1010a4d8:	24c9883a 	add	r4,r4,r19
1010a4dc:	24c00236 	bltu	r4,r19,1010a4e8 <__umoddi3+0x228>
1010a4e0:	2080012e 	bgeu	r4,r2,1010a4e8 <__umoddi3+0x228>
1010a4e4:	24c9883a 	add	r4,r4,r19
1010a4e8:	20a1c83a 	sub	r16,r4,r2
1010a4ec:	b00b883a 	mov	r5,r22
1010a4f0:	8009883a 	mov	r4,r16
1010a4f4:	010a9540 	call	1010a954 <__umodsi3>
1010a4f8:	1023883a 	mov	r17,r2
1010a4fc:	b00b883a 	mov	r5,r22
1010a500:	8009883a 	mov	r4,r16
1010a504:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a508:	8822943a 	slli	r17,r17,16
1010a50c:	1545383a 	mul	r2,r2,r21
1010a510:	a53fffcc 	andi	r20,r20,65535
1010a514:	a446b03a 	or	r3,r20,r17
1010a518:	18bfb02e 	bgeu	r3,r2,1010a3dc <__alt_data_end+0xfffea3dc>
1010a51c:	003fab06 	br	1010a3cc <__alt_data_end+0xfffea3cc>
1010a520:	2005883a 	mov	r2,r4
1010a524:	2807883a 	mov	r3,r5
1010a528:	dfc00b17 	ldw	ra,44(sp)
1010a52c:	df000a17 	ldw	fp,40(sp)
1010a530:	ddc00917 	ldw	r23,36(sp)
1010a534:	dd800817 	ldw	r22,32(sp)
1010a538:	dd400717 	ldw	r21,28(sp)
1010a53c:	dd000617 	ldw	r20,24(sp)
1010a540:	dcc00517 	ldw	r19,20(sp)
1010a544:	dc800417 	ldw	r18,16(sp)
1010a548:	dc400317 	ldw	r17,12(sp)
1010a54c:	dc000217 	ldw	r16,8(sp)
1010a550:	dec00c04 	addi	sp,sp,48
1010a554:	f800283a 	ret
1010a558:	04c03fc4 	movi	r19,255
1010a55c:	99c9803a 	cmpltu	r4,r19,r7
1010a560:	200890fa 	slli	r4,r4,3
1010a564:	003fa806 	br	1010a408 <__alt_data_end+0xfffea408>
1010a568:	00803fc4 	movi	r2,255
1010a56c:	14c5803a 	cmpltu	r2,r2,r19
1010a570:	100490fa 	slli	r2,r2,3
1010a574:	003fc006 	br	1010a478 <__alt_data_end+0xfffea478>
1010a578:	00804034 	movhi	r2,256
1010a57c:	10bfffc4 	addi	r2,r2,-1
1010a580:	11808b36 	bltu	r2,r6,1010a7b0 <__umoddi3+0x4f0>
1010a584:	01000404 	movi	r4,16
1010a588:	003f6406 	br	1010a31c <__alt_data_end+0xfffea31c>
1010a58c:	34c4d83a 	srl	r2,r6,r19
1010a590:	3d0e983a 	sll	r7,r7,r20
1010a594:	8cf8d83a 	srl	fp,r17,r19
1010a598:	8d10983a 	sll	r8,r17,r20
1010a59c:	38aab03a 	or	r21,r7,r2
1010a5a0:	a82cd43a 	srli	r22,r21,16
1010a5a4:	84e2d83a 	srl	r17,r16,r19
1010a5a8:	e009883a 	mov	r4,fp
1010a5ac:	b00b883a 	mov	r5,r22
1010a5b0:	8a22b03a 	or	r17,r17,r8
1010a5b4:	3524983a 	sll	r18,r6,r20
1010a5b8:	010a9540 	call	1010a954 <__umodsi3>
1010a5bc:	e009883a 	mov	r4,fp
1010a5c0:	b00b883a 	mov	r5,r22
1010a5c4:	102f883a 	mov	r23,r2
1010a5c8:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a5cc:	100d883a 	mov	r6,r2
1010a5d0:	b808943a 	slli	r4,r23,16
1010a5d4:	aa3fffcc 	andi	r8,r21,65535
1010a5d8:	8804d43a 	srli	r2,r17,16
1010a5dc:	41af383a 	mul	r23,r8,r6
1010a5e0:	8520983a 	sll	r16,r16,r20
1010a5e4:	1104b03a 	or	r2,r2,r4
1010a5e8:	15c0042e 	bgeu	r2,r23,1010a5fc <__umoddi3+0x33c>
1010a5ec:	1545883a 	add	r2,r2,r21
1010a5f0:	30ffffc4 	addi	r3,r6,-1
1010a5f4:	1540742e 	bgeu	r2,r21,1010a7c8 <__umoddi3+0x508>
1010a5f8:	180d883a 	mov	r6,r3
1010a5fc:	15efc83a 	sub	r23,r2,r23
1010a600:	b00b883a 	mov	r5,r22
1010a604:	b809883a 	mov	r4,r23
1010a608:	d9800115 	stw	r6,4(sp)
1010a60c:	da000015 	stw	r8,0(sp)
1010a610:	010a9540 	call	1010a954 <__umodsi3>
1010a614:	b00b883a 	mov	r5,r22
1010a618:	b809883a 	mov	r4,r23
1010a61c:	1039883a 	mov	fp,r2
1010a620:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a624:	da000017 	ldw	r8,0(sp)
1010a628:	e038943a 	slli	fp,fp,16
1010a62c:	100b883a 	mov	r5,r2
1010a630:	4089383a 	mul	r4,r8,r2
1010a634:	8a3fffcc 	andi	r8,r17,65535
1010a638:	4710b03a 	or	r8,r8,fp
1010a63c:	d9800117 	ldw	r6,4(sp)
1010a640:	4100042e 	bgeu	r8,r4,1010a654 <__umoddi3+0x394>
1010a644:	4551883a 	add	r8,r8,r21
1010a648:	10bfffc4 	addi	r2,r2,-1
1010a64c:	45405a2e 	bgeu	r8,r21,1010a7b8 <__umoddi3+0x4f8>
1010a650:	100b883a 	mov	r5,r2
1010a654:	300c943a 	slli	r6,r6,16
1010a658:	91ffffcc 	andi	r7,r18,65535
1010a65c:	9004d43a 	srli	r2,r18,16
1010a660:	314cb03a 	or	r6,r6,r5
1010a664:	317fffcc 	andi	r5,r6,65535
1010a668:	300cd43a 	srli	r6,r6,16
1010a66c:	29d3383a 	mul	r9,r5,r7
1010a670:	288b383a 	mul	r5,r5,r2
1010a674:	31cf383a 	mul	r7,r6,r7
1010a678:	4806d43a 	srli	r3,r9,16
1010a67c:	4111c83a 	sub	r8,r8,r4
1010a680:	29cb883a 	add	r5,r5,r7
1010a684:	194b883a 	add	r5,r3,r5
1010a688:	3085383a 	mul	r2,r6,r2
1010a68c:	29c0022e 	bgeu	r5,r7,1010a698 <__umoddi3+0x3d8>
1010a690:	00c00074 	movhi	r3,1
1010a694:	10c5883a 	add	r2,r2,r3
1010a698:	2808d43a 	srli	r4,r5,16
1010a69c:	280a943a 	slli	r5,r5,16
1010a6a0:	4a7fffcc 	andi	r9,r9,65535
1010a6a4:	2085883a 	add	r2,r4,r2
1010a6a8:	2a4b883a 	add	r5,r5,r9
1010a6ac:	40803636 	bltu	r8,r2,1010a788 <__umoddi3+0x4c8>
1010a6b0:	40804d26 	beq	r8,r2,1010a7e8 <__umoddi3+0x528>
1010a6b4:	4089c83a 	sub	r4,r8,r2
1010a6b8:	280f883a 	mov	r7,r5
1010a6bc:	81cfc83a 	sub	r7,r16,r7
1010a6c0:	81c7803a 	cmpltu	r3,r16,r7
1010a6c4:	20c7c83a 	sub	r3,r4,r3
1010a6c8:	1cc4983a 	sll	r2,r3,r19
1010a6cc:	3d0ed83a 	srl	r7,r7,r20
1010a6d0:	1d06d83a 	srl	r3,r3,r20
1010a6d4:	11c4b03a 	or	r2,r2,r7
1010a6d8:	003f9306 	br	1010a528 <__alt_data_end+0xfffea528>
1010a6dc:	9ca6983a 	sll	r19,r19,r18
1010a6e0:	88e8d83a 	srl	r20,r17,r3
1010a6e4:	80c4d83a 	srl	r2,r16,r3
1010a6e8:	982cd43a 	srli	r22,r19,16
1010a6ec:	8ca2983a 	sll	r17,r17,r18
1010a6f0:	a009883a 	mov	r4,r20
1010a6f4:	b00b883a 	mov	r5,r22
1010a6f8:	1478b03a 	or	fp,r2,r17
1010a6fc:	010a9540 	call	1010a954 <__umodsi3>
1010a700:	a009883a 	mov	r4,r20
1010a704:	b00b883a 	mov	r5,r22
1010a708:	1023883a 	mov	r17,r2
1010a70c:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a710:	9d7fffcc 	andi	r21,r19,65535
1010a714:	880a943a 	slli	r5,r17,16
1010a718:	e008d43a 	srli	r4,fp,16
1010a71c:	a885383a 	mul	r2,r21,r2
1010a720:	84a8983a 	sll	r20,r16,r18
1010a724:	2148b03a 	or	r4,r4,r5
1010a728:	2080042e 	bgeu	r4,r2,1010a73c <__umoddi3+0x47c>
1010a72c:	24c9883a 	add	r4,r4,r19
1010a730:	24c00236 	bltu	r4,r19,1010a73c <__umoddi3+0x47c>
1010a734:	2080012e 	bgeu	r4,r2,1010a73c <__umoddi3+0x47c>
1010a738:	24c9883a 	add	r4,r4,r19
1010a73c:	20a3c83a 	sub	r17,r4,r2
1010a740:	b00b883a 	mov	r5,r22
1010a744:	8809883a 	mov	r4,r17
1010a748:	010a9540 	call	1010a954 <__umodsi3>
1010a74c:	102f883a 	mov	r23,r2
1010a750:	8809883a 	mov	r4,r17
1010a754:	b00b883a 	mov	r5,r22
1010a758:	010a8f00 	call	1010a8f0 <__udivsi3>
1010a75c:	b82e943a 	slli	r23,r23,16
1010a760:	a885383a 	mul	r2,r21,r2
1010a764:	e13fffcc 	andi	r4,fp,65535
1010a768:	25c8b03a 	or	r4,r4,r23
1010a76c:	2080042e 	bgeu	r4,r2,1010a780 <__umoddi3+0x4c0>
1010a770:	24c9883a 	add	r4,r4,r19
1010a774:	24c00236 	bltu	r4,r19,1010a780 <__umoddi3+0x4c0>
1010a778:	2080012e 	bgeu	r4,r2,1010a780 <__umoddi3+0x4c0>
1010a77c:	24c9883a 	add	r4,r4,r19
1010a780:	20a3c83a 	sub	r17,r4,r2
1010a784:	003f4806 	br	1010a4a8 <__alt_data_end+0xfffea4a8>
1010a788:	2c8fc83a 	sub	r7,r5,r18
1010a78c:	1545c83a 	sub	r2,r2,r21
1010a790:	29cb803a 	cmpltu	r5,r5,r7
1010a794:	1145c83a 	sub	r2,r2,r5
1010a798:	4089c83a 	sub	r4,r8,r2
1010a79c:	003fc706 	br	1010a6bc <__alt_data_end+0xfffea6bc>
1010a7a0:	01000604 	movi	r4,24
1010a7a4:	003f1806 	br	1010a408 <__alt_data_end+0xfffea408>
1010a7a8:	00800604 	movi	r2,24
1010a7ac:	003f3206 	br	1010a478 <__alt_data_end+0xfffea478>
1010a7b0:	01000604 	movi	r4,24
1010a7b4:	003ed906 	br	1010a31c <__alt_data_end+0xfffea31c>
1010a7b8:	413fa52e 	bgeu	r8,r4,1010a650 <__alt_data_end+0xfffea650>
1010a7bc:	297fff84 	addi	r5,r5,-2
1010a7c0:	4551883a 	add	r8,r8,r21
1010a7c4:	003fa306 	br	1010a654 <__alt_data_end+0xfffea654>
1010a7c8:	15ff8b2e 	bgeu	r2,r23,1010a5f8 <__alt_data_end+0xfffea5f8>
1010a7cc:	31bfff84 	addi	r6,r6,-2
1010a7d0:	1545883a 	add	r2,r2,r21
1010a7d4:	003f8906 	br	1010a5fc <__alt_data_end+0xfffea5fc>
1010a7d8:	24c9883a 	add	r4,r4,r19
1010a7dc:	003eee06 	br	1010a398 <__alt_data_end+0xfffea398>
1010a7e0:	8005883a 	mov	r2,r16
1010a7e4:	003f1706 	br	1010a444 <__alt_data_end+0xfffea444>
1010a7e8:	817fe736 	bltu	r16,r5,1010a788 <__alt_data_end+0xfffea788>
1010a7ec:	280f883a 	mov	r7,r5
1010a7f0:	0009883a 	mov	r4,zero
1010a7f4:	003fb106 	br	1010a6bc <__alt_data_end+0xfffea6bc>

1010a7f8 <__divsi3>:
1010a7f8:	20001b16 	blt	r4,zero,1010a868 <__divsi3+0x70>
1010a7fc:	000f883a 	mov	r7,zero
1010a800:	28001616 	blt	r5,zero,1010a85c <__divsi3+0x64>
1010a804:	200d883a 	mov	r6,r4
1010a808:	29001a2e 	bgeu	r5,r4,1010a874 <__divsi3+0x7c>
1010a80c:	00800804 	movi	r2,32
1010a810:	00c00044 	movi	r3,1
1010a814:	00000106 	br	1010a81c <__divsi3+0x24>
1010a818:	10000d26 	beq	r2,zero,1010a850 <__divsi3+0x58>
1010a81c:	294b883a 	add	r5,r5,r5
1010a820:	10bfffc4 	addi	r2,r2,-1
1010a824:	18c7883a 	add	r3,r3,r3
1010a828:	293ffb36 	bltu	r5,r4,1010a818 <__alt_data_end+0xfffea818>
1010a82c:	0005883a 	mov	r2,zero
1010a830:	18000726 	beq	r3,zero,1010a850 <__divsi3+0x58>
1010a834:	0005883a 	mov	r2,zero
1010a838:	31400236 	bltu	r6,r5,1010a844 <__divsi3+0x4c>
1010a83c:	314dc83a 	sub	r6,r6,r5
1010a840:	10c4b03a 	or	r2,r2,r3
1010a844:	1806d07a 	srli	r3,r3,1
1010a848:	280ad07a 	srli	r5,r5,1
1010a84c:	183ffa1e 	bne	r3,zero,1010a838 <__alt_data_end+0xfffea838>
1010a850:	38000126 	beq	r7,zero,1010a858 <__divsi3+0x60>
1010a854:	0085c83a 	sub	r2,zero,r2
1010a858:	f800283a 	ret
1010a85c:	014bc83a 	sub	r5,zero,r5
1010a860:	39c0005c 	xori	r7,r7,1
1010a864:	003fe706 	br	1010a804 <__alt_data_end+0xfffea804>
1010a868:	0109c83a 	sub	r4,zero,r4
1010a86c:	01c00044 	movi	r7,1
1010a870:	003fe306 	br	1010a800 <__alt_data_end+0xfffea800>
1010a874:	00c00044 	movi	r3,1
1010a878:	003fee06 	br	1010a834 <__alt_data_end+0xfffea834>

1010a87c <__modsi3>:
1010a87c:	20001716 	blt	r4,zero,1010a8dc <__modsi3+0x60>
1010a880:	000f883a 	mov	r7,zero
1010a884:	2005883a 	mov	r2,r4
1010a888:	28001216 	blt	r5,zero,1010a8d4 <__modsi3+0x58>
1010a88c:	2900162e 	bgeu	r5,r4,1010a8e8 <__modsi3+0x6c>
1010a890:	01800804 	movi	r6,32
1010a894:	00c00044 	movi	r3,1
1010a898:	00000106 	br	1010a8a0 <__modsi3+0x24>
1010a89c:	30000a26 	beq	r6,zero,1010a8c8 <__modsi3+0x4c>
1010a8a0:	294b883a 	add	r5,r5,r5
1010a8a4:	31bfffc4 	addi	r6,r6,-1
1010a8a8:	18c7883a 	add	r3,r3,r3
1010a8ac:	293ffb36 	bltu	r5,r4,1010a89c <__alt_data_end+0xfffea89c>
1010a8b0:	18000526 	beq	r3,zero,1010a8c8 <__modsi3+0x4c>
1010a8b4:	1806d07a 	srli	r3,r3,1
1010a8b8:	11400136 	bltu	r2,r5,1010a8c0 <__modsi3+0x44>
1010a8bc:	1145c83a 	sub	r2,r2,r5
1010a8c0:	280ad07a 	srli	r5,r5,1
1010a8c4:	183ffb1e 	bne	r3,zero,1010a8b4 <__alt_data_end+0xfffea8b4>
1010a8c8:	38000126 	beq	r7,zero,1010a8d0 <__modsi3+0x54>
1010a8cc:	0085c83a 	sub	r2,zero,r2
1010a8d0:	f800283a 	ret
1010a8d4:	014bc83a 	sub	r5,zero,r5
1010a8d8:	003fec06 	br	1010a88c <__alt_data_end+0xfffea88c>
1010a8dc:	0109c83a 	sub	r4,zero,r4
1010a8e0:	01c00044 	movi	r7,1
1010a8e4:	003fe706 	br	1010a884 <__alt_data_end+0xfffea884>
1010a8e8:	00c00044 	movi	r3,1
1010a8ec:	003ff106 	br	1010a8b4 <__alt_data_end+0xfffea8b4>

1010a8f0 <__udivsi3>:
1010a8f0:	200d883a 	mov	r6,r4
1010a8f4:	2900152e 	bgeu	r5,r4,1010a94c <__udivsi3+0x5c>
1010a8f8:	28001416 	blt	r5,zero,1010a94c <__udivsi3+0x5c>
1010a8fc:	00800804 	movi	r2,32
1010a900:	00c00044 	movi	r3,1
1010a904:	00000206 	br	1010a910 <__udivsi3+0x20>
1010a908:	10000e26 	beq	r2,zero,1010a944 <__udivsi3+0x54>
1010a90c:	28000516 	blt	r5,zero,1010a924 <__udivsi3+0x34>
1010a910:	294b883a 	add	r5,r5,r5
1010a914:	10bfffc4 	addi	r2,r2,-1
1010a918:	18c7883a 	add	r3,r3,r3
1010a91c:	293ffa36 	bltu	r5,r4,1010a908 <__alt_data_end+0xfffea908>
1010a920:	18000826 	beq	r3,zero,1010a944 <__udivsi3+0x54>
1010a924:	0005883a 	mov	r2,zero
1010a928:	31400236 	bltu	r6,r5,1010a934 <__udivsi3+0x44>
1010a92c:	314dc83a 	sub	r6,r6,r5
1010a930:	10c4b03a 	or	r2,r2,r3
1010a934:	1806d07a 	srli	r3,r3,1
1010a938:	280ad07a 	srli	r5,r5,1
1010a93c:	183ffa1e 	bne	r3,zero,1010a928 <__alt_data_end+0xfffea928>
1010a940:	f800283a 	ret
1010a944:	0005883a 	mov	r2,zero
1010a948:	f800283a 	ret
1010a94c:	00c00044 	movi	r3,1
1010a950:	003ff406 	br	1010a924 <__alt_data_end+0xfffea924>

1010a954 <__umodsi3>:
1010a954:	2005883a 	mov	r2,r4
1010a958:	2900122e 	bgeu	r5,r4,1010a9a4 <__umodsi3+0x50>
1010a95c:	28001116 	blt	r5,zero,1010a9a4 <__umodsi3+0x50>
1010a960:	01800804 	movi	r6,32
1010a964:	00c00044 	movi	r3,1
1010a968:	00000206 	br	1010a974 <__umodsi3+0x20>
1010a96c:	30000c26 	beq	r6,zero,1010a9a0 <__umodsi3+0x4c>
1010a970:	28000516 	blt	r5,zero,1010a988 <__umodsi3+0x34>
1010a974:	294b883a 	add	r5,r5,r5
1010a978:	31bfffc4 	addi	r6,r6,-1
1010a97c:	18c7883a 	add	r3,r3,r3
1010a980:	293ffa36 	bltu	r5,r4,1010a96c <__alt_data_end+0xfffea96c>
1010a984:	18000626 	beq	r3,zero,1010a9a0 <__umodsi3+0x4c>
1010a988:	1806d07a 	srli	r3,r3,1
1010a98c:	11400136 	bltu	r2,r5,1010a994 <__umodsi3+0x40>
1010a990:	1145c83a 	sub	r2,r2,r5
1010a994:	280ad07a 	srli	r5,r5,1
1010a998:	183ffb1e 	bne	r3,zero,1010a988 <__alt_data_end+0xfffea988>
1010a99c:	f800283a 	ret
1010a9a0:	f800283a 	ret
1010a9a4:	00c00044 	movi	r3,1
1010a9a8:	003ff706 	br	1010a988 <__alt_data_end+0xfffea988>

1010a9ac <__adddf3>:
1010a9ac:	02c00434 	movhi	r11,16
1010a9b0:	5affffc4 	addi	r11,r11,-1
1010a9b4:	2806d7fa 	srli	r3,r5,31
1010a9b8:	2ad4703a 	and	r10,r5,r11
1010a9bc:	3ad2703a 	and	r9,r7,r11
1010a9c0:	3804d53a 	srli	r2,r7,20
1010a9c4:	3018d77a 	srli	r12,r6,29
1010a9c8:	280ad53a 	srli	r5,r5,20
1010a9cc:	501490fa 	slli	r10,r10,3
1010a9d0:	2010d77a 	srli	r8,r4,29
1010a9d4:	481290fa 	slli	r9,r9,3
1010a9d8:	380ed7fa 	srli	r7,r7,31
1010a9dc:	defffb04 	addi	sp,sp,-20
1010a9e0:	dc800215 	stw	r18,8(sp)
1010a9e4:	dc400115 	stw	r17,4(sp)
1010a9e8:	dc000015 	stw	r16,0(sp)
1010a9ec:	dfc00415 	stw	ra,16(sp)
1010a9f0:	dcc00315 	stw	r19,12(sp)
1010a9f4:	1c803fcc 	andi	r18,r3,255
1010a9f8:	2c01ffcc 	andi	r16,r5,2047
1010a9fc:	5210b03a 	or	r8,r10,r8
1010aa00:	202290fa 	slli	r17,r4,3
1010aa04:	1081ffcc 	andi	r2,r2,2047
1010aa08:	4b12b03a 	or	r9,r9,r12
1010aa0c:	300c90fa 	slli	r6,r6,3
1010aa10:	91c07526 	beq	r18,r7,1010abe8 <__adddf3+0x23c>
1010aa14:	8087c83a 	sub	r3,r16,r2
1010aa18:	00c0ab0e 	bge	zero,r3,1010acc8 <__adddf3+0x31c>
1010aa1c:	10002a1e 	bne	r2,zero,1010aac8 <__adddf3+0x11c>
1010aa20:	4984b03a 	or	r2,r9,r6
1010aa24:	1000961e 	bne	r2,zero,1010ac80 <__adddf3+0x2d4>
1010aa28:	888001cc 	andi	r2,r17,7
1010aa2c:	10000726 	beq	r2,zero,1010aa4c <__adddf3+0xa0>
1010aa30:	888003cc 	andi	r2,r17,15
1010aa34:	00c00104 	movi	r3,4
1010aa38:	10c00426 	beq	r2,r3,1010aa4c <__adddf3+0xa0>
1010aa3c:	88c7883a 	add	r3,r17,r3
1010aa40:	1c63803a 	cmpltu	r17,r3,r17
1010aa44:	4451883a 	add	r8,r8,r17
1010aa48:	1823883a 	mov	r17,r3
1010aa4c:	4080202c 	andhi	r2,r8,128
1010aa50:	10005926 	beq	r2,zero,1010abb8 <__adddf3+0x20c>
1010aa54:	84000044 	addi	r16,r16,1
1010aa58:	0081ffc4 	movi	r2,2047
1010aa5c:	8080ba26 	beq	r16,r2,1010ad48 <__adddf3+0x39c>
1010aa60:	00bfe034 	movhi	r2,65408
1010aa64:	10bfffc4 	addi	r2,r2,-1
1010aa68:	4090703a 	and	r8,r8,r2
1010aa6c:	4004977a 	slli	r2,r8,29
1010aa70:	4010927a 	slli	r8,r8,9
1010aa74:	8822d0fa 	srli	r17,r17,3
1010aa78:	8401ffcc 	andi	r16,r16,2047
1010aa7c:	4010d33a 	srli	r8,r8,12
1010aa80:	9007883a 	mov	r3,r18
1010aa84:	1444b03a 	or	r2,r2,r17
1010aa88:	8401ffcc 	andi	r16,r16,2047
1010aa8c:	8020953a 	slli	r16,r16,20
1010aa90:	18c03fcc 	andi	r3,r3,255
1010aa94:	01000434 	movhi	r4,16
1010aa98:	213fffc4 	addi	r4,r4,-1
1010aa9c:	180697fa 	slli	r3,r3,31
1010aaa0:	4110703a 	and	r8,r8,r4
1010aaa4:	4410b03a 	or	r8,r8,r16
1010aaa8:	40c6b03a 	or	r3,r8,r3
1010aaac:	dfc00417 	ldw	ra,16(sp)
1010aab0:	dcc00317 	ldw	r19,12(sp)
1010aab4:	dc800217 	ldw	r18,8(sp)
1010aab8:	dc400117 	ldw	r17,4(sp)
1010aabc:	dc000017 	ldw	r16,0(sp)
1010aac0:	dec00504 	addi	sp,sp,20
1010aac4:	f800283a 	ret
1010aac8:	0081ffc4 	movi	r2,2047
1010aacc:	80bfd626 	beq	r16,r2,1010aa28 <__alt_data_end+0xfffeaa28>
1010aad0:	4a402034 	orhi	r9,r9,128
1010aad4:	00800e04 	movi	r2,56
1010aad8:	10c09f16 	blt	r2,r3,1010ad58 <__adddf3+0x3ac>
1010aadc:	008007c4 	movi	r2,31
1010aae0:	10c0c216 	blt	r2,r3,1010adec <__adddf3+0x440>
1010aae4:	00800804 	movi	r2,32
1010aae8:	10c5c83a 	sub	r2,r2,r3
1010aaec:	488a983a 	sll	r5,r9,r2
1010aaf0:	30c8d83a 	srl	r4,r6,r3
1010aaf4:	3084983a 	sll	r2,r6,r2
1010aaf8:	48c6d83a 	srl	r3,r9,r3
1010aafc:	290cb03a 	or	r6,r5,r4
1010ab00:	1004c03a 	cmpne	r2,r2,zero
1010ab04:	308cb03a 	or	r6,r6,r2
1010ab08:	898dc83a 	sub	r6,r17,r6
1010ab0c:	89a3803a 	cmpltu	r17,r17,r6
1010ab10:	40d1c83a 	sub	r8,r8,r3
1010ab14:	4451c83a 	sub	r8,r8,r17
1010ab18:	3023883a 	mov	r17,r6
1010ab1c:	4080202c 	andhi	r2,r8,128
1010ab20:	10002326 	beq	r2,zero,1010abb0 <__adddf3+0x204>
1010ab24:	04c02034 	movhi	r19,128
1010ab28:	9cffffc4 	addi	r19,r19,-1
1010ab2c:	44e6703a 	and	r19,r8,r19
1010ab30:	98007626 	beq	r19,zero,1010ad0c <__adddf3+0x360>
1010ab34:	9809883a 	mov	r4,r19
1010ab38:	010cfb00 	call	1010cfb0 <__clzsi2>
1010ab3c:	10fffe04 	addi	r3,r2,-8
1010ab40:	010007c4 	movi	r4,31
1010ab44:	20c07716 	blt	r4,r3,1010ad24 <__adddf3+0x378>
1010ab48:	00800804 	movi	r2,32
1010ab4c:	10c5c83a 	sub	r2,r2,r3
1010ab50:	8884d83a 	srl	r2,r17,r2
1010ab54:	98d0983a 	sll	r8,r19,r3
1010ab58:	88e2983a 	sll	r17,r17,r3
1010ab5c:	1204b03a 	or	r2,r2,r8
1010ab60:	1c007416 	blt	r3,r16,1010ad34 <__adddf3+0x388>
1010ab64:	1c21c83a 	sub	r16,r3,r16
1010ab68:	82000044 	addi	r8,r16,1
1010ab6c:	00c007c4 	movi	r3,31
1010ab70:	1a009116 	blt	r3,r8,1010adb8 <__adddf3+0x40c>
1010ab74:	00c00804 	movi	r3,32
1010ab78:	1a07c83a 	sub	r3,r3,r8
1010ab7c:	8a08d83a 	srl	r4,r17,r8
1010ab80:	88e2983a 	sll	r17,r17,r3
1010ab84:	10c6983a 	sll	r3,r2,r3
1010ab88:	1210d83a 	srl	r8,r2,r8
1010ab8c:	8804c03a 	cmpne	r2,r17,zero
1010ab90:	1906b03a 	or	r3,r3,r4
1010ab94:	18a2b03a 	or	r17,r3,r2
1010ab98:	0021883a 	mov	r16,zero
1010ab9c:	003fa206 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010aba0:	1890b03a 	or	r8,r3,r2
1010aba4:	40017d26 	beq	r8,zero,1010b19c <__adddf3+0x7f0>
1010aba8:	1011883a 	mov	r8,r2
1010abac:	1823883a 	mov	r17,r3
1010abb0:	888001cc 	andi	r2,r17,7
1010abb4:	103f9e1e 	bne	r2,zero,1010aa30 <__alt_data_end+0xfffeaa30>
1010abb8:	4004977a 	slli	r2,r8,29
1010abbc:	8822d0fa 	srli	r17,r17,3
1010abc0:	4010d0fa 	srli	r8,r8,3
1010abc4:	9007883a 	mov	r3,r18
1010abc8:	1444b03a 	or	r2,r2,r17
1010abcc:	0101ffc4 	movi	r4,2047
1010abd0:	81002426 	beq	r16,r4,1010ac64 <__adddf3+0x2b8>
1010abd4:	8120703a 	and	r16,r16,r4
1010abd8:	01000434 	movhi	r4,16
1010abdc:	213fffc4 	addi	r4,r4,-1
1010abe0:	4110703a 	and	r8,r8,r4
1010abe4:	003fa806 	br	1010aa88 <__alt_data_end+0xfffeaa88>
1010abe8:	8089c83a 	sub	r4,r16,r2
1010abec:	01005e0e 	bge	zero,r4,1010ad68 <__adddf3+0x3bc>
1010abf0:	10002b26 	beq	r2,zero,1010aca0 <__adddf3+0x2f4>
1010abf4:	0081ffc4 	movi	r2,2047
1010abf8:	80bf8b26 	beq	r16,r2,1010aa28 <__alt_data_end+0xfffeaa28>
1010abfc:	4a402034 	orhi	r9,r9,128
1010ac00:	00800e04 	movi	r2,56
1010ac04:	1100a40e 	bge	r2,r4,1010ae98 <__adddf3+0x4ec>
1010ac08:	498cb03a 	or	r6,r9,r6
1010ac0c:	300ac03a 	cmpne	r5,r6,zero
1010ac10:	0013883a 	mov	r9,zero
1010ac14:	2c4b883a 	add	r5,r5,r17
1010ac18:	2c63803a 	cmpltu	r17,r5,r17
1010ac1c:	4a11883a 	add	r8,r9,r8
1010ac20:	8a11883a 	add	r8,r17,r8
1010ac24:	2823883a 	mov	r17,r5
1010ac28:	4080202c 	andhi	r2,r8,128
1010ac2c:	103fe026 	beq	r2,zero,1010abb0 <__alt_data_end+0xfffeabb0>
1010ac30:	84000044 	addi	r16,r16,1
1010ac34:	0081ffc4 	movi	r2,2047
1010ac38:	8080d226 	beq	r16,r2,1010af84 <__adddf3+0x5d8>
1010ac3c:	00bfe034 	movhi	r2,65408
1010ac40:	10bfffc4 	addi	r2,r2,-1
1010ac44:	4090703a 	and	r8,r8,r2
1010ac48:	880ad07a 	srli	r5,r17,1
1010ac4c:	400897fa 	slli	r4,r8,31
1010ac50:	88c0004c 	andi	r3,r17,1
1010ac54:	28e2b03a 	or	r17,r5,r3
1010ac58:	4010d07a 	srli	r8,r8,1
1010ac5c:	2462b03a 	or	r17,r4,r17
1010ac60:	003f7106 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010ac64:	4088b03a 	or	r4,r8,r2
1010ac68:	20014526 	beq	r4,zero,1010b180 <__adddf3+0x7d4>
1010ac6c:	01000434 	movhi	r4,16
1010ac70:	42000234 	orhi	r8,r8,8
1010ac74:	213fffc4 	addi	r4,r4,-1
1010ac78:	4110703a 	and	r8,r8,r4
1010ac7c:	003f8206 	br	1010aa88 <__alt_data_end+0xfffeaa88>
1010ac80:	18ffffc4 	addi	r3,r3,-1
1010ac84:	1800491e 	bne	r3,zero,1010adac <__adddf3+0x400>
1010ac88:	898bc83a 	sub	r5,r17,r6
1010ac8c:	8963803a 	cmpltu	r17,r17,r5
1010ac90:	4251c83a 	sub	r8,r8,r9
1010ac94:	4451c83a 	sub	r8,r8,r17
1010ac98:	2823883a 	mov	r17,r5
1010ac9c:	003f9f06 	br	1010ab1c <__alt_data_end+0xfffeab1c>
1010aca0:	4984b03a 	or	r2,r9,r6
1010aca4:	103f6026 	beq	r2,zero,1010aa28 <__alt_data_end+0xfffeaa28>
1010aca8:	213fffc4 	addi	r4,r4,-1
1010acac:	2000931e 	bne	r4,zero,1010aefc <__adddf3+0x550>
1010acb0:	898d883a 	add	r6,r17,r6
1010acb4:	3463803a 	cmpltu	r17,r6,r17
1010acb8:	4251883a 	add	r8,r8,r9
1010acbc:	8a11883a 	add	r8,r17,r8
1010acc0:	3023883a 	mov	r17,r6
1010acc4:	003fd806 	br	1010ac28 <__alt_data_end+0xfffeac28>
1010acc8:	1800541e 	bne	r3,zero,1010ae1c <__adddf3+0x470>
1010accc:	80800044 	addi	r2,r16,1
1010acd0:	1081ffcc 	andi	r2,r2,2047
1010acd4:	00c00044 	movi	r3,1
1010acd8:	1880a00e 	bge	r3,r2,1010af5c <__adddf3+0x5b0>
1010acdc:	8989c83a 	sub	r4,r17,r6
1010ace0:	8905803a 	cmpltu	r2,r17,r4
1010ace4:	4267c83a 	sub	r19,r8,r9
1010ace8:	98a7c83a 	sub	r19,r19,r2
1010acec:	9880202c 	andhi	r2,r19,128
1010acf0:	10006326 	beq	r2,zero,1010ae80 <__adddf3+0x4d4>
1010acf4:	3463c83a 	sub	r17,r6,r17
1010acf8:	4a07c83a 	sub	r3,r9,r8
1010acfc:	344d803a 	cmpltu	r6,r6,r17
1010ad00:	19a7c83a 	sub	r19,r3,r6
1010ad04:	3825883a 	mov	r18,r7
1010ad08:	983f8a1e 	bne	r19,zero,1010ab34 <__alt_data_end+0xfffeab34>
1010ad0c:	8809883a 	mov	r4,r17
1010ad10:	010cfb00 	call	1010cfb0 <__clzsi2>
1010ad14:	10800804 	addi	r2,r2,32
1010ad18:	10fffe04 	addi	r3,r2,-8
1010ad1c:	010007c4 	movi	r4,31
1010ad20:	20ff890e 	bge	r4,r3,1010ab48 <__alt_data_end+0xfffeab48>
1010ad24:	10bff604 	addi	r2,r2,-40
1010ad28:	8884983a 	sll	r2,r17,r2
1010ad2c:	0023883a 	mov	r17,zero
1010ad30:	1c3f8c0e 	bge	r3,r16,1010ab64 <__alt_data_end+0xfffeab64>
1010ad34:	023fe034 	movhi	r8,65408
1010ad38:	423fffc4 	addi	r8,r8,-1
1010ad3c:	80e1c83a 	sub	r16,r16,r3
1010ad40:	1210703a 	and	r8,r2,r8
1010ad44:	003f3806 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010ad48:	9007883a 	mov	r3,r18
1010ad4c:	0011883a 	mov	r8,zero
1010ad50:	0005883a 	mov	r2,zero
1010ad54:	003f4c06 	br	1010aa88 <__alt_data_end+0xfffeaa88>
1010ad58:	498cb03a 	or	r6,r9,r6
1010ad5c:	300cc03a 	cmpne	r6,r6,zero
1010ad60:	0007883a 	mov	r3,zero
1010ad64:	003f6806 	br	1010ab08 <__alt_data_end+0xfffeab08>
1010ad68:	20009c1e 	bne	r4,zero,1010afdc <__adddf3+0x630>
1010ad6c:	80800044 	addi	r2,r16,1
1010ad70:	1141ffcc 	andi	r5,r2,2047
1010ad74:	01000044 	movi	r4,1
1010ad78:	2140670e 	bge	r4,r5,1010af18 <__adddf3+0x56c>
1010ad7c:	0101ffc4 	movi	r4,2047
1010ad80:	11007f26 	beq	r2,r4,1010af80 <__adddf3+0x5d4>
1010ad84:	898d883a 	add	r6,r17,r6
1010ad88:	4247883a 	add	r3,r8,r9
1010ad8c:	3451803a 	cmpltu	r8,r6,r17
1010ad90:	40d1883a 	add	r8,r8,r3
1010ad94:	402297fa 	slli	r17,r8,31
1010ad98:	300cd07a 	srli	r6,r6,1
1010ad9c:	4010d07a 	srli	r8,r8,1
1010ada0:	1021883a 	mov	r16,r2
1010ada4:	89a2b03a 	or	r17,r17,r6
1010ada8:	003f1f06 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010adac:	0081ffc4 	movi	r2,2047
1010adb0:	80bf481e 	bne	r16,r2,1010aad4 <__alt_data_end+0xfffeaad4>
1010adb4:	003f1c06 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010adb8:	843ff844 	addi	r16,r16,-31
1010adbc:	01000804 	movi	r4,32
1010adc0:	1406d83a 	srl	r3,r2,r16
1010adc4:	41005026 	beq	r8,r4,1010af08 <__adddf3+0x55c>
1010adc8:	01001004 	movi	r4,64
1010adcc:	2211c83a 	sub	r8,r4,r8
1010add0:	1204983a 	sll	r2,r2,r8
1010add4:	88a2b03a 	or	r17,r17,r2
1010add8:	8822c03a 	cmpne	r17,r17,zero
1010addc:	1c62b03a 	or	r17,r3,r17
1010ade0:	0011883a 	mov	r8,zero
1010ade4:	0021883a 	mov	r16,zero
1010ade8:	003f7106 	br	1010abb0 <__alt_data_end+0xfffeabb0>
1010adec:	193ff804 	addi	r4,r3,-32
1010adf0:	00800804 	movi	r2,32
1010adf4:	4908d83a 	srl	r4,r9,r4
1010adf8:	18804526 	beq	r3,r2,1010af10 <__adddf3+0x564>
1010adfc:	00801004 	movi	r2,64
1010ae00:	10c5c83a 	sub	r2,r2,r3
1010ae04:	4886983a 	sll	r3,r9,r2
1010ae08:	198cb03a 	or	r6,r3,r6
1010ae0c:	300cc03a 	cmpne	r6,r6,zero
1010ae10:	218cb03a 	or	r6,r4,r6
1010ae14:	0007883a 	mov	r3,zero
1010ae18:	003f3b06 	br	1010ab08 <__alt_data_end+0xfffeab08>
1010ae1c:	80002a26 	beq	r16,zero,1010aec8 <__adddf3+0x51c>
1010ae20:	0101ffc4 	movi	r4,2047
1010ae24:	11006826 	beq	r2,r4,1010afc8 <__adddf3+0x61c>
1010ae28:	00c7c83a 	sub	r3,zero,r3
1010ae2c:	42002034 	orhi	r8,r8,128
1010ae30:	01000e04 	movi	r4,56
1010ae34:	20c07c16 	blt	r4,r3,1010b028 <__adddf3+0x67c>
1010ae38:	010007c4 	movi	r4,31
1010ae3c:	20c0da16 	blt	r4,r3,1010b1a8 <__adddf3+0x7fc>
1010ae40:	01000804 	movi	r4,32
1010ae44:	20c9c83a 	sub	r4,r4,r3
1010ae48:	4114983a 	sll	r10,r8,r4
1010ae4c:	88cad83a 	srl	r5,r17,r3
1010ae50:	8908983a 	sll	r4,r17,r4
1010ae54:	40c6d83a 	srl	r3,r8,r3
1010ae58:	5162b03a 	or	r17,r10,r5
1010ae5c:	2008c03a 	cmpne	r4,r4,zero
1010ae60:	8922b03a 	or	r17,r17,r4
1010ae64:	3463c83a 	sub	r17,r6,r17
1010ae68:	48c7c83a 	sub	r3,r9,r3
1010ae6c:	344d803a 	cmpltu	r6,r6,r17
1010ae70:	1991c83a 	sub	r8,r3,r6
1010ae74:	1021883a 	mov	r16,r2
1010ae78:	3825883a 	mov	r18,r7
1010ae7c:	003f2706 	br	1010ab1c <__alt_data_end+0xfffeab1c>
1010ae80:	24d0b03a 	or	r8,r4,r19
1010ae84:	40001b1e 	bne	r8,zero,1010aef4 <__adddf3+0x548>
1010ae88:	0005883a 	mov	r2,zero
1010ae8c:	0007883a 	mov	r3,zero
1010ae90:	0021883a 	mov	r16,zero
1010ae94:	003f4d06 	br	1010abcc <__alt_data_end+0xfffeabcc>
1010ae98:	008007c4 	movi	r2,31
1010ae9c:	11003c16 	blt	r2,r4,1010af90 <__adddf3+0x5e4>
1010aea0:	00800804 	movi	r2,32
1010aea4:	1105c83a 	sub	r2,r2,r4
1010aea8:	488e983a 	sll	r7,r9,r2
1010aeac:	310ad83a 	srl	r5,r6,r4
1010aeb0:	3084983a 	sll	r2,r6,r2
1010aeb4:	4912d83a 	srl	r9,r9,r4
1010aeb8:	394ab03a 	or	r5,r7,r5
1010aebc:	1004c03a 	cmpne	r2,r2,zero
1010aec0:	288ab03a 	or	r5,r5,r2
1010aec4:	003f5306 	br	1010ac14 <__alt_data_end+0xfffeac14>
1010aec8:	4448b03a 	or	r4,r8,r17
1010aecc:	20003e26 	beq	r4,zero,1010afc8 <__adddf3+0x61c>
1010aed0:	00c6303a 	nor	r3,zero,r3
1010aed4:	18003a1e 	bne	r3,zero,1010afc0 <__adddf3+0x614>
1010aed8:	3463c83a 	sub	r17,r6,r17
1010aedc:	4a07c83a 	sub	r3,r9,r8
1010aee0:	344d803a 	cmpltu	r6,r6,r17
1010aee4:	1991c83a 	sub	r8,r3,r6
1010aee8:	1021883a 	mov	r16,r2
1010aeec:	3825883a 	mov	r18,r7
1010aef0:	003f0a06 	br	1010ab1c <__alt_data_end+0xfffeab1c>
1010aef4:	2023883a 	mov	r17,r4
1010aef8:	003f0d06 	br	1010ab30 <__alt_data_end+0xfffeab30>
1010aefc:	0081ffc4 	movi	r2,2047
1010af00:	80bf3f1e 	bne	r16,r2,1010ac00 <__alt_data_end+0xfffeac00>
1010af04:	003ec806 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010af08:	0005883a 	mov	r2,zero
1010af0c:	003fb106 	br	1010add4 <__alt_data_end+0xfffeadd4>
1010af10:	0007883a 	mov	r3,zero
1010af14:	003fbc06 	br	1010ae08 <__alt_data_end+0xfffeae08>
1010af18:	4444b03a 	or	r2,r8,r17
1010af1c:	8000871e 	bne	r16,zero,1010b13c <__adddf3+0x790>
1010af20:	1000ba26 	beq	r2,zero,1010b20c <__adddf3+0x860>
1010af24:	4984b03a 	or	r2,r9,r6
1010af28:	103ebf26 	beq	r2,zero,1010aa28 <__alt_data_end+0xfffeaa28>
1010af2c:	8985883a 	add	r2,r17,r6
1010af30:	4247883a 	add	r3,r8,r9
1010af34:	1451803a 	cmpltu	r8,r2,r17
1010af38:	40d1883a 	add	r8,r8,r3
1010af3c:	40c0202c 	andhi	r3,r8,128
1010af40:	1023883a 	mov	r17,r2
1010af44:	183f1a26 	beq	r3,zero,1010abb0 <__alt_data_end+0xfffeabb0>
1010af48:	00bfe034 	movhi	r2,65408
1010af4c:	10bfffc4 	addi	r2,r2,-1
1010af50:	2021883a 	mov	r16,r4
1010af54:	4090703a 	and	r8,r8,r2
1010af58:	003eb306 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010af5c:	4444b03a 	or	r2,r8,r17
1010af60:	8000291e 	bne	r16,zero,1010b008 <__adddf3+0x65c>
1010af64:	10004b1e 	bne	r2,zero,1010b094 <__adddf3+0x6e8>
1010af68:	4990b03a 	or	r8,r9,r6
1010af6c:	40008b26 	beq	r8,zero,1010b19c <__adddf3+0x7f0>
1010af70:	4811883a 	mov	r8,r9
1010af74:	3023883a 	mov	r17,r6
1010af78:	3825883a 	mov	r18,r7
1010af7c:	003eaa06 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010af80:	1021883a 	mov	r16,r2
1010af84:	0011883a 	mov	r8,zero
1010af88:	0005883a 	mov	r2,zero
1010af8c:	003f0f06 	br	1010abcc <__alt_data_end+0xfffeabcc>
1010af90:	217ff804 	addi	r5,r4,-32
1010af94:	00800804 	movi	r2,32
1010af98:	494ad83a 	srl	r5,r9,r5
1010af9c:	20807d26 	beq	r4,r2,1010b194 <__adddf3+0x7e8>
1010afa0:	00801004 	movi	r2,64
1010afa4:	1109c83a 	sub	r4,r2,r4
1010afa8:	4912983a 	sll	r9,r9,r4
1010afac:	498cb03a 	or	r6,r9,r6
1010afb0:	300cc03a 	cmpne	r6,r6,zero
1010afb4:	298ab03a 	or	r5,r5,r6
1010afb8:	0013883a 	mov	r9,zero
1010afbc:	003f1506 	br	1010ac14 <__alt_data_end+0xfffeac14>
1010afc0:	0101ffc4 	movi	r4,2047
1010afc4:	113f9a1e 	bne	r2,r4,1010ae30 <__alt_data_end+0xfffeae30>
1010afc8:	4811883a 	mov	r8,r9
1010afcc:	3023883a 	mov	r17,r6
1010afd0:	1021883a 	mov	r16,r2
1010afd4:	3825883a 	mov	r18,r7
1010afd8:	003e9306 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010afdc:	8000161e 	bne	r16,zero,1010b038 <__adddf3+0x68c>
1010afe0:	444ab03a 	or	r5,r8,r17
1010afe4:	28005126 	beq	r5,zero,1010b12c <__adddf3+0x780>
1010afe8:	0108303a 	nor	r4,zero,r4
1010afec:	20004d1e 	bne	r4,zero,1010b124 <__adddf3+0x778>
1010aff0:	89a3883a 	add	r17,r17,r6
1010aff4:	4253883a 	add	r9,r8,r9
1010aff8:	898d803a 	cmpltu	r6,r17,r6
1010affc:	3251883a 	add	r8,r6,r9
1010b000:	1021883a 	mov	r16,r2
1010b004:	003f0806 	br	1010ac28 <__alt_data_end+0xfffeac28>
1010b008:	1000301e 	bne	r2,zero,1010b0cc <__adddf3+0x720>
1010b00c:	4984b03a 	or	r2,r9,r6
1010b010:	10007126 	beq	r2,zero,1010b1d8 <__adddf3+0x82c>
1010b014:	4811883a 	mov	r8,r9
1010b018:	3023883a 	mov	r17,r6
1010b01c:	3825883a 	mov	r18,r7
1010b020:	0401ffc4 	movi	r16,2047
1010b024:	003e8006 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b028:	4462b03a 	or	r17,r8,r17
1010b02c:	8822c03a 	cmpne	r17,r17,zero
1010b030:	0007883a 	mov	r3,zero
1010b034:	003f8b06 	br	1010ae64 <__alt_data_end+0xfffeae64>
1010b038:	0141ffc4 	movi	r5,2047
1010b03c:	11403b26 	beq	r2,r5,1010b12c <__adddf3+0x780>
1010b040:	0109c83a 	sub	r4,zero,r4
1010b044:	42002034 	orhi	r8,r8,128
1010b048:	01400e04 	movi	r5,56
1010b04c:	29006716 	blt	r5,r4,1010b1ec <__adddf3+0x840>
1010b050:	014007c4 	movi	r5,31
1010b054:	29007016 	blt	r5,r4,1010b218 <__adddf3+0x86c>
1010b058:	01400804 	movi	r5,32
1010b05c:	290bc83a 	sub	r5,r5,r4
1010b060:	4154983a 	sll	r10,r8,r5
1010b064:	890ed83a 	srl	r7,r17,r4
1010b068:	894a983a 	sll	r5,r17,r5
1010b06c:	4108d83a 	srl	r4,r8,r4
1010b070:	51e2b03a 	or	r17,r10,r7
1010b074:	280ac03a 	cmpne	r5,r5,zero
1010b078:	8962b03a 	or	r17,r17,r5
1010b07c:	89a3883a 	add	r17,r17,r6
1010b080:	2253883a 	add	r9,r4,r9
1010b084:	898d803a 	cmpltu	r6,r17,r6
1010b088:	3251883a 	add	r8,r6,r9
1010b08c:	1021883a 	mov	r16,r2
1010b090:	003ee506 	br	1010ac28 <__alt_data_end+0xfffeac28>
1010b094:	4984b03a 	or	r2,r9,r6
1010b098:	103e6326 	beq	r2,zero,1010aa28 <__alt_data_end+0xfffeaa28>
1010b09c:	8987c83a 	sub	r3,r17,r6
1010b0a0:	88c9803a 	cmpltu	r4,r17,r3
1010b0a4:	4245c83a 	sub	r2,r8,r9
1010b0a8:	1105c83a 	sub	r2,r2,r4
1010b0ac:	1100202c 	andhi	r4,r2,128
1010b0b0:	203ebb26 	beq	r4,zero,1010aba0 <__alt_data_end+0xfffeaba0>
1010b0b4:	3463c83a 	sub	r17,r6,r17
1010b0b8:	4a07c83a 	sub	r3,r9,r8
1010b0bc:	344d803a 	cmpltu	r6,r6,r17
1010b0c0:	1991c83a 	sub	r8,r3,r6
1010b0c4:	3825883a 	mov	r18,r7
1010b0c8:	003e5706 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b0cc:	4984b03a 	or	r2,r9,r6
1010b0d0:	10002e26 	beq	r2,zero,1010b18c <__adddf3+0x7e0>
1010b0d4:	4004d0fa 	srli	r2,r8,3
1010b0d8:	8822d0fa 	srli	r17,r17,3
1010b0dc:	4010977a 	slli	r8,r8,29
1010b0e0:	10c0022c 	andhi	r3,r2,8
1010b0e4:	4462b03a 	or	r17,r8,r17
1010b0e8:	18000826 	beq	r3,zero,1010b10c <__adddf3+0x760>
1010b0ec:	4808d0fa 	srli	r4,r9,3
1010b0f0:	20c0022c 	andhi	r3,r4,8
1010b0f4:	1800051e 	bne	r3,zero,1010b10c <__adddf3+0x760>
1010b0f8:	300cd0fa 	srli	r6,r6,3
1010b0fc:	4806977a 	slli	r3,r9,29
1010b100:	2005883a 	mov	r2,r4
1010b104:	3825883a 	mov	r18,r7
1010b108:	19a2b03a 	or	r17,r3,r6
1010b10c:	8810d77a 	srli	r8,r17,29
1010b110:	100490fa 	slli	r2,r2,3
1010b114:	882290fa 	slli	r17,r17,3
1010b118:	0401ffc4 	movi	r16,2047
1010b11c:	4090b03a 	or	r8,r8,r2
1010b120:	003e4106 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b124:	0141ffc4 	movi	r5,2047
1010b128:	117fc71e 	bne	r2,r5,1010b048 <__alt_data_end+0xfffeb048>
1010b12c:	4811883a 	mov	r8,r9
1010b130:	3023883a 	mov	r17,r6
1010b134:	1021883a 	mov	r16,r2
1010b138:	003e3b06 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b13c:	10002f26 	beq	r2,zero,1010b1fc <__adddf3+0x850>
1010b140:	4984b03a 	or	r2,r9,r6
1010b144:	10001126 	beq	r2,zero,1010b18c <__adddf3+0x7e0>
1010b148:	4004d0fa 	srli	r2,r8,3
1010b14c:	8822d0fa 	srli	r17,r17,3
1010b150:	4010977a 	slli	r8,r8,29
1010b154:	10c0022c 	andhi	r3,r2,8
1010b158:	4462b03a 	or	r17,r8,r17
1010b15c:	183feb26 	beq	r3,zero,1010b10c <__alt_data_end+0xfffeb10c>
1010b160:	4808d0fa 	srli	r4,r9,3
1010b164:	20c0022c 	andhi	r3,r4,8
1010b168:	183fe81e 	bne	r3,zero,1010b10c <__alt_data_end+0xfffeb10c>
1010b16c:	300cd0fa 	srli	r6,r6,3
1010b170:	4806977a 	slli	r3,r9,29
1010b174:	2005883a 	mov	r2,r4
1010b178:	19a2b03a 	or	r17,r3,r6
1010b17c:	003fe306 	br	1010b10c <__alt_data_end+0xfffeb10c>
1010b180:	0011883a 	mov	r8,zero
1010b184:	0005883a 	mov	r2,zero
1010b188:	003e3f06 	br	1010aa88 <__alt_data_end+0xfffeaa88>
1010b18c:	0401ffc4 	movi	r16,2047
1010b190:	003e2506 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b194:	0013883a 	mov	r9,zero
1010b198:	003f8406 	br	1010afac <__alt_data_end+0xfffeafac>
1010b19c:	0005883a 	mov	r2,zero
1010b1a0:	0007883a 	mov	r3,zero
1010b1a4:	003e8906 	br	1010abcc <__alt_data_end+0xfffeabcc>
1010b1a8:	197ff804 	addi	r5,r3,-32
1010b1ac:	01000804 	movi	r4,32
1010b1b0:	414ad83a 	srl	r5,r8,r5
1010b1b4:	19002426 	beq	r3,r4,1010b248 <__adddf3+0x89c>
1010b1b8:	01001004 	movi	r4,64
1010b1bc:	20c7c83a 	sub	r3,r4,r3
1010b1c0:	40c6983a 	sll	r3,r8,r3
1010b1c4:	1c46b03a 	or	r3,r3,r17
1010b1c8:	1806c03a 	cmpne	r3,r3,zero
1010b1cc:	28e2b03a 	or	r17,r5,r3
1010b1d0:	0007883a 	mov	r3,zero
1010b1d4:	003f2306 	br	1010ae64 <__alt_data_end+0xfffeae64>
1010b1d8:	0007883a 	mov	r3,zero
1010b1dc:	5811883a 	mov	r8,r11
1010b1e0:	00bfffc4 	movi	r2,-1
1010b1e4:	0401ffc4 	movi	r16,2047
1010b1e8:	003e7806 	br	1010abcc <__alt_data_end+0xfffeabcc>
1010b1ec:	4462b03a 	or	r17,r8,r17
1010b1f0:	8822c03a 	cmpne	r17,r17,zero
1010b1f4:	0009883a 	mov	r4,zero
1010b1f8:	003fa006 	br	1010b07c <__alt_data_end+0xfffeb07c>
1010b1fc:	4811883a 	mov	r8,r9
1010b200:	3023883a 	mov	r17,r6
1010b204:	0401ffc4 	movi	r16,2047
1010b208:	003e0706 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b20c:	4811883a 	mov	r8,r9
1010b210:	3023883a 	mov	r17,r6
1010b214:	003e0406 	br	1010aa28 <__alt_data_end+0xfffeaa28>
1010b218:	21fff804 	addi	r7,r4,-32
1010b21c:	01400804 	movi	r5,32
1010b220:	41ced83a 	srl	r7,r8,r7
1010b224:	21400a26 	beq	r4,r5,1010b250 <__adddf3+0x8a4>
1010b228:	01401004 	movi	r5,64
1010b22c:	2909c83a 	sub	r4,r5,r4
1010b230:	4108983a 	sll	r4,r8,r4
1010b234:	2448b03a 	or	r4,r4,r17
1010b238:	2008c03a 	cmpne	r4,r4,zero
1010b23c:	3922b03a 	or	r17,r7,r4
1010b240:	0009883a 	mov	r4,zero
1010b244:	003f8d06 	br	1010b07c <__alt_data_end+0xfffeb07c>
1010b248:	0007883a 	mov	r3,zero
1010b24c:	003fdd06 	br	1010b1c4 <__alt_data_end+0xfffeb1c4>
1010b250:	0009883a 	mov	r4,zero
1010b254:	003ff706 	br	1010b234 <__alt_data_end+0xfffeb234>

1010b258 <__divdf3>:
1010b258:	defff204 	addi	sp,sp,-56
1010b25c:	dd400915 	stw	r21,36(sp)
1010b260:	282ad53a 	srli	r21,r5,20
1010b264:	dd000815 	stw	r20,32(sp)
1010b268:	2828d7fa 	srli	r20,r5,31
1010b26c:	dc000415 	stw	r16,16(sp)
1010b270:	04000434 	movhi	r16,16
1010b274:	df000c15 	stw	fp,48(sp)
1010b278:	843fffc4 	addi	r16,r16,-1
1010b27c:	dfc00d15 	stw	ra,52(sp)
1010b280:	ddc00b15 	stw	r23,44(sp)
1010b284:	dd800a15 	stw	r22,40(sp)
1010b288:	dcc00715 	stw	r19,28(sp)
1010b28c:	dc800615 	stw	r18,24(sp)
1010b290:	dc400515 	stw	r17,20(sp)
1010b294:	ad41ffcc 	andi	r21,r21,2047
1010b298:	2c20703a 	and	r16,r5,r16
1010b29c:	a7003fcc 	andi	fp,r20,255
1010b2a0:	a8006126 	beq	r21,zero,1010b428 <__divdf3+0x1d0>
1010b2a4:	0081ffc4 	movi	r2,2047
1010b2a8:	2025883a 	mov	r18,r4
1010b2ac:	a8803726 	beq	r21,r2,1010b38c <__divdf3+0x134>
1010b2b0:	80800434 	orhi	r2,r16,16
1010b2b4:	100490fa 	slli	r2,r2,3
1010b2b8:	2020d77a 	srli	r16,r4,29
1010b2bc:	202490fa 	slli	r18,r4,3
1010b2c0:	ad7f0044 	addi	r21,r21,-1023
1010b2c4:	80a0b03a 	or	r16,r16,r2
1010b2c8:	0027883a 	mov	r19,zero
1010b2cc:	0013883a 	mov	r9,zero
1010b2d0:	3804d53a 	srli	r2,r7,20
1010b2d4:	382cd7fa 	srli	r22,r7,31
1010b2d8:	04400434 	movhi	r17,16
1010b2dc:	8c7fffc4 	addi	r17,r17,-1
1010b2e0:	1081ffcc 	andi	r2,r2,2047
1010b2e4:	3011883a 	mov	r8,r6
1010b2e8:	3c62703a 	and	r17,r7,r17
1010b2ec:	b5c03fcc 	andi	r23,r22,255
1010b2f0:	10006c26 	beq	r2,zero,1010b4a4 <__divdf3+0x24c>
1010b2f4:	00c1ffc4 	movi	r3,2047
1010b2f8:	10c06426 	beq	r2,r3,1010b48c <__divdf3+0x234>
1010b2fc:	88c00434 	orhi	r3,r17,16
1010b300:	180690fa 	slli	r3,r3,3
1010b304:	3022d77a 	srli	r17,r6,29
1010b308:	301090fa 	slli	r8,r6,3
1010b30c:	10bf0044 	addi	r2,r2,-1023
1010b310:	88e2b03a 	or	r17,r17,r3
1010b314:	000f883a 	mov	r7,zero
1010b318:	a58cf03a 	xor	r6,r20,r22
1010b31c:	3cc8b03a 	or	r4,r7,r19
1010b320:	a8abc83a 	sub	r21,r21,r2
1010b324:	008003c4 	movi	r2,15
1010b328:	3007883a 	mov	r3,r6
1010b32c:	34c03fcc 	andi	r19,r6,255
1010b330:	11009036 	bltu	r2,r4,1010b574 <__divdf3+0x31c>
1010b334:	200890ba 	slli	r4,r4,2
1010b338:	00840474 	movhi	r2,4113
1010b33c:	10acd304 	addi	r2,r2,-19636
1010b340:	2089883a 	add	r4,r4,r2
1010b344:	20800017 	ldw	r2,0(r4)
1010b348:	1000683a 	jmp	r2
1010b34c:	1010b574 	orhi	zero,r2,17109
1010b350:	1010b3c4 	addi	zero,r2,17103
1010b354:	1010b564 	muli	zero,r2,17109
1010b358:	1010b3b8 	rdprs	zero,r2,17102
1010b35c:	1010b564 	muli	zero,r2,17109
1010b360:	1010b538 	rdprs	zero,r2,17108
1010b364:	1010b564 	muli	zero,r2,17109
1010b368:	1010b3b8 	rdprs	zero,r2,17102
1010b36c:	1010b3c4 	addi	zero,r2,17103
1010b370:	1010b3c4 	addi	zero,r2,17103
1010b374:	1010b538 	rdprs	zero,r2,17108
1010b378:	1010b3b8 	rdprs	zero,r2,17102
1010b37c:	1010b3a8 	cmpgeui	zero,r2,17102
1010b380:	1010b3a8 	cmpgeui	zero,r2,17102
1010b384:	1010b3a8 	cmpgeui	zero,r2,17102
1010b388:	1010b858 	cmpnei	zero,r2,17121
1010b38c:	2404b03a 	or	r2,r4,r16
1010b390:	1000661e 	bne	r2,zero,1010b52c <__divdf3+0x2d4>
1010b394:	04c00204 	movi	r19,8
1010b398:	0021883a 	mov	r16,zero
1010b39c:	0025883a 	mov	r18,zero
1010b3a0:	02400084 	movi	r9,2
1010b3a4:	003fca06 	br	1010b2d0 <__alt_data_end+0xfffeb2d0>
1010b3a8:	8023883a 	mov	r17,r16
1010b3ac:	9011883a 	mov	r8,r18
1010b3b0:	e02f883a 	mov	r23,fp
1010b3b4:	480f883a 	mov	r7,r9
1010b3b8:	00800084 	movi	r2,2
1010b3bc:	3881311e 	bne	r7,r2,1010b884 <__divdf3+0x62c>
1010b3c0:	b827883a 	mov	r19,r23
1010b3c4:	98c0004c 	andi	r3,r19,1
1010b3c8:	0081ffc4 	movi	r2,2047
1010b3cc:	000b883a 	mov	r5,zero
1010b3d0:	0025883a 	mov	r18,zero
1010b3d4:	1004953a 	slli	r2,r2,20
1010b3d8:	18c03fcc 	andi	r3,r3,255
1010b3dc:	04400434 	movhi	r17,16
1010b3e0:	8c7fffc4 	addi	r17,r17,-1
1010b3e4:	180697fa 	slli	r3,r3,31
1010b3e8:	2c4a703a 	and	r5,r5,r17
1010b3ec:	288ab03a 	or	r5,r5,r2
1010b3f0:	28c6b03a 	or	r3,r5,r3
1010b3f4:	9005883a 	mov	r2,r18
1010b3f8:	dfc00d17 	ldw	ra,52(sp)
1010b3fc:	df000c17 	ldw	fp,48(sp)
1010b400:	ddc00b17 	ldw	r23,44(sp)
1010b404:	dd800a17 	ldw	r22,40(sp)
1010b408:	dd400917 	ldw	r21,36(sp)
1010b40c:	dd000817 	ldw	r20,32(sp)
1010b410:	dcc00717 	ldw	r19,28(sp)
1010b414:	dc800617 	ldw	r18,24(sp)
1010b418:	dc400517 	ldw	r17,20(sp)
1010b41c:	dc000417 	ldw	r16,16(sp)
1010b420:	dec00e04 	addi	sp,sp,56
1010b424:	f800283a 	ret
1010b428:	2404b03a 	or	r2,r4,r16
1010b42c:	2027883a 	mov	r19,r4
1010b430:	10003926 	beq	r2,zero,1010b518 <__divdf3+0x2c0>
1010b434:	80012e26 	beq	r16,zero,1010b8f0 <__divdf3+0x698>
1010b438:	8009883a 	mov	r4,r16
1010b43c:	d9800315 	stw	r6,12(sp)
1010b440:	d9c00215 	stw	r7,8(sp)
1010b444:	010cfb00 	call	1010cfb0 <__clzsi2>
1010b448:	d9800317 	ldw	r6,12(sp)
1010b44c:	d9c00217 	ldw	r7,8(sp)
1010b450:	113ffd44 	addi	r4,r2,-11
1010b454:	00c00704 	movi	r3,28
1010b458:	19012116 	blt	r3,r4,1010b8e0 <__divdf3+0x688>
1010b45c:	00c00744 	movi	r3,29
1010b460:	147ffe04 	addi	r17,r2,-8
1010b464:	1907c83a 	sub	r3,r3,r4
1010b468:	8460983a 	sll	r16,r16,r17
1010b46c:	98c6d83a 	srl	r3,r19,r3
1010b470:	9c64983a 	sll	r18,r19,r17
1010b474:	1c20b03a 	or	r16,r3,r16
1010b478:	1080fcc4 	addi	r2,r2,1011
1010b47c:	00abc83a 	sub	r21,zero,r2
1010b480:	0027883a 	mov	r19,zero
1010b484:	0013883a 	mov	r9,zero
1010b488:	003f9106 	br	1010b2d0 <__alt_data_end+0xfffeb2d0>
1010b48c:	3446b03a 	or	r3,r6,r17
1010b490:	18001f1e 	bne	r3,zero,1010b510 <__divdf3+0x2b8>
1010b494:	0023883a 	mov	r17,zero
1010b498:	0011883a 	mov	r8,zero
1010b49c:	01c00084 	movi	r7,2
1010b4a0:	003f9d06 	br	1010b318 <__alt_data_end+0xfffeb318>
1010b4a4:	3446b03a 	or	r3,r6,r17
1010b4a8:	18001526 	beq	r3,zero,1010b500 <__divdf3+0x2a8>
1010b4ac:	88011b26 	beq	r17,zero,1010b91c <__divdf3+0x6c4>
1010b4b0:	8809883a 	mov	r4,r17
1010b4b4:	d9800315 	stw	r6,12(sp)
1010b4b8:	da400115 	stw	r9,4(sp)
1010b4bc:	010cfb00 	call	1010cfb0 <__clzsi2>
1010b4c0:	d9800317 	ldw	r6,12(sp)
1010b4c4:	da400117 	ldw	r9,4(sp)
1010b4c8:	113ffd44 	addi	r4,r2,-11
1010b4cc:	00c00704 	movi	r3,28
1010b4d0:	19010e16 	blt	r3,r4,1010b90c <__divdf3+0x6b4>
1010b4d4:	00c00744 	movi	r3,29
1010b4d8:	123ffe04 	addi	r8,r2,-8
1010b4dc:	1907c83a 	sub	r3,r3,r4
1010b4e0:	8a22983a 	sll	r17,r17,r8
1010b4e4:	30c6d83a 	srl	r3,r6,r3
1010b4e8:	3210983a 	sll	r8,r6,r8
1010b4ec:	1c62b03a 	or	r17,r3,r17
1010b4f0:	1080fcc4 	addi	r2,r2,1011
1010b4f4:	0085c83a 	sub	r2,zero,r2
1010b4f8:	000f883a 	mov	r7,zero
1010b4fc:	003f8606 	br	1010b318 <__alt_data_end+0xfffeb318>
1010b500:	0023883a 	mov	r17,zero
1010b504:	0011883a 	mov	r8,zero
1010b508:	01c00044 	movi	r7,1
1010b50c:	003f8206 	br	1010b318 <__alt_data_end+0xfffeb318>
1010b510:	01c000c4 	movi	r7,3
1010b514:	003f8006 	br	1010b318 <__alt_data_end+0xfffeb318>
1010b518:	04c00104 	movi	r19,4
1010b51c:	0021883a 	mov	r16,zero
1010b520:	0025883a 	mov	r18,zero
1010b524:	02400044 	movi	r9,1
1010b528:	003f6906 	br	1010b2d0 <__alt_data_end+0xfffeb2d0>
1010b52c:	04c00304 	movi	r19,12
1010b530:	024000c4 	movi	r9,3
1010b534:	003f6606 	br	1010b2d0 <__alt_data_end+0xfffeb2d0>
1010b538:	01400434 	movhi	r5,16
1010b53c:	0007883a 	mov	r3,zero
1010b540:	297fffc4 	addi	r5,r5,-1
1010b544:	04bfffc4 	movi	r18,-1
1010b548:	0081ffc4 	movi	r2,2047
1010b54c:	003fa106 	br	1010b3d4 <__alt_data_end+0xfffeb3d4>
1010b550:	00c00044 	movi	r3,1
1010b554:	1887c83a 	sub	r3,r3,r2
1010b558:	01000e04 	movi	r4,56
1010b55c:	20c1210e 	bge	r4,r3,1010b9e4 <__divdf3+0x78c>
1010b560:	98c0004c 	andi	r3,r19,1
1010b564:	0005883a 	mov	r2,zero
1010b568:	000b883a 	mov	r5,zero
1010b56c:	0025883a 	mov	r18,zero
1010b570:	003f9806 	br	1010b3d4 <__alt_data_end+0xfffeb3d4>
1010b574:	8c00fd36 	bltu	r17,r16,1010b96c <__divdf3+0x714>
1010b578:	8440fb26 	beq	r16,r17,1010b968 <__divdf3+0x710>
1010b57c:	8007883a 	mov	r3,r16
1010b580:	ad7fffc4 	addi	r21,r21,-1
1010b584:	0021883a 	mov	r16,zero
1010b588:	4004d63a 	srli	r2,r8,24
1010b58c:	8822923a 	slli	r17,r17,8
1010b590:	1809883a 	mov	r4,r3
1010b594:	402c923a 	slli	r22,r8,8
1010b598:	88b8b03a 	or	fp,r17,r2
1010b59c:	e028d43a 	srli	r20,fp,16
1010b5a0:	d8c00015 	stw	r3,0(sp)
1010b5a4:	e5ffffcc 	andi	r23,fp,65535
1010b5a8:	a00b883a 	mov	r5,r20
1010b5ac:	010a8f00 	call	1010a8f0 <__udivsi3>
1010b5b0:	d8c00017 	ldw	r3,0(sp)
1010b5b4:	a00b883a 	mov	r5,r20
1010b5b8:	d8800315 	stw	r2,12(sp)
1010b5bc:	1809883a 	mov	r4,r3
1010b5c0:	010a9540 	call	1010a954 <__umodsi3>
1010b5c4:	d9800317 	ldw	r6,12(sp)
1010b5c8:	1006943a 	slli	r3,r2,16
1010b5cc:	9004d43a 	srli	r2,r18,16
1010b5d0:	b9a3383a 	mul	r17,r23,r6
1010b5d4:	10c4b03a 	or	r2,r2,r3
1010b5d8:	1440062e 	bgeu	r2,r17,1010b5f4 <__divdf3+0x39c>
1010b5dc:	1705883a 	add	r2,r2,fp
1010b5e0:	30ffffc4 	addi	r3,r6,-1
1010b5e4:	1700ee36 	bltu	r2,fp,1010b9a0 <__divdf3+0x748>
1010b5e8:	1440ed2e 	bgeu	r2,r17,1010b9a0 <__divdf3+0x748>
1010b5ec:	31bfff84 	addi	r6,r6,-2
1010b5f0:	1705883a 	add	r2,r2,fp
1010b5f4:	1463c83a 	sub	r17,r2,r17
1010b5f8:	a00b883a 	mov	r5,r20
1010b5fc:	8809883a 	mov	r4,r17
1010b600:	d9800315 	stw	r6,12(sp)
1010b604:	010a8f00 	call	1010a8f0 <__udivsi3>
1010b608:	a00b883a 	mov	r5,r20
1010b60c:	8809883a 	mov	r4,r17
1010b610:	d8800215 	stw	r2,8(sp)
1010b614:	010a9540 	call	1010a954 <__umodsi3>
1010b618:	d9c00217 	ldw	r7,8(sp)
1010b61c:	1004943a 	slli	r2,r2,16
1010b620:	94bfffcc 	andi	r18,r18,65535
1010b624:	b9d1383a 	mul	r8,r23,r7
1010b628:	90a4b03a 	or	r18,r18,r2
1010b62c:	d9800317 	ldw	r6,12(sp)
1010b630:	9200062e 	bgeu	r18,r8,1010b64c <__divdf3+0x3f4>
1010b634:	9725883a 	add	r18,r18,fp
1010b638:	38bfffc4 	addi	r2,r7,-1
1010b63c:	9700d636 	bltu	r18,fp,1010b998 <__divdf3+0x740>
1010b640:	9200d52e 	bgeu	r18,r8,1010b998 <__divdf3+0x740>
1010b644:	39ffff84 	addi	r7,r7,-2
1010b648:	9725883a 	add	r18,r18,fp
1010b64c:	3004943a 	slli	r2,r6,16
1010b650:	b012d43a 	srli	r9,r22,16
1010b654:	b1bfffcc 	andi	r6,r22,65535
1010b658:	11e2b03a 	or	r17,r2,r7
1010b65c:	8806d43a 	srli	r3,r17,16
1010b660:	893fffcc 	andi	r4,r17,65535
1010b664:	218b383a 	mul	r5,r4,r6
1010b668:	30c5383a 	mul	r2,r6,r3
1010b66c:	2249383a 	mul	r4,r4,r9
1010b670:	280ed43a 	srli	r7,r5,16
1010b674:	9225c83a 	sub	r18,r18,r8
1010b678:	2089883a 	add	r4,r4,r2
1010b67c:	3909883a 	add	r4,r7,r4
1010b680:	1a47383a 	mul	r3,r3,r9
1010b684:	2080022e 	bgeu	r4,r2,1010b690 <__divdf3+0x438>
1010b688:	00800074 	movhi	r2,1
1010b68c:	1887883a 	add	r3,r3,r2
1010b690:	2004d43a 	srli	r2,r4,16
1010b694:	2008943a 	slli	r4,r4,16
1010b698:	297fffcc 	andi	r5,r5,65535
1010b69c:	10c7883a 	add	r3,r2,r3
1010b6a0:	2149883a 	add	r4,r4,r5
1010b6a4:	90c0a536 	bltu	r18,r3,1010b93c <__divdf3+0x6e4>
1010b6a8:	90c0bf26 	beq	r18,r3,1010b9a8 <__divdf3+0x750>
1010b6ac:	90c7c83a 	sub	r3,r18,r3
1010b6b0:	810fc83a 	sub	r7,r16,r4
1010b6b4:	81e5803a 	cmpltu	r18,r16,r7
1010b6b8:	1ca5c83a 	sub	r18,r3,r18
1010b6bc:	e480c126 	beq	fp,r18,1010b9c4 <__divdf3+0x76c>
1010b6c0:	a00b883a 	mov	r5,r20
1010b6c4:	9009883a 	mov	r4,r18
1010b6c8:	d9800315 	stw	r6,12(sp)
1010b6cc:	d9c00215 	stw	r7,8(sp)
1010b6d0:	da400115 	stw	r9,4(sp)
1010b6d4:	010a8f00 	call	1010a8f0 <__udivsi3>
1010b6d8:	a00b883a 	mov	r5,r20
1010b6dc:	9009883a 	mov	r4,r18
1010b6e0:	d8800015 	stw	r2,0(sp)
1010b6e4:	010a9540 	call	1010a954 <__umodsi3>
1010b6e8:	d9c00217 	ldw	r7,8(sp)
1010b6ec:	da000017 	ldw	r8,0(sp)
1010b6f0:	1006943a 	slli	r3,r2,16
1010b6f4:	3804d43a 	srli	r2,r7,16
1010b6f8:	ba21383a 	mul	r16,r23,r8
1010b6fc:	d9800317 	ldw	r6,12(sp)
1010b700:	10c4b03a 	or	r2,r2,r3
1010b704:	da400117 	ldw	r9,4(sp)
1010b708:	1400062e 	bgeu	r2,r16,1010b724 <__divdf3+0x4cc>
1010b70c:	1705883a 	add	r2,r2,fp
1010b710:	40ffffc4 	addi	r3,r8,-1
1010b714:	1700ad36 	bltu	r2,fp,1010b9cc <__divdf3+0x774>
1010b718:	1400ac2e 	bgeu	r2,r16,1010b9cc <__divdf3+0x774>
1010b71c:	423fff84 	addi	r8,r8,-2
1010b720:	1705883a 	add	r2,r2,fp
1010b724:	1421c83a 	sub	r16,r2,r16
1010b728:	a00b883a 	mov	r5,r20
1010b72c:	8009883a 	mov	r4,r16
1010b730:	d9800315 	stw	r6,12(sp)
1010b734:	d9c00215 	stw	r7,8(sp)
1010b738:	da000015 	stw	r8,0(sp)
1010b73c:	da400115 	stw	r9,4(sp)
1010b740:	010a8f00 	call	1010a8f0 <__udivsi3>
1010b744:	8009883a 	mov	r4,r16
1010b748:	a00b883a 	mov	r5,r20
1010b74c:	1025883a 	mov	r18,r2
1010b750:	010a9540 	call	1010a954 <__umodsi3>
1010b754:	d9c00217 	ldw	r7,8(sp)
1010b758:	1004943a 	slli	r2,r2,16
1010b75c:	bcaf383a 	mul	r23,r23,r18
1010b760:	393fffcc 	andi	r4,r7,65535
1010b764:	2088b03a 	or	r4,r4,r2
1010b768:	d9800317 	ldw	r6,12(sp)
1010b76c:	da000017 	ldw	r8,0(sp)
1010b770:	da400117 	ldw	r9,4(sp)
1010b774:	25c0062e 	bgeu	r4,r23,1010b790 <__divdf3+0x538>
1010b778:	2709883a 	add	r4,r4,fp
1010b77c:	90bfffc4 	addi	r2,r18,-1
1010b780:	27009436 	bltu	r4,fp,1010b9d4 <__divdf3+0x77c>
1010b784:	25c0932e 	bgeu	r4,r23,1010b9d4 <__divdf3+0x77c>
1010b788:	94bfff84 	addi	r18,r18,-2
1010b78c:	2709883a 	add	r4,r4,fp
1010b790:	4004943a 	slli	r2,r8,16
1010b794:	25efc83a 	sub	r23,r4,r23
1010b798:	1490b03a 	or	r8,r2,r18
1010b79c:	4008d43a 	srli	r4,r8,16
1010b7a0:	40ffffcc 	andi	r3,r8,65535
1010b7a4:	30c5383a 	mul	r2,r6,r3
1010b7a8:	1a47383a 	mul	r3,r3,r9
1010b7ac:	310d383a 	mul	r6,r6,r4
1010b7b0:	100ad43a 	srli	r5,r2,16
1010b7b4:	4913383a 	mul	r9,r9,r4
1010b7b8:	1987883a 	add	r3,r3,r6
1010b7bc:	28c7883a 	add	r3,r5,r3
1010b7c0:	1980022e 	bgeu	r3,r6,1010b7cc <__divdf3+0x574>
1010b7c4:	01000074 	movhi	r4,1
1010b7c8:	4913883a 	add	r9,r9,r4
1010b7cc:	1808d43a 	srli	r4,r3,16
1010b7d0:	1806943a 	slli	r3,r3,16
1010b7d4:	10bfffcc 	andi	r2,r2,65535
1010b7d8:	2253883a 	add	r9,r4,r9
1010b7dc:	1887883a 	add	r3,r3,r2
1010b7e0:	ba403836 	bltu	r23,r9,1010b8c4 <__divdf3+0x66c>
1010b7e4:	ba403626 	beq	r23,r9,1010b8c0 <__divdf3+0x668>
1010b7e8:	42000054 	ori	r8,r8,1
1010b7ec:	a880ffc4 	addi	r2,r21,1023
1010b7f0:	00bf570e 	bge	zero,r2,1010b550 <__alt_data_end+0xfffeb550>
1010b7f4:	40c001cc 	andi	r3,r8,7
1010b7f8:	18000726 	beq	r3,zero,1010b818 <__divdf3+0x5c0>
1010b7fc:	40c003cc 	andi	r3,r8,15
1010b800:	01000104 	movi	r4,4
1010b804:	19000426 	beq	r3,r4,1010b818 <__divdf3+0x5c0>
1010b808:	4107883a 	add	r3,r8,r4
1010b80c:	1a11803a 	cmpltu	r8,r3,r8
1010b810:	8a23883a 	add	r17,r17,r8
1010b814:	1811883a 	mov	r8,r3
1010b818:	88c0402c 	andhi	r3,r17,256
1010b81c:	18000426 	beq	r3,zero,1010b830 <__divdf3+0x5d8>
1010b820:	00ffc034 	movhi	r3,65280
1010b824:	18ffffc4 	addi	r3,r3,-1
1010b828:	a8810004 	addi	r2,r21,1024
1010b82c:	88e2703a 	and	r17,r17,r3
1010b830:	00c1ff84 	movi	r3,2046
1010b834:	18bee316 	blt	r3,r2,1010b3c4 <__alt_data_end+0xfffeb3c4>
1010b838:	8824977a 	slli	r18,r17,29
1010b83c:	4010d0fa 	srli	r8,r8,3
1010b840:	8822927a 	slli	r17,r17,9
1010b844:	1081ffcc 	andi	r2,r2,2047
1010b848:	9224b03a 	or	r18,r18,r8
1010b84c:	880ad33a 	srli	r5,r17,12
1010b850:	98c0004c 	andi	r3,r19,1
1010b854:	003edf06 	br	1010b3d4 <__alt_data_end+0xfffeb3d4>
1010b858:	8080022c 	andhi	r2,r16,8
1010b85c:	10001226 	beq	r2,zero,1010b8a8 <__divdf3+0x650>
1010b860:	8880022c 	andhi	r2,r17,8
1010b864:	1000101e 	bne	r2,zero,1010b8a8 <__divdf3+0x650>
1010b868:	00800434 	movhi	r2,16
1010b86c:	89400234 	orhi	r5,r17,8
1010b870:	10bfffc4 	addi	r2,r2,-1
1010b874:	b007883a 	mov	r3,r22
1010b878:	288a703a 	and	r5,r5,r2
1010b87c:	4025883a 	mov	r18,r8
1010b880:	003f3106 	br	1010b548 <__alt_data_end+0xfffeb548>
1010b884:	008000c4 	movi	r2,3
1010b888:	3880a626 	beq	r7,r2,1010bb24 <__divdf3+0x8cc>
1010b88c:	00800044 	movi	r2,1
1010b890:	3880521e 	bne	r7,r2,1010b9dc <__divdf3+0x784>
1010b894:	b807883a 	mov	r3,r23
1010b898:	0005883a 	mov	r2,zero
1010b89c:	000b883a 	mov	r5,zero
1010b8a0:	0025883a 	mov	r18,zero
1010b8a4:	003ecb06 	br	1010b3d4 <__alt_data_end+0xfffeb3d4>
1010b8a8:	00800434 	movhi	r2,16
1010b8ac:	81400234 	orhi	r5,r16,8
1010b8b0:	10bfffc4 	addi	r2,r2,-1
1010b8b4:	a007883a 	mov	r3,r20
1010b8b8:	288a703a 	and	r5,r5,r2
1010b8bc:	003f2206 	br	1010b548 <__alt_data_end+0xfffeb548>
1010b8c0:	183fca26 	beq	r3,zero,1010b7ec <__alt_data_end+0xfffeb7ec>
1010b8c4:	e5ef883a 	add	r23,fp,r23
1010b8c8:	40bfffc4 	addi	r2,r8,-1
1010b8cc:	bf00392e 	bgeu	r23,fp,1010b9b4 <__divdf3+0x75c>
1010b8d0:	1011883a 	mov	r8,r2
1010b8d4:	ba7fc41e 	bne	r23,r9,1010b7e8 <__alt_data_end+0xfffeb7e8>
1010b8d8:	b0ffc31e 	bne	r22,r3,1010b7e8 <__alt_data_end+0xfffeb7e8>
1010b8dc:	003fc306 	br	1010b7ec <__alt_data_end+0xfffeb7ec>
1010b8e0:	143ff604 	addi	r16,r2,-40
1010b8e4:	9c20983a 	sll	r16,r19,r16
1010b8e8:	0025883a 	mov	r18,zero
1010b8ec:	003ee206 	br	1010b478 <__alt_data_end+0xfffeb478>
1010b8f0:	d9800315 	stw	r6,12(sp)
1010b8f4:	d9c00215 	stw	r7,8(sp)
1010b8f8:	010cfb00 	call	1010cfb0 <__clzsi2>
1010b8fc:	10800804 	addi	r2,r2,32
1010b900:	d9c00217 	ldw	r7,8(sp)
1010b904:	d9800317 	ldw	r6,12(sp)
1010b908:	003ed106 	br	1010b450 <__alt_data_end+0xfffeb450>
1010b90c:	147ff604 	addi	r17,r2,-40
1010b910:	3462983a 	sll	r17,r6,r17
1010b914:	0011883a 	mov	r8,zero
1010b918:	003ef506 	br	1010b4f0 <__alt_data_end+0xfffeb4f0>
1010b91c:	3009883a 	mov	r4,r6
1010b920:	d9800315 	stw	r6,12(sp)
1010b924:	da400115 	stw	r9,4(sp)
1010b928:	010cfb00 	call	1010cfb0 <__clzsi2>
1010b92c:	10800804 	addi	r2,r2,32
1010b930:	da400117 	ldw	r9,4(sp)
1010b934:	d9800317 	ldw	r6,12(sp)
1010b938:	003ee306 	br	1010b4c8 <__alt_data_end+0xfffeb4c8>
1010b93c:	85a1883a 	add	r16,r16,r22
1010b940:	8585803a 	cmpltu	r2,r16,r22
1010b944:	1705883a 	add	r2,r2,fp
1010b948:	14a5883a 	add	r18,r2,r18
1010b94c:	88bfffc4 	addi	r2,r17,-1
1010b950:	e4800c2e 	bgeu	fp,r18,1010b984 <__divdf3+0x72c>
1010b954:	90c03e36 	bltu	r18,r3,1010ba50 <__divdf3+0x7f8>
1010b958:	1c806926 	beq	r3,r18,1010bb00 <__divdf3+0x8a8>
1010b95c:	90c7c83a 	sub	r3,r18,r3
1010b960:	1023883a 	mov	r17,r2
1010b964:	003f5206 	br	1010b6b0 <__alt_data_end+0xfffeb6b0>
1010b968:	923f0436 	bltu	r18,r8,1010b57c <__alt_data_end+0xfffeb57c>
1010b96c:	800897fa 	slli	r4,r16,31
1010b970:	9004d07a 	srli	r2,r18,1
1010b974:	8006d07a 	srli	r3,r16,1
1010b978:	902097fa 	slli	r16,r18,31
1010b97c:	20a4b03a 	or	r18,r4,r2
1010b980:	003f0106 	br	1010b588 <__alt_data_end+0xfffeb588>
1010b984:	e4bff51e 	bne	fp,r18,1010b95c <__alt_data_end+0xfffeb95c>
1010b988:	85bff22e 	bgeu	r16,r22,1010b954 <__alt_data_end+0xfffeb954>
1010b98c:	e0c7c83a 	sub	r3,fp,r3
1010b990:	1023883a 	mov	r17,r2
1010b994:	003f4606 	br	1010b6b0 <__alt_data_end+0xfffeb6b0>
1010b998:	100f883a 	mov	r7,r2
1010b99c:	003f2b06 	br	1010b64c <__alt_data_end+0xfffeb64c>
1010b9a0:	180d883a 	mov	r6,r3
1010b9a4:	003f1306 	br	1010b5f4 <__alt_data_end+0xfffeb5f4>
1010b9a8:	813fe436 	bltu	r16,r4,1010b93c <__alt_data_end+0xfffeb93c>
1010b9ac:	0007883a 	mov	r3,zero
1010b9b0:	003f3f06 	br	1010b6b0 <__alt_data_end+0xfffeb6b0>
1010b9b4:	ba402c36 	bltu	r23,r9,1010ba68 <__divdf3+0x810>
1010b9b8:	4dc05426 	beq	r9,r23,1010bb0c <__divdf3+0x8b4>
1010b9bc:	1011883a 	mov	r8,r2
1010b9c0:	003f8906 	br	1010b7e8 <__alt_data_end+0xfffeb7e8>
1010b9c4:	023fffc4 	movi	r8,-1
1010b9c8:	003f8806 	br	1010b7ec <__alt_data_end+0xfffeb7ec>
1010b9cc:	1811883a 	mov	r8,r3
1010b9d0:	003f5406 	br	1010b724 <__alt_data_end+0xfffeb724>
1010b9d4:	1025883a 	mov	r18,r2
1010b9d8:	003f6d06 	br	1010b790 <__alt_data_end+0xfffeb790>
1010b9dc:	b827883a 	mov	r19,r23
1010b9e0:	003f8206 	br	1010b7ec <__alt_data_end+0xfffeb7ec>
1010b9e4:	010007c4 	movi	r4,31
1010b9e8:	20c02616 	blt	r4,r3,1010ba84 <__divdf3+0x82c>
1010b9ec:	00800804 	movi	r2,32
1010b9f0:	10c5c83a 	sub	r2,r2,r3
1010b9f4:	888a983a 	sll	r5,r17,r2
1010b9f8:	40c8d83a 	srl	r4,r8,r3
1010b9fc:	4084983a 	sll	r2,r8,r2
1010ba00:	88e2d83a 	srl	r17,r17,r3
1010ba04:	2906b03a 	or	r3,r5,r4
1010ba08:	1004c03a 	cmpne	r2,r2,zero
1010ba0c:	1886b03a 	or	r3,r3,r2
1010ba10:	188001cc 	andi	r2,r3,7
1010ba14:	10000726 	beq	r2,zero,1010ba34 <__divdf3+0x7dc>
1010ba18:	188003cc 	andi	r2,r3,15
1010ba1c:	01000104 	movi	r4,4
1010ba20:	11000426 	beq	r2,r4,1010ba34 <__divdf3+0x7dc>
1010ba24:	1805883a 	mov	r2,r3
1010ba28:	10c00104 	addi	r3,r2,4
1010ba2c:	1885803a 	cmpltu	r2,r3,r2
1010ba30:	88a3883a 	add	r17,r17,r2
1010ba34:	8880202c 	andhi	r2,r17,128
1010ba38:	10002726 	beq	r2,zero,1010bad8 <__divdf3+0x880>
1010ba3c:	98c0004c 	andi	r3,r19,1
1010ba40:	00800044 	movi	r2,1
1010ba44:	000b883a 	mov	r5,zero
1010ba48:	0025883a 	mov	r18,zero
1010ba4c:	003e6106 	br	1010b3d4 <__alt_data_end+0xfffeb3d4>
1010ba50:	85a1883a 	add	r16,r16,r22
1010ba54:	8585803a 	cmpltu	r2,r16,r22
1010ba58:	1705883a 	add	r2,r2,fp
1010ba5c:	14a5883a 	add	r18,r2,r18
1010ba60:	8c7fff84 	addi	r17,r17,-2
1010ba64:	003f1106 	br	1010b6ac <__alt_data_end+0xfffeb6ac>
1010ba68:	b589883a 	add	r4,r22,r22
1010ba6c:	25ad803a 	cmpltu	r22,r4,r22
1010ba70:	b739883a 	add	fp,r22,fp
1010ba74:	40bfff84 	addi	r2,r8,-2
1010ba78:	bf2f883a 	add	r23,r23,fp
1010ba7c:	202d883a 	mov	r22,r4
1010ba80:	003f9306 	br	1010b8d0 <__alt_data_end+0xfffeb8d0>
1010ba84:	013ff844 	movi	r4,-31
1010ba88:	2085c83a 	sub	r2,r4,r2
1010ba8c:	8888d83a 	srl	r4,r17,r2
1010ba90:	00800804 	movi	r2,32
1010ba94:	18802126 	beq	r3,r2,1010bb1c <__divdf3+0x8c4>
1010ba98:	00801004 	movi	r2,64
1010ba9c:	10c5c83a 	sub	r2,r2,r3
1010baa0:	8884983a 	sll	r2,r17,r2
1010baa4:	1204b03a 	or	r2,r2,r8
1010baa8:	1004c03a 	cmpne	r2,r2,zero
1010baac:	2084b03a 	or	r2,r4,r2
1010bab0:	144001cc 	andi	r17,r2,7
1010bab4:	88000d1e 	bne	r17,zero,1010baec <__divdf3+0x894>
1010bab8:	000b883a 	mov	r5,zero
1010babc:	1024d0fa 	srli	r18,r2,3
1010bac0:	98c0004c 	andi	r3,r19,1
1010bac4:	0005883a 	mov	r2,zero
1010bac8:	9464b03a 	or	r18,r18,r17
1010bacc:	003e4106 	br	1010b3d4 <__alt_data_end+0xfffeb3d4>
1010bad0:	1007883a 	mov	r3,r2
1010bad4:	0023883a 	mov	r17,zero
1010bad8:	880a927a 	slli	r5,r17,9
1010badc:	1805883a 	mov	r2,r3
1010bae0:	8822977a 	slli	r17,r17,29
1010bae4:	280ad33a 	srli	r5,r5,12
1010bae8:	003ff406 	br	1010babc <__alt_data_end+0xfffebabc>
1010baec:	10c003cc 	andi	r3,r2,15
1010baf0:	01000104 	movi	r4,4
1010baf4:	193ff626 	beq	r3,r4,1010bad0 <__alt_data_end+0xfffebad0>
1010baf8:	0023883a 	mov	r17,zero
1010bafc:	003fca06 	br	1010ba28 <__alt_data_end+0xfffeba28>
1010bb00:	813fd336 	bltu	r16,r4,1010ba50 <__alt_data_end+0xfffeba50>
1010bb04:	1023883a 	mov	r17,r2
1010bb08:	003fa806 	br	1010b9ac <__alt_data_end+0xfffeb9ac>
1010bb0c:	b0ffd636 	bltu	r22,r3,1010ba68 <__alt_data_end+0xfffeba68>
1010bb10:	1011883a 	mov	r8,r2
1010bb14:	b0ff341e 	bne	r22,r3,1010b7e8 <__alt_data_end+0xfffeb7e8>
1010bb18:	003f3406 	br	1010b7ec <__alt_data_end+0xfffeb7ec>
1010bb1c:	0005883a 	mov	r2,zero
1010bb20:	003fe006 	br	1010baa4 <__alt_data_end+0xfffebaa4>
1010bb24:	00800434 	movhi	r2,16
1010bb28:	89400234 	orhi	r5,r17,8
1010bb2c:	10bfffc4 	addi	r2,r2,-1
1010bb30:	b807883a 	mov	r3,r23
1010bb34:	288a703a 	and	r5,r5,r2
1010bb38:	4025883a 	mov	r18,r8
1010bb3c:	003e8206 	br	1010b548 <__alt_data_end+0xfffeb548>

1010bb40 <__eqdf2>:
1010bb40:	2804d53a 	srli	r2,r5,20
1010bb44:	3806d53a 	srli	r3,r7,20
1010bb48:	02000434 	movhi	r8,16
1010bb4c:	423fffc4 	addi	r8,r8,-1
1010bb50:	1081ffcc 	andi	r2,r2,2047
1010bb54:	0281ffc4 	movi	r10,2047
1010bb58:	2a12703a 	and	r9,r5,r8
1010bb5c:	18c1ffcc 	andi	r3,r3,2047
1010bb60:	3a10703a 	and	r8,r7,r8
1010bb64:	280ad7fa 	srli	r5,r5,31
1010bb68:	380ed7fa 	srli	r7,r7,31
1010bb6c:	12801026 	beq	r2,r10,1010bbb0 <__eqdf2+0x70>
1010bb70:	0281ffc4 	movi	r10,2047
1010bb74:	1a800a26 	beq	r3,r10,1010bba0 <__eqdf2+0x60>
1010bb78:	10c00226 	beq	r2,r3,1010bb84 <__eqdf2+0x44>
1010bb7c:	00800044 	movi	r2,1
1010bb80:	f800283a 	ret
1010bb84:	4a3ffd1e 	bne	r9,r8,1010bb7c <__alt_data_end+0xfffebb7c>
1010bb88:	21bffc1e 	bne	r4,r6,1010bb7c <__alt_data_end+0xfffebb7c>
1010bb8c:	29c00c26 	beq	r5,r7,1010bbc0 <__eqdf2+0x80>
1010bb90:	103ffa1e 	bne	r2,zero,1010bb7c <__alt_data_end+0xfffebb7c>
1010bb94:	2244b03a 	or	r2,r4,r9
1010bb98:	1004c03a 	cmpne	r2,r2,zero
1010bb9c:	f800283a 	ret
1010bba0:	3214b03a 	or	r10,r6,r8
1010bba4:	503ff426 	beq	r10,zero,1010bb78 <__alt_data_end+0xfffebb78>
1010bba8:	00800044 	movi	r2,1
1010bbac:	f800283a 	ret
1010bbb0:	2254b03a 	or	r10,r4,r9
1010bbb4:	503fee26 	beq	r10,zero,1010bb70 <__alt_data_end+0xfffebb70>
1010bbb8:	00800044 	movi	r2,1
1010bbbc:	f800283a 	ret
1010bbc0:	0005883a 	mov	r2,zero
1010bbc4:	f800283a 	ret

1010bbc8 <__gedf2>:
1010bbc8:	2804d53a 	srli	r2,r5,20
1010bbcc:	3806d53a 	srli	r3,r7,20
1010bbd0:	02000434 	movhi	r8,16
1010bbd4:	423fffc4 	addi	r8,r8,-1
1010bbd8:	1081ffcc 	andi	r2,r2,2047
1010bbdc:	0241ffc4 	movi	r9,2047
1010bbe0:	2a14703a 	and	r10,r5,r8
1010bbe4:	18c1ffcc 	andi	r3,r3,2047
1010bbe8:	3a10703a 	and	r8,r7,r8
1010bbec:	280ad7fa 	srli	r5,r5,31
1010bbf0:	380ed7fa 	srli	r7,r7,31
1010bbf4:	12401d26 	beq	r2,r9,1010bc6c <__gedf2+0xa4>
1010bbf8:	0241ffc4 	movi	r9,2047
1010bbfc:	1a401226 	beq	r3,r9,1010bc48 <__gedf2+0x80>
1010bc00:	1000081e 	bne	r2,zero,1010bc24 <__gedf2+0x5c>
1010bc04:	2296b03a 	or	r11,r4,r10
1010bc08:	5813003a 	cmpeq	r9,r11,zero
1010bc0c:	1800091e 	bne	r3,zero,1010bc34 <__gedf2+0x6c>
1010bc10:	3218b03a 	or	r12,r6,r8
1010bc14:	6000071e 	bne	r12,zero,1010bc34 <__gedf2+0x6c>
1010bc18:	0005883a 	mov	r2,zero
1010bc1c:	5800101e 	bne	r11,zero,1010bc60 <__gedf2+0x98>
1010bc20:	f800283a 	ret
1010bc24:	18000c1e 	bne	r3,zero,1010bc58 <__gedf2+0x90>
1010bc28:	3212b03a 	or	r9,r6,r8
1010bc2c:	48000c26 	beq	r9,zero,1010bc60 <__gedf2+0x98>
1010bc30:	0013883a 	mov	r9,zero
1010bc34:	39c03fcc 	andi	r7,r7,255
1010bc38:	48000826 	beq	r9,zero,1010bc5c <__gedf2+0x94>
1010bc3c:	38000926 	beq	r7,zero,1010bc64 <__gedf2+0x9c>
1010bc40:	00800044 	movi	r2,1
1010bc44:	f800283a 	ret
1010bc48:	3212b03a 	or	r9,r6,r8
1010bc4c:	483fec26 	beq	r9,zero,1010bc00 <__alt_data_end+0xfffebc00>
1010bc50:	00bfff84 	movi	r2,-2
1010bc54:	f800283a 	ret
1010bc58:	39c03fcc 	andi	r7,r7,255
1010bc5c:	29c00626 	beq	r5,r7,1010bc78 <__gedf2+0xb0>
1010bc60:	283ff726 	beq	r5,zero,1010bc40 <__alt_data_end+0xfffebc40>
1010bc64:	00bfffc4 	movi	r2,-1
1010bc68:	f800283a 	ret
1010bc6c:	2292b03a 	or	r9,r4,r10
1010bc70:	483fe126 	beq	r9,zero,1010bbf8 <__alt_data_end+0xfffebbf8>
1010bc74:	003ff606 	br	1010bc50 <__alt_data_end+0xfffebc50>
1010bc78:	18bff916 	blt	r3,r2,1010bc60 <__alt_data_end+0xfffebc60>
1010bc7c:	10c00316 	blt	r2,r3,1010bc8c <__gedf2+0xc4>
1010bc80:	42bff736 	bltu	r8,r10,1010bc60 <__alt_data_end+0xfffebc60>
1010bc84:	52000326 	beq	r10,r8,1010bc94 <__gedf2+0xcc>
1010bc88:	5200042e 	bgeu	r10,r8,1010bc9c <__gedf2+0xd4>
1010bc8c:	283fec1e 	bne	r5,zero,1010bc40 <__alt_data_end+0xfffebc40>
1010bc90:	003ff406 	br	1010bc64 <__alt_data_end+0xfffebc64>
1010bc94:	313ff236 	bltu	r6,r4,1010bc60 <__alt_data_end+0xfffebc60>
1010bc98:	21bffc36 	bltu	r4,r6,1010bc8c <__alt_data_end+0xfffebc8c>
1010bc9c:	0005883a 	mov	r2,zero
1010bca0:	f800283a 	ret

1010bca4 <__ledf2>:
1010bca4:	2804d53a 	srli	r2,r5,20
1010bca8:	3810d53a 	srli	r8,r7,20
1010bcac:	00c00434 	movhi	r3,16
1010bcb0:	18ffffc4 	addi	r3,r3,-1
1010bcb4:	1081ffcc 	andi	r2,r2,2047
1010bcb8:	0241ffc4 	movi	r9,2047
1010bcbc:	28d4703a 	and	r10,r5,r3
1010bcc0:	4201ffcc 	andi	r8,r8,2047
1010bcc4:	38c6703a 	and	r3,r7,r3
1010bcc8:	280ad7fa 	srli	r5,r5,31
1010bccc:	380ed7fa 	srli	r7,r7,31
1010bcd0:	12401f26 	beq	r2,r9,1010bd50 <__ledf2+0xac>
1010bcd4:	0241ffc4 	movi	r9,2047
1010bcd8:	42401426 	beq	r8,r9,1010bd2c <__ledf2+0x88>
1010bcdc:	1000091e 	bne	r2,zero,1010bd04 <__ledf2+0x60>
1010bce0:	2296b03a 	or	r11,r4,r10
1010bce4:	5813003a 	cmpeq	r9,r11,zero
1010bce8:	29403fcc 	andi	r5,r5,255
1010bcec:	40000a1e 	bne	r8,zero,1010bd18 <__ledf2+0x74>
1010bcf0:	30d8b03a 	or	r12,r6,r3
1010bcf4:	6000081e 	bne	r12,zero,1010bd18 <__ledf2+0x74>
1010bcf8:	0005883a 	mov	r2,zero
1010bcfc:	5800111e 	bne	r11,zero,1010bd44 <__ledf2+0xa0>
1010bd00:	f800283a 	ret
1010bd04:	29403fcc 	andi	r5,r5,255
1010bd08:	40000c1e 	bne	r8,zero,1010bd3c <__ledf2+0x98>
1010bd0c:	30d2b03a 	or	r9,r6,r3
1010bd10:	48000c26 	beq	r9,zero,1010bd44 <__ledf2+0xa0>
1010bd14:	0013883a 	mov	r9,zero
1010bd18:	39c03fcc 	andi	r7,r7,255
1010bd1c:	48000826 	beq	r9,zero,1010bd40 <__ledf2+0x9c>
1010bd20:	38001126 	beq	r7,zero,1010bd68 <__ledf2+0xc4>
1010bd24:	00800044 	movi	r2,1
1010bd28:	f800283a 	ret
1010bd2c:	30d2b03a 	or	r9,r6,r3
1010bd30:	483fea26 	beq	r9,zero,1010bcdc <__alt_data_end+0xfffebcdc>
1010bd34:	00800084 	movi	r2,2
1010bd38:	f800283a 	ret
1010bd3c:	39c03fcc 	andi	r7,r7,255
1010bd40:	39400726 	beq	r7,r5,1010bd60 <__ledf2+0xbc>
1010bd44:	2800081e 	bne	r5,zero,1010bd68 <__ledf2+0xc4>
1010bd48:	00800044 	movi	r2,1
1010bd4c:	f800283a 	ret
1010bd50:	2292b03a 	or	r9,r4,r10
1010bd54:	483fdf26 	beq	r9,zero,1010bcd4 <__alt_data_end+0xfffebcd4>
1010bd58:	00800084 	movi	r2,2
1010bd5c:	f800283a 	ret
1010bd60:	4080030e 	bge	r8,r2,1010bd70 <__ledf2+0xcc>
1010bd64:	383fef26 	beq	r7,zero,1010bd24 <__alt_data_end+0xfffebd24>
1010bd68:	00bfffc4 	movi	r2,-1
1010bd6c:	f800283a 	ret
1010bd70:	123feb16 	blt	r2,r8,1010bd20 <__alt_data_end+0xfffebd20>
1010bd74:	1abff336 	bltu	r3,r10,1010bd44 <__alt_data_end+0xfffebd44>
1010bd78:	50c00326 	beq	r10,r3,1010bd88 <__ledf2+0xe4>
1010bd7c:	50c0042e 	bgeu	r10,r3,1010bd90 <__ledf2+0xec>
1010bd80:	283fe81e 	bne	r5,zero,1010bd24 <__alt_data_end+0xfffebd24>
1010bd84:	003ff806 	br	1010bd68 <__alt_data_end+0xfffebd68>
1010bd88:	313fee36 	bltu	r6,r4,1010bd44 <__alt_data_end+0xfffebd44>
1010bd8c:	21bffc36 	bltu	r4,r6,1010bd80 <__alt_data_end+0xfffebd80>
1010bd90:	0005883a 	mov	r2,zero
1010bd94:	f800283a 	ret

1010bd98 <__muldf3>:
1010bd98:	defff304 	addi	sp,sp,-52
1010bd9c:	2804d53a 	srli	r2,r5,20
1010bda0:	dd800915 	stw	r22,36(sp)
1010bda4:	282cd7fa 	srli	r22,r5,31
1010bda8:	dc000315 	stw	r16,12(sp)
1010bdac:	04000434 	movhi	r16,16
1010bdb0:	dd400815 	stw	r21,32(sp)
1010bdb4:	dc800515 	stw	r18,20(sp)
1010bdb8:	843fffc4 	addi	r16,r16,-1
1010bdbc:	dfc00c15 	stw	ra,48(sp)
1010bdc0:	df000b15 	stw	fp,44(sp)
1010bdc4:	ddc00a15 	stw	r23,40(sp)
1010bdc8:	dd000715 	stw	r20,28(sp)
1010bdcc:	dcc00615 	stw	r19,24(sp)
1010bdd0:	dc400415 	stw	r17,16(sp)
1010bdd4:	1481ffcc 	andi	r18,r2,2047
1010bdd8:	2c20703a 	and	r16,r5,r16
1010bddc:	b02b883a 	mov	r21,r22
1010bde0:	b2403fcc 	andi	r9,r22,255
1010bde4:	90006026 	beq	r18,zero,1010bf68 <__muldf3+0x1d0>
1010bde8:	0081ffc4 	movi	r2,2047
1010bdec:	2029883a 	mov	r20,r4
1010bdf0:	90803626 	beq	r18,r2,1010becc <__muldf3+0x134>
1010bdf4:	80800434 	orhi	r2,r16,16
1010bdf8:	100490fa 	slli	r2,r2,3
1010bdfc:	2020d77a 	srli	r16,r4,29
1010be00:	202890fa 	slli	r20,r4,3
1010be04:	94bf0044 	addi	r18,r18,-1023
1010be08:	80a0b03a 	or	r16,r16,r2
1010be0c:	0027883a 	mov	r19,zero
1010be10:	0039883a 	mov	fp,zero
1010be14:	3804d53a 	srli	r2,r7,20
1010be18:	382ed7fa 	srli	r23,r7,31
1010be1c:	04400434 	movhi	r17,16
1010be20:	8c7fffc4 	addi	r17,r17,-1
1010be24:	1081ffcc 	andi	r2,r2,2047
1010be28:	3011883a 	mov	r8,r6
1010be2c:	3c62703a 	and	r17,r7,r17
1010be30:	ba803fcc 	andi	r10,r23,255
1010be34:	10006d26 	beq	r2,zero,1010bfec <__muldf3+0x254>
1010be38:	00c1ffc4 	movi	r3,2047
1010be3c:	10c06526 	beq	r2,r3,1010bfd4 <__muldf3+0x23c>
1010be40:	88c00434 	orhi	r3,r17,16
1010be44:	180690fa 	slli	r3,r3,3
1010be48:	3022d77a 	srli	r17,r6,29
1010be4c:	301090fa 	slli	r8,r6,3
1010be50:	10bf0044 	addi	r2,r2,-1023
1010be54:	88e2b03a 	or	r17,r17,r3
1010be58:	000b883a 	mov	r5,zero
1010be5c:	9085883a 	add	r2,r18,r2
1010be60:	2cc8b03a 	or	r4,r5,r19
1010be64:	00c003c4 	movi	r3,15
1010be68:	bdacf03a 	xor	r22,r23,r22
1010be6c:	12c00044 	addi	r11,r2,1
1010be70:	19009936 	bltu	r3,r4,1010c0d8 <__muldf3+0x340>
1010be74:	200890ba 	slli	r4,r4,2
1010be78:	00c40474 	movhi	r3,4113
1010be7c:	18efa304 	addi	r3,r3,-16756
1010be80:	20c9883a 	add	r4,r4,r3
1010be84:	20c00017 	ldw	r3,0(r4)
1010be88:	1800683a 	jmp	r3
1010be8c:	1010c0d8 	cmpnei	zero,r2,17155
1010be90:	1010beec 	andhi	zero,r2,17147
1010be94:	1010beec 	andhi	zero,r2,17147
1010be98:	1010bee8 	cmpgeui	zero,r2,17147
1010be9c:	1010c0b4 	orhi	zero,r2,17154
1010bea0:	1010c0b4 	orhi	zero,r2,17154
1010bea4:	1010c09c 	xori	zero,r2,17154
1010bea8:	1010bee8 	cmpgeui	zero,r2,17147
1010beac:	1010c0b4 	orhi	zero,r2,17154
1010beb0:	1010c09c 	xori	zero,r2,17154
1010beb4:	1010c0b4 	orhi	zero,r2,17154
1010beb8:	1010bee8 	cmpgeui	zero,r2,17147
1010bebc:	1010c0c4 	addi	zero,r2,17155
1010bec0:	1010c0c4 	addi	zero,r2,17155
1010bec4:	1010c0c4 	addi	zero,r2,17155
1010bec8:	1010c2e0 	cmpeqi	zero,r2,17163
1010becc:	2404b03a 	or	r2,r4,r16
1010bed0:	10006f1e 	bne	r2,zero,1010c090 <__muldf3+0x2f8>
1010bed4:	04c00204 	movi	r19,8
1010bed8:	0021883a 	mov	r16,zero
1010bedc:	0029883a 	mov	r20,zero
1010bee0:	07000084 	movi	fp,2
1010bee4:	003fcb06 	br	1010be14 <__alt_data_end+0xfffebe14>
1010bee8:	502d883a 	mov	r22,r10
1010beec:	00800084 	movi	r2,2
1010bef0:	28805726 	beq	r5,r2,1010c050 <__muldf3+0x2b8>
1010bef4:	008000c4 	movi	r2,3
1010bef8:	28816626 	beq	r5,r2,1010c494 <__muldf3+0x6fc>
1010befc:	00800044 	movi	r2,1
1010bf00:	2881411e 	bne	r5,r2,1010c408 <__muldf3+0x670>
1010bf04:	b02b883a 	mov	r21,r22
1010bf08:	0005883a 	mov	r2,zero
1010bf0c:	000b883a 	mov	r5,zero
1010bf10:	0029883a 	mov	r20,zero
1010bf14:	1004953a 	slli	r2,r2,20
1010bf18:	a8c03fcc 	andi	r3,r21,255
1010bf1c:	04400434 	movhi	r17,16
1010bf20:	8c7fffc4 	addi	r17,r17,-1
1010bf24:	180697fa 	slli	r3,r3,31
1010bf28:	2c4a703a 	and	r5,r5,r17
1010bf2c:	288ab03a 	or	r5,r5,r2
1010bf30:	28c6b03a 	or	r3,r5,r3
1010bf34:	a005883a 	mov	r2,r20
1010bf38:	dfc00c17 	ldw	ra,48(sp)
1010bf3c:	df000b17 	ldw	fp,44(sp)
1010bf40:	ddc00a17 	ldw	r23,40(sp)
1010bf44:	dd800917 	ldw	r22,36(sp)
1010bf48:	dd400817 	ldw	r21,32(sp)
1010bf4c:	dd000717 	ldw	r20,28(sp)
1010bf50:	dcc00617 	ldw	r19,24(sp)
1010bf54:	dc800517 	ldw	r18,20(sp)
1010bf58:	dc400417 	ldw	r17,16(sp)
1010bf5c:	dc000317 	ldw	r16,12(sp)
1010bf60:	dec00d04 	addi	sp,sp,52
1010bf64:	f800283a 	ret
1010bf68:	2404b03a 	or	r2,r4,r16
1010bf6c:	2027883a 	mov	r19,r4
1010bf70:	10004226 	beq	r2,zero,1010c07c <__muldf3+0x2e4>
1010bf74:	8000fc26 	beq	r16,zero,1010c368 <__muldf3+0x5d0>
1010bf78:	8009883a 	mov	r4,r16
1010bf7c:	d9800215 	stw	r6,8(sp)
1010bf80:	d9c00015 	stw	r7,0(sp)
1010bf84:	da400115 	stw	r9,4(sp)
1010bf88:	010cfb00 	call	1010cfb0 <__clzsi2>
1010bf8c:	d9800217 	ldw	r6,8(sp)
1010bf90:	d9c00017 	ldw	r7,0(sp)
1010bf94:	da400117 	ldw	r9,4(sp)
1010bf98:	113ffd44 	addi	r4,r2,-11
1010bf9c:	00c00704 	movi	r3,28
1010bfa0:	1900ed16 	blt	r3,r4,1010c358 <__muldf3+0x5c0>
1010bfa4:	00c00744 	movi	r3,29
1010bfa8:	147ffe04 	addi	r17,r2,-8
1010bfac:	1907c83a 	sub	r3,r3,r4
1010bfb0:	8460983a 	sll	r16,r16,r17
1010bfb4:	98c6d83a 	srl	r3,r19,r3
1010bfb8:	9c68983a 	sll	r20,r19,r17
1010bfbc:	1c20b03a 	or	r16,r3,r16
1010bfc0:	1080fcc4 	addi	r2,r2,1011
1010bfc4:	00a5c83a 	sub	r18,zero,r2
1010bfc8:	0027883a 	mov	r19,zero
1010bfcc:	0039883a 	mov	fp,zero
1010bfd0:	003f9006 	br	1010be14 <__alt_data_end+0xfffebe14>
1010bfd4:	3446b03a 	or	r3,r6,r17
1010bfd8:	1800261e 	bne	r3,zero,1010c074 <__muldf3+0x2dc>
1010bfdc:	0023883a 	mov	r17,zero
1010bfe0:	0011883a 	mov	r8,zero
1010bfe4:	01400084 	movi	r5,2
1010bfe8:	003f9c06 	br	1010be5c <__alt_data_end+0xfffebe5c>
1010bfec:	3446b03a 	or	r3,r6,r17
1010bff0:	18001c26 	beq	r3,zero,1010c064 <__muldf3+0x2cc>
1010bff4:	8800ce26 	beq	r17,zero,1010c330 <__muldf3+0x598>
1010bff8:	8809883a 	mov	r4,r17
1010bffc:	d9800215 	stw	r6,8(sp)
1010c000:	da400115 	stw	r9,4(sp)
1010c004:	da800015 	stw	r10,0(sp)
1010c008:	010cfb00 	call	1010cfb0 <__clzsi2>
1010c00c:	d9800217 	ldw	r6,8(sp)
1010c010:	da400117 	ldw	r9,4(sp)
1010c014:	da800017 	ldw	r10,0(sp)
1010c018:	113ffd44 	addi	r4,r2,-11
1010c01c:	00c00704 	movi	r3,28
1010c020:	1900bf16 	blt	r3,r4,1010c320 <__muldf3+0x588>
1010c024:	00c00744 	movi	r3,29
1010c028:	123ffe04 	addi	r8,r2,-8
1010c02c:	1907c83a 	sub	r3,r3,r4
1010c030:	8a22983a 	sll	r17,r17,r8
1010c034:	30c6d83a 	srl	r3,r6,r3
1010c038:	3210983a 	sll	r8,r6,r8
1010c03c:	1c62b03a 	or	r17,r3,r17
1010c040:	1080fcc4 	addi	r2,r2,1011
1010c044:	0085c83a 	sub	r2,zero,r2
1010c048:	000b883a 	mov	r5,zero
1010c04c:	003f8306 	br	1010be5c <__alt_data_end+0xfffebe5c>
1010c050:	b02b883a 	mov	r21,r22
1010c054:	0081ffc4 	movi	r2,2047
1010c058:	000b883a 	mov	r5,zero
1010c05c:	0029883a 	mov	r20,zero
1010c060:	003fac06 	br	1010bf14 <__alt_data_end+0xfffebf14>
1010c064:	0023883a 	mov	r17,zero
1010c068:	0011883a 	mov	r8,zero
1010c06c:	01400044 	movi	r5,1
1010c070:	003f7a06 	br	1010be5c <__alt_data_end+0xfffebe5c>
1010c074:	014000c4 	movi	r5,3
1010c078:	003f7806 	br	1010be5c <__alt_data_end+0xfffebe5c>
1010c07c:	04c00104 	movi	r19,4
1010c080:	0021883a 	mov	r16,zero
1010c084:	0029883a 	mov	r20,zero
1010c088:	07000044 	movi	fp,1
1010c08c:	003f6106 	br	1010be14 <__alt_data_end+0xfffebe14>
1010c090:	04c00304 	movi	r19,12
1010c094:	070000c4 	movi	fp,3
1010c098:	003f5e06 	br	1010be14 <__alt_data_end+0xfffebe14>
1010c09c:	01400434 	movhi	r5,16
1010c0a0:	002b883a 	mov	r21,zero
1010c0a4:	297fffc4 	addi	r5,r5,-1
1010c0a8:	053fffc4 	movi	r20,-1
1010c0ac:	0081ffc4 	movi	r2,2047
1010c0b0:	003f9806 	br	1010bf14 <__alt_data_end+0xfffebf14>
1010c0b4:	8023883a 	mov	r17,r16
1010c0b8:	a011883a 	mov	r8,r20
1010c0bc:	e00b883a 	mov	r5,fp
1010c0c0:	003f8a06 	br	1010beec <__alt_data_end+0xfffebeec>
1010c0c4:	8023883a 	mov	r17,r16
1010c0c8:	a011883a 	mov	r8,r20
1010c0cc:	482d883a 	mov	r22,r9
1010c0d0:	e00b883a 	mov	r5,fp
1010c0d4:	003f8506 	br	1010beec <__alt_data_end+0xfffebeec>
1010c0d8:	a00ad43a 	srli	r5,r20,16
1010c0dc:	401ad43a 	srli	r13,r8,16
1010c0e0:	a53fffcc 	andi	r20,r20,65535
1010c0e4:	423fffcc 	andi	r8,r8,65535
1010c0e8:	4519383a 	mul	r12,r8,r20
1010c0ec:	4147383a 	mul	r3,r8,r5
1010c0f0:	6d09383a 	mul	r4,r13,r20
1010c0f4:	600cd43a 	srli	r6,r12,16
1010c0f8:	2b5d383a 	mul	r14,r5,r13
1010c0fc:	20c9883a 	add	r4,r4,r3
1010c100:	310d883a 	add	r6,r6,r4
1010c104:	30c0022e 	bgeu	r6,r3,1010c110 <__muldf3+0x378>
1010c108:	00c00074 	movhi	r3,1
1010c10c:	70dd883a 	add	r14,r14,r3
1010c110:	8826d43a 	srli	r19,r17,16
1010c114:	8bffffcc 	andi	r15,r17,65535
1010c118:	7d23383a 	mul	r17,r15,r20
1010c11c:	7949383a 	mul	r4,r15,r5
1010c120:	9d29383a 	mul	r20,r19,r20
1010c124:	8814d43a 	srli	r10,r17,16
1010c128:	3012943a 	slli	r9,r6,16
1010c12c:	a129883a 	add	r20,r20,r4
1010c130:	633fffcc 	andi	r12,r12,65535
1010c134:	5515883a 	add	r10,r10,r20
1010c138:	3006d43a 	srli	r3,r6,16
1010c13c:	4b13883a 	add	r9,r9,r12
1010c140:	2ccb383a 	mul	r5,r5,r19
1010c144:	5100022e 	bgeu	r10,r4,1010c150 <__muldf3+0x3b8>
1010c148:	01000074 	movhi	r4,1
1010c14c:	290b883a 	add	r5,r5,r4
1010c150:	802ad43a 	srli	r21,r16,16
1010c154:	843fffcc 	andi	r16,r16,65535
1010c158:	440d383a 	mul	r6,r8,r16
1010c15c:	4565383a 	mul	r18,r8,r21
1010c160:	8349383a 	mul	r4,r16,r13
1010c164:	500e943a 	slli	r7,r10,16
1010c168:	3010d43a 	srli	r8,r6,16
1010c16c:	5028d43a 	srli	r20,r10,16
1010c170:	2489883a 	add	r4,r4,r18
1010c174:	8abfffcc 	andi	r10,r17,65535
1010c178:	3a95883a 	add	r10,r7,r10
1010c17c:	4119883a 	add	r12,r8,r4
1010c180:	a169883a 	add	r20,r20,r5
1010c184:	1a87883a 	add	r3,r3,r10
1010c188:	6d5b383a 	mul	r13,r13,r21
1010c18c:	6480022e 	bgeu	r12,r18,1010c198 <__muldf3+0x400>
1010c190:	01000074 	movhi	r4,1
1010c194:	691b883a 	add	r13,r13,r4
1010c198:	7c25383a 	mul	r18,r15,r16
1010c19c:	7d4b383a 	mul	r5,r15,r21
1010c1a0:	84cf383a 	mul	r7,r16,r19
1010c1a4:	901ed43a 	srli	r15,r18,16
1010c1a8:	6008d43a 	srli	r4,r12,16
1010c1ac:	6010943a 	slli	r8,r12,16
1010c1b0:	394f883a 	add	r7,r7,r5
1010c1b4:	333fffcc 	andi	r12,r6,65535
1010c1b8:	79df883a 	add	r15,r15,r7
1010c1bc:	235b883a 	add	r13,r4,r13
1010c1c0:	9d63383a 	mul	r17,r19,r21
1010c1c4:	4309883a 	add	r4,r8,r12
1010c1c8:	7940022e 	bgeu	r15,r5,1010c1d4 <__muldf3+0x43c>
1010c1cc:	01400074 	movhi	r5,1
1010c1d0:	8963883a 	add	r17,r17,r5
1010c1d4:	780a943a 	slli	r5,r15,16
1010c1d8:	91bfffcc 	andi	r6,r18,65535
1010c1dc:	70c7883a 	add	r3,r14,r3
1010c1e0:	298d883a 	add	r6,r5,r6
1010c1e4:	1a8f803a 	cmpltu	r7,r3,r10
1010c1e8:	350b883a 	add	r5,r6,r20
1010c1ec:	20c7883a 	add	r3,r4,r3
1010c1f0:	3955883a 	add	r10,r7,r5
1010c1f4:	1909803a 	cmpltu	r4,r3,r4
1010c1f8:	6a91883a 	add	r8,r13,r10
1010c1fc:	780cd43a 	srli	r6,r15,16
1010c200:	2219883a 	add	r12,r4,r8
1010c204:	2d0b803a 	cmpltu	r5,r5,r20
1010c208:	51cf803a 	cmpltu	r7,r10,r7
1010c20c:	29ceb03a 	or	r7,r5,r7
1010c210:	4351803a 	cmpltu	r8,r8,r13
1010c214:	610b803a 	cmpltu	r5,r12,r4
1010c218:	4148b03a 	or	r4,r8,r5
1010c21c:	398f883a 	add	r7,r7,r6
1010c220:	3909883a 	add	r4,r7,r4
1010c224:	1810927a 	slli	r8,r3,9
1010c228:	2449883a 	add	r4,r4,r17
1010c22c:	2008927a 	slli	r4,r4,9
1010c230:	6022d5fa 	srli	r17,r12,23
1010c234:	1806d5fa 	srli	r3,r3,23
1010c238:	4252b03a 	or	r9,r8,r9
1010c23c:	600a927a 	slli	r5,r12,9
1010c240:	4810c03a 	cmpne	r8,r9,zero
1010c244:	2462b03a 	or	r17,r4,r17
1010c248:	40c6b03a 	or	r3,r8,r3
1010c24c:	8900402c 	andhi	r4,r17,256
1010c250:	1950b03a 	or	r8,r3,r5
1010c254:	20000726 	beq	r4,zero,1010c274 <__muldf3+0x4dc>
1010c258:	4006d07a 	srli	r3,r8,1
1010c25c:	880497fa 	slli	r2,r17,31
1010c260:	4200004c 	andi	r8,r8,1
1010c264:	8822d07a 	srli	r17,r17,1
1010c268:	1a10b03a 	or	r8,r3,r8
1010c26c:	1210b03a 	or	r8,r2,r8
1010c270:	5805883a 	mov	r2,r11
1010c274:	1140ffc4 	addi	r5,r2,1023
1010c278:	0140440e 	bge	zero,r5,1010c38c <__muldf3+0x5f4>
1010c27c:	40c001cc 	andi	r3,r8,7
1010c280:	18000726 	beq	r3,zero,1010c2a0 <__muldf3+0x508>
1010c284:	40c003cc 	andi	r3,r8,15
1010c288:	01000104 	movi	r4,4
1010c28c:	19000426 	beq	r3,r4,1010c2a0 <__muldf3+0x508>
1010c290:	4107883a 	add	r3,r8,r4
1010c294:	1a11803a 	cmpltu	r8,r3,r8
1010c298:	8a23883a 	add	r17,r17,r8
1010c29c:	1811883a 	mov	r8,r3
1010c2a0:	88c0402c 	andhi	r3,r17,256
1010c2a4:	18000426 	beq	r3,zero,1010c2b8 <__muldf3+0x520>
1010c2a8:	11410004 	addi	r5,r2,1024
1010c2ac:	00bfc034 	movhi	r2,65280
1010c2b0:	10bfffc4 	addi	r2,r2,-1
1010c2b4:	88a2703a 	and	r17,r17,r2
1010c2b8:	0081ff84 	movi	r2,2046
1010c2bc:	117f6416 	blt	r2,r5,1010c050 <__alt_data_end+0xfffec050>
1010c2c0:	8828977a 	slli	r20,r17,29
1010c2c4:	4010d0fa 	srli	r8,r8,3
1010c2c8:	8822927a 	slli	r17,r17,9
1010c2cc:	2881ffcc 	andi	r2,r5,2047
1010c2d0:	a228b03a 	or	r20,r20,r8
1010c2d4:	880ad33a 	srli	r5,r17,12
1010c2d8:	b02b883a 	mov	r21,r22
1010c2dc:	003f0d06 	br	1010bf14 <__alt_data_end+0xfffebf14>
1010c2e0:	8080022c 	andhi	r2,r16,8
1010c2e4:	10000926 	beq	r2,zero,1010c30c <__muldf3+0x574>
1010c2e8:	8880022c 	andhi	r2,r17,8
1010c2ec:	1000071e 	bne	r2,zero,1010c30c <__muldf3+0x574>
1010c2f0:	00800434 	movhi	r2,16
1010c2f4:	89400234 	orhi	r5,r17,8
1010c2f8:	10bfffc4 	addi	r2,r2,-1
1010c2fc:	b82b883a 	mov	r21,r23
1010c300:	288a703a 	and	r5,r5,r2
1010c304:	4029883a 	mov	r20,r8
1010c308:	003f6806 	br	1010c0ac <__alt_data_end+0xfffec0ac>
1010c30c:	00800434 	movhi	r2,16
1010c310:	81400234 	orhi	r5,r16,8
1010c314:	10bfffc4 	addi	r2,r2,-1
1010c318:	288a703a 	and	r5,r5,r2
1010c31c:	003f6306 	br	1010c0ac <__alt_data_end+0xfffec0ac>
1010c320:	147ff604 	addi	r17,r2,-40
1010c324:	3462983a 	sll	r17,r6,r17
1010c328:	0011883a 	mov	r8,zero
1010c32c:	003f4406 	br	1010c040 <__alt_data_end+0xfffec040>
1010c330:	3009883a 	mov	r4,r6
1010c334:	d9800215 	stw	r6,8(sp)
1010c338:	da400115 	stw	r9,4(sp)
1010c33c:	da800015 	stw	r10,0(sp)
1010c340:	010cfb00 	call	1010cfb0 <__clzsi2>
1010c344:	10800804 	addi	r2,r2,32
1010c348:	da800017 	ldw	r10,0(sp)
1010c34c:	da400117 	ldw	r9,4(sp)
1010c350:	d9800217 	ldw	r6,8(sp)
1010c354:	003f3006 	br	1010c018 <__alt_data_end+0xfffec018>
1010c358:	143ff604 	addi	r16,r2,-40
1010c35c:	9c20983a 	sll	r16,r19,r16
1010c360:	0029883a 	mov	r20,zero
1010c364:	003f1606 	br	1010bfc0 <__alt_data_end+0xfffebfc0>
1010c368:	d9800215 	stw	r6,8(sp)
1010c36c:	d9c00015 	stw	r7,0(sp)
1010c370:	da400115 	stw	r9,4(sp)
1010c374:	010cfb00 	call	1010cfb0 <__clzsi2>
1010c378:	10800804 	addi	r2,r2,32
1010c37c:	da400117 	ldw	r9,4(sp)
1010c380:	d9c00017 	ldw	r7,0(sp)
1010c384:	d9800217 	ldw	r6,8(sp)
1010c388:	003f0306 	br	1010bf98 <__alt_data_end+0xfffebf98>
1010c38c:	00c00044 	movi	r3,1
1010c390:	1947c83a 	sub	r3,r3,r5
1010c394:	00800e04 	movi	r2,56
1010c398:	10feda16 	blt	r2,r3,1010bf04 <__alt_data_end+0xfffebf04>
1010c39c:	008007c4 	movi	r2,31
1010c3a0:	10c01b16 	blt	r2,r3,1010c410 <__muldf3+0x678>
1010c3a4:	00800804 	movi	r2,32
1010c3a8:	10c5c83a 	sub	r2,r2,r3
1010c3ac:	888a983a 	sll	r5,r17,r2
1010c3b0:	40c8d83a 	srl	r4,r8,r3
1010c3b4:	4084983a 	sll	r2,r8,r2
1010c3b8:	88e2d83a 	srl	r17,r17,r3
1010c3bc:	2906b03a 	or	r3,r5,r4
1010c3c0:	1004c03a 	cmpne	r2,r2,zero
1010c3c4:	1886b03a 	or	r3,r3,r2
1010c3c8:	188001cc 	andi	r2,r3,7
1010c3cc:	10000726 	beq	r2,zero,1010c3ec <__muldf3+0x654>
1010c3d0:	188003cc 	andi	r2,r3,15
1010c3d4:	01000104 	movi	r4,4
1010c3d8:	11000426 	beq	r2,r4,1010c3ec <__muldf3+0x654>
1010c3dc:	1805883a 	mov	r2,r3
1010c3e0:	10c00104 	addi	r3,r2,4
1010c3e4:	1885803a 	cmpltu	r2,r3,r2
1010c3e8:	88a3883a 	add	r17,r17,r2
1010c3ec:	8880202c 	andhi	r2,r17,128
1010c3f0:	10001c26 	beq	r2,zero,1010c464 <__muldf3+0x6cc>
1010c3f4:	b02b883a 	mov	r21,r22
1010c3f8:	00800044 	movi	r2,1
1010c3fc:	000b883a 	mov	r5,zero
1010c400:	0029883a 	mov	r20,zero
1010c404:	003ec306 	br	1010bf14 <__alt_data_end+0xfffebf14>
1010c408:	5805883a 	mov	r2,r11
1010c40c:	003f9906 	br	1010c274 <__alt_data_end+0xfffec274>
1010c410:	00bff844 	movi	r2,-31
1010c414:	1145c83a 	sub	r2,r2,r5
1010c418:	8888d83a 	srl	r4,r17,r2
1010c41c:	00800804 	movi	r2,32
1010c420:	18801a26 	beq	r3,r2,1010c48c <__muldf3+0x6f4>
1010c424:	00801004 	movi	r2,64
1010c428:	10c5c83a 	sub	r2,r2,r3
1010c42c:	8884983a 	sll	r2,r17,r2
1010c430:	1204b03a 	or	r2,r2,r8
1010c434:	1004c03a 	cmpne	r2,r2,zero
1010c438:	2084b03a 	or	r2,r4,r2
1010c43c:	144001cc 	andi	r17,r2,7
1010c440:	88000d1e 	bne	r17,zero,1010c478 <__muldf3+0x6e0>
1010c444:	000b883a 	mov	r5,zero
1010c448:	1028d0fa 	srli	r20,r2,3
1010c44c:	b02b883a 	mov	r21,r22
1010c450:	0005883a 	mov	r2,zero
1010c454:	a468b03a 	or	r20,r20,r17
1010c458:	003eae06 	br	1010bf14 <__alt_data_end+0xfffebf14>
1010c45c:	1007883a 	mov	r3,r2
1010c460:	0023883a 	mov	r17,zero
1010c464:	880a927a 	slli	r5,r17,9
1010c468:	1805883a 	mov	r2,r3
1010c46c:	8822977a 	slli	r17,r17,29
1010c470:	280ad33a 	srli	r5,r5,12
1010c474:	003ff406 	br	1010c448 <__alt_data_end+0xfffec448>
1010c478:	10c003cc 	andi	r3,r2,15
1010c47c:	01000104 	movi	r4,4
1010c480:	193ff626 	beq	r3,r4,1010c45c <__alt_data_end+0xfffec45c>
1010c484:	0023883a 	mov	r17,zero
1010c488:	003fd506 	br	1010c3e0 <__alt_data_end+0xfffec3e0>
1010c48c:	0005883a 	mov	r2,zero
1010c490:	003fe706 	br	1010c430 <__alt_data_end+0xfffec430>
1010c494:	00800434 	movhi	r2,16
1010c498:	89400234 	orhi	r5,r17,8
1010c49c:	10bfffc4 	addi	r2,r2,-1
1010c4a0:	b02b883a 	mov	r21,r22
1010c4a4:	288a703a 	and	r5,r5,r2
1010c4a8:	4029883a 	mov	r20,r8
1010c4ac:	003eff06 	br	1010c0ac <__alt_data_end+0xfffec0ac>

1010c4b0 <__subdf3>:
1010c4b0:	02000434 	movhi	r8,16
1010c4b4:	423fffc4 	addi	r8,r8,-1
1010c4b8:	defffb04 	addi	sp,sp,-20
1010c4bc:	2a14703a 	and	r10,r5,r8
1010c4c0:	3812d53a 	srli	r9,r7,20
1010c4c4:	3a10703a 	and	r8,r7,r8
1010c4c8:	2006d77a 	srli	r3,r4,29
1010c4cc:	3004d77a 	srli	r2,r6,29
1010c4d0:	dc000015 	stw	r16,0(sp)
1010c4d4:	501490fa 	slli	r10,r10,3
1010c4d8:	2820d53a 	srli	r16,r5,20
1010c4dc:	401090fa 	slli	r8,r8,3
1010c4e0:	dc800215 	stw	r18,8(sp)
1010c4e4:	dc400115 	stw	r17,4(sp)
1010c4e8:	dfc00415 	stw	ra,16(sp)
1010c4ec:	202290fa 	slli	r17,r4,3
1010c4f0:	dcc00315 	stw	r19,12(sp)
1010c4f4:	4a41ffcc 	andi	r9,r9,2047
1010c4f8:	0101ffc4 	movi	r4,2047
1010c4fc:	2824d7fa 	srli	r18,r5,31
1010c500:	8401ffcc 	andi	r16,r16,2047
1010c504:	50c6b03a 	or	r3,r10,r3
1010c508:	380ed7fa 	srli	r7,r7,31
1010c50c:	408ab03a 	or	r5,r8,r2
1010c510:	300c90fa 	slli	r6,r6,3
1010c514:	49009626 	beq	r9,r4,1010c770 <__subdf3+0x2c0>
1010c518:	39c0005c 	xori	r7,r7,1
1010c51c:	8245c83a 	sub	r2,r16,r9
1010c520:	3c807426 	beq	r7,r18,1010c6f4 <__subdf3+0x244>
1010c524:	0080af0e 	bge	zero,r2,1010c7e4 <__subdf3+0x334>
1010c528:	48002a1e 	bne	r9,zero,1010c5d4 <__subdf3+0x124>
1010c52c:	2988b03a 	or	r4,r5,r6
1010c530:	20009a1e 	bne	r4,zero,1010c79c <__subdf3+0x2ec>
1010c534:	888001cc 	andi	r2,r17,7
1010c538:	10000726 	beq	r2,zero,1010c558 <__subdf3+0xa8>
1010c53c:	888003cc 	andi	r2,r17,15
1010c540:	01000104 	movi	r4,4
1010c544:	11000426 	beq	r2,r4,1010c558 <__subdf3+0xa8>
1010c548:	890b883a 	add	r5,r17,r4
1010c54c:	2c63803a 	cmpltu	r17,r5,r17
1010c550:	1c47883a 	add	r3,r3,r17
1010c554:	2823883a 	mov	r17,r5
1010c558:	1880202c 	andhi	r2,r3,128
1010c55c:	10005926 	beq	r2,zero,1010c6c4 <__subdf3+0x214>
1010c560:	84000044 	addi	r16,r16,1
1010c564:	0081ffc4 	movi	r2,2047
1010c568:	8080be26 	beq	r16,r2,1010c864 <__subdf3+0x3b4>
1010c56c:	017fe034 	movhi	r5,65408
1010c570:	297fffc4 	addi	r5,r5,-1
1010c574:	1946703a 	and	r3,r3,r5
1010c578:	1804977a 	slli	r2,r3,29
1010c57c:	1806927a 	slli	r3,r3,9
1010c580:	8822d0fa 	srli	r17,r17,3
1010c584:	8401ffcc 	andi	r16,r16,2047
1010c588:	180ad33a 	srli	r5,r3,12
1010c58c:	9100004c 	andi	r4,r18,1
1010c590:	1444b03a 	or	r2,r2,r17
1010c594:	80c1ffcc 	andi	r3,r16,2047
1010c598:	1820953a 	slli	r16,r3,20
1010c59c:	20c03fcc 	andi	r3,r4,255
1010c5a0:	180897fa 	slli	r4,r3,31
1010c5a4:	00c00434 	movhi	r3,16
1010c5a8:	18ffffc4 	addi	r3,r3,-1
1010c5ac:	28c6703a 	and	r3,r5,r3
1010c5b0:	1c06b03a 	or	r3,r3,r16
1010c5b4:	1906b03a 	or	r3,r3,r4
1010c5b8:	dfc00417 	ldw	ra,16(sp)
1010c5bc:	dcc00317 	ldw	r19,12(sp)
1010c5c0:	dc800217 	ldw	r18,8(sp)
1010c5c4:	dc400117 	ldw	r17,4(sp)
1010c5c8:	dc000017 	ldw	r16,0(sp)
1010c5cc:	dec00504 	addi	sp,sp,20
1010c5d0:	f800283a 	ret
1010c5d4:	0101ffc4 	movi	r4,2047
1010c5d8:	813fd626 	beq	r16,r4,1010c534 <__alt_data_end+0xfffec534>
1010c5dc:	29402034 	orhi	r5,r5,128
1010c5e0:	01000e04 	movi	r4,56
1010c5e4:	2080a316 	blt	r4,r2,1010c874 <__subdf3+0x3c4>
1010c5e8:	010007c4 	movi	r4,31
1010c5ec:	2080c616 	blt	r4,r2,1010c908 <__subdf3+0x458>
1010c5f0:	01000804 	movi	r4,32
1010c5f4:	2089c83a 	sub	r4,r4,r2
1010c5f8:	2910983a 	sll	r8,r5,r4
1010c5fc:	308ed83a 	srl	r7,r6,r2
1010c600:	3108983a 	sll	r4,r6,r4
1010c604:	2884d83a 	srl	r2,r5,r2
1010c608:	41ccb03a 	or	r6,r8,r7
1010c60c:	2008c03a 	cmpne	r4,r4,zero
1010c610:	310cb03a 	or	r6,r6,r4
1010c614:	898dc83a 	sub	r6,r17,r6
1010c618:	89a3803a 	cmpltu	r17,r17,r6
1010c61c:	1887c83a 	sub	r3,r3,r2
1010c620:	1c47c83a 	sub	r3,r3,r17
1010c624:	3023883a 	mov	r17,r6
1010c628:	1880202c 	andhi	r2,r3,128
1010c62c:	10002326 	beq	r2,zero,1010c6bc <__subdf3+0x20c>
1010c630:	04c02034 	movhi	r19,128
1010c634:	9cffffc4 	addi	r19,r19,-1
1010c638:	1ce6703a 	and	r19,r3,r19
1010c63c:	98007a26 	beq	r19,zero,1010c828 <__subdf3+0x378>
1010c640:	9809883a 	mov	r4,r19
1010c644:	010cfb00 	call	1010cfb0 <__clzsi2>
1010c648:	113ffe04 	addi	r4,r2,-8
1010c64c:	00c007c4 	movi	r3,31
1010c650:	19007b16 	blt	r3,r4,1010c840 <__subdf3+0x390>
1010c654:	00800804 	movi	r2,32
1010c658:	1105c83a 	sub	r2,r2,r4
1010c65c:	8884d83a 	srl	r2,r17,r2
1010c660:	9906983a 	sll	r3,r19,r4
1010c664:	8922983a 	sll	r17,r17,r4
1010c668:	10c4b03a 	or	r2,r2,r3
1010c66c:	24007816 	blt	r4,r16,1010c850 <__subdf3+0x3a0>
1010c670:	2421c83a 	sub	r16,r4,r16
1010c674:	80c00044 	addi	r3,r16,1
1010c678:	010007c4 	movi	r4,31
1010c67c:	20c09516 	blt	r4,r3,1010c8d4 <__subdf3+0x424>
1010c680:	01400804 	movi	r5,32
1010c684:	28cbc83a 	sub	r5,r5,r3
1010c688:	88c8d83a 	srl	r4,r17,r3
1010c68c:	8962983a 	sll	r17,r17,r5
1010c690:	114a983a 	sll	r5,r2,r5
1010c694:	10c6d83a 	srl	r3,r2,r3
1010c698:	8804c03a 	cmpne	r2,r17,zero
1010c69c:	290ab03a 	or	r5,r5,r4
1010c6a0:	28a2b03a 	or	r17,r5,r2
1010c6a4:	0021883a 	mov	r16,zero
1010c6a8:	003fa206 	br	1010c534 <__alt_data_end+0xfffec534>
1010c6ac:	2090b03a 	or	r8,r4,r2
1010c6b0:	40018e26 	beq	r8,zero,1010ccec <__subdf3+0x83c>
1010c6b4:	1007883a 	mov	r3,r2
1010c6b8:	2023883a 	mov	r17,r4
1010c6bc:	888001cc 	andi	r2,r17,7
1010c6c0:	103f9e1e 	bne	r2,zero,1010c53c <__alt_data_end+0xfffec53c>
1010c6c4:	1804977a 	slli	r2,r3,29
1010c6c8:	8822d0fa 	srli	r17,r17,3
1010c6cc:	1810d0fa 	srli	r8,r3,3
1010c6d0:	9100004c 	andi	r4,r18,1
1010c6d4:	1444b03a 	or	r2,r2,r17
1010c6d8:	00c1ffc4 	movi	r3,2047
1010c6dc:	80c02826 	beq	r16,r3,1010c780 <__subdf3+0x2d0>
1010c6e0:	01400434 	movhi	r5,16
1010c6e4:	297fffc4 	addi	r5,r5,-1
1010c6e8:	80e0703a 	and	r16,r16,r3
1010c6ec:	414a703a 	and	r5,r8,r5
1010c6f0:	003fa806 	br	1010c594 <__alt_data_end+0xfffec594>
1010c6f4:	0080630e 	bge	zero,r2,1010c884 <__subdf3+0x3d4>
1010c6f8:	48003026 	beq	r9,zero,1010c7bc <__subdf3+0x30c>
1010c6fc:	0101ffc4 	movi	r4,2047
1010c700:	813f8c26 	beq	r16,r4,1010c534 <__alt_data_end+0xfffec534>
1010c704:	29402034 	orhi	r5,r5,128
1010c708:	01000e04 	movi	r4,56
1010c70c:	2080a90e 	bge	r4,r2,1010c9b4 <__subdf3+0x504>
1010c710:	298cb03a 	or	r6,r5,r6
1010c714:	3012c03a 	cmpne	r9,r6,zero
1010c718:	0005883a 	mov	r2,zero
1010c71c:	4c53883a 	add	r9,r9,r17
1010c720:	4c63803a 	cmpltu	r17,r9,r17
1010c724:	10c7883a 	add	r3,r2,r3
1010c728:	88c7883a 	add	r3,r17,r3
1010c72c:	4823883a 	mov	r17,r9
1010c730:	1880202c 	andhi	r2,r3,128
1010c734:	1000d026 	beq	r2,zero,1010ca78 <__subdf3+0x5c8>
1010c738:	84000044 	addi	r16,r16,1
1010c73c:	0081ffc4 	movi	r2,2047
1010c740:	8080fe26 	beq	r16,r2,1010cb3c <__subdf3+0x68c>
1010c744:	00bfe034 	movhi	r2,65408
1010c748:	10bfffc4 	addi	r2,r2,-1
1010c74c:	1886703a 	and	r3,r3,r2
1010c750:	880ad07a 	srli	r5,r17,1
1010c754:	180497fa 	slli	r2,r3,31
1010c758:	8900004c 	andi	r4,r17,1
1010c75c:	2922b03a 	or	r17,r5,r4
1010c760:	1806d07a 	srli	r3,r3,1
1010c764:	1462b03a 	or	r17,r2,r17
1010c768:	3825883a 	mov	r18,r7
1010c76c:	003f7106 	br	1010c534 <__alt_data_end+0xfffec534>
1010c770:	2984b03a 	or	r2,r5,r6
1010c774:	103f6826 	beq	r2,zero,1010c518 <__alt_data_end+0xfffec518>
1010c778:	39c03fcc 	andi	r7,r7,255
1010c77c:	003f6706 	br	1010c51c <__alt_data_end+0xfffec51c>
1010c780:	4086b03a 	or	r3,r8,r2
1010c784:	18015226 	beq	r3,zero,1010ccd0 <__subdf3+0x820>
1010c788:	00c00434 	movhi	r3,16
1010c78c:	41400234 	orhi	r5,r8,8
1010c790:	18ffffc4 	addi	r3,r3,-1
1010c794:	28ca703a 	and	r5,r5,r3
1010c798:	003f7e06 	br	1010c594 <__alt_data_end+0xfffec594>
1010c79c:	10bfffc4 	addi	r2,r2,-1
1010c7a0:	1000491e 	bne	r2,zero,1010c8c8 <__subdf3+0x418>
1010c7a4:	898fc83a 	sub	r7,r17,r6
1010c7a8:	89e3803a 	cmpltu	r17,r17,r7
1010c7ac:	1947c83a 	sub	r3,r3,r5
1010c7b0:	1c47c83a 	sub	r3,r3,r17
1010c7b4:	3823883a 	mov	r17,r7
1010c7b8:	003f9b06 	br	1010c628 <__alt_data_end+0xfffec628>
1010c7bc:	2988b03a 	or	r4,r5,r6
1010c7c0:	203f5c26 	beq	r4,zero,1010c534 <__alt_data_end+0xfffec534>
1010c7c4:	10bfffc4 	addi	r2,r2,-1
1010c7c8:	1000931e 	bne	r2,zero,1010ca18 <__subdf3+0x568>
1010c7cc:	898d883a 	add	r6,r17,r6
1010c7d0:	3463803a 	cmpltu	r17,r6,r17
1010c7d4:	1947883a 	add	r3,r3,r5
1010c7d8:	88c7883a 	add	r3,r17,r3
1010c7dc:	3023883a 	mov	r17,r6
1010c7e0:	003fd306 	br	1010c730 <__alt_data_end+0xfffec730>
1010c7e4:	1000541e 	bne	r2,zero,1010c938 <__subdf3+0x488>
1010c7e8:	80800044 	addi	r2,r16,1
1010c7ec:	1081ffcc 	andi	r2,r2,2047
1010c7f0:	01000044 	movi	r4,1
1010c7f4:	2080a20e 	bge	r4,r2,1010ca80 <__subdf3+0x5d0>
1010c7f8:	8989c83a 	sub	r4,r17,r6
1010c7fc:	8905803a 	cmpltu	r2,r17,r4
1010c800:	1967c83a 	sub	r19,r3,r5
1010c804:	98a7c83a 	sub	r19,r19,r2
1010c808:	9880202c 	andhi	r2,r19,128
1010c80c:	10006326 	beq	r2,zero,1010c99c <__subdf3+0x4ec>
1010c810:	3463c83a 	sub	r17,r6,r17
1010c814:	28c7c83a 	sub	r3,r5,r3
1010c818:	344d803a 	cmpltu	r6,r6,r17
1010c81c:	19a7c83a 	sub	r19,r3,r6
1010c820:	3825883a 	mov	r18,r7
1010c824:	983f861e 	bne	r19,zero,1010c640 <__alt_data_end+0xfffec640>
1010c828:	8809883a 	mov	r4,r17
1010c82c:	010cfb00 	call	1010cfb0 <__clzsi2>
1010c830:	10800804 	addi	r2,r2,32
1010c834:	113ffe04 	addi	r4,r2,-8
1010c838:	00c007c4 	movi	r3,31
1010c83c:	193f850e 	bge	r3,r4,1010c654 <__alt_data_end+0xfffec654>
1010c840:	10bff604 	addi	r2,r2,-40
1010c844:	8884983a 	sll	r2,r17,r2
1010c848:	0023883a 	mov	r17,zero
1010c84c:	243f880e 	bge	r4,r16,1010c670 <__alt_data_end+0xfffec670>
1010c850:	00ffe034 	movhi	r3,65408
1010c854:	18ffffc4 	addi	r3,r3,-1
1010c858:	8121c83a 	sub	r16,r16,r4
1010c85c:	10c6703a 	and	r3,r2,r3
1010c860:	003f3406 	br	1010c534 <__alt_data_end+0xfffec534>
1010c864:	9100004c 	andi	r4,r18,1
1010c868:	000b883a 	mov	r5,zero
1010c86c:	0005883a 	mov	r2,zero
1010c870:	003f4806 	br	1010c594 <__alt_data_end+0xfffec594>
1010c874:	298cb03a 	or	r6,r5,r6
1010c878:	300cc03a 	cmpne	r6,r6,zero
1010c87c:	0005883a 	mov	r2,zero
1010c880:	003f6406 	br	1010c614 <__alt_data_end+0xfffec614>
1010c884:	10009a1e 	bne	r2,zero,1010caf0 <__subdf3+0x640>
1010c888:	82400044 	addi	r9,r16,1
1010c88c:	4881ffcc 	andi	r2,r9,2047
1010c890:	02800044 	movi	r10,1
1010c894:	5080670e 	bge	r10,r2,1010ca34 <__subdf3+0x584>
1010c898:	0081ffc4 	movi	r2,2047
1010c89c:	4880af26 	beq	r9,r2,1010cb5c <__subdf3+0x6ac>
1010c8a0:	898d883a 	add	r6,r17,r6
1010c8a4:	1945883a 	add	r2,r3,r5
1010c8a8:	3447803a 	cmpltu	r3,r6,r17
1010c8ac:	1887883a 	add	r3,r3,r2
1010c8b0:	182297fa 	slli	r17,r3,31
1010c8b4:	300cd07a 	srli	r6,r6,1
1010c8b8:	1806d07a 	srli	r3,r3,1
1010c8bc:	4821883a 	mov	r16,r9
1010c8c0:	89a2b03a 	or	r17,r17,r6
1010c8c4:	003f1b06 	br	1010c534 <__alt_data_end+0xfffec534>
1010c8c8:	0101ffc4 	movi	r4,2047
1010c8cc:	813f441e 	bne	r16,r4,1010c5e0 <__alt_data_end+0xfffec5e0>
1010c8d0:	003f1806 	br	1010c534 <__alt_data_end+0xfffec534>
1010c8d4:	843ff844 	addi	r16,r16,-31
1010c8d8:	01400804 	movi	r5,32
1010c8dc:	1408d83a 	srl	r4,r2,r16
1010c8e0:	19405026 	beq	r3,r5,1010ca24 <__subdf3+0x574>
1010c8e4:	01401004 	movi	r5,64
1010c8e8:	28c7c83a 	sub	r3,r5,r3
1010c8ec:	10c4983a 	sll	r2,r2,r3
1010c8f0:	88a2b03a 	or	r17,r17,r2
1010c8f4:	8822c03a 	cmpne	r17,r17,zero
1010c8f8:	2462b03a 	or	r17,r4,r17
1010c8fc:	0007883a 	mov	r3,zero
1010c900:	0021883a 	mov	r16,zero
1010c904:	003f6d06 	br	1010c6bc <__alt_data_end+0xfffec6bc>
1010c908:	11fff804 	addi	r7,r2,-32
1010c90c:	01000804 	movi	r4,32
1010c910:	29ced83a 	srl	r7,r5,r7
1010c914:	11004526 	beq	r2,r4,1010ca2c <__subdf3+0x57c>
1010c918:	01001004 	movi	r4,64
1010c91c:	2089c83a 	sub	r4,r4,r2
1010c920:	2904983a 	sll	r2,r5,r4
1010c924:	118cb03a 	or	r6,r2,r6
1010c928:	300cc03a 	cmpne	r6,r6,zero
1010c92c:	398cb03a 	or	r6,r7,r6
1010c930:	0005883a 	mov	r2,zero
1010c934:	003f3706 	br	1010c614 <__alt_data_end+0xfffec614>
1010c938:	80002a26 	beq	r16,zero,1010c9e4 <__subdf3+0x534>
1010c93c:	0101ffc4 	movi	r4,2047
1010c940:	49006626 	beq	r9,r4,1010cadc <__subdf3+0x62c>
1010c944:	0085c83a 	sub	r2,zero,r2
1010c948:	18c02034 	orhi	r3,r3,128
1010c94c:	01000e04 	movi	r4,56
1010c950:	20807e16 	blt	r4,r2,1010cb4c <__subdf3+0x69c>
1010c954:	010007c4 	movi	r4,31
1010c958:	2080e716 	blt	r4,r2,1010ccf8 <__subdf3+0x848>
1010c95c:	01000804 	movi	r4,32
1010c960:	2089c83a 	sub	r4,r4,r2
1010c964:	1914983a 	sll	r10,r3,r4
1010c968:	8890d83a 	srl	r8,r17,r2
1010c96c:	8908983a 	sll	r4,r17,r4
1010c970:	1884d83a 	srl	r2,r3,r2
1010c974:	5222b03a 	or	r17,r10,r8
1010c978:	2006c03a 	cmpne	r3,r4,zero
1010c97c:	88e2b03a 	or	r17,r17,r3
1010c980:	3463c83a 	sub	r17,r6,r17
1010c984:	2885c83a 	sub	r2,r5,r2
1010c988:	344d803a 	cmpltu	r6,r6,r17
1010c98c:	1187c83a 	sub	r3,r2,r6
1010c990:	4821883a 	mov	r16,r9
1010c994:	3825883a 	mov	r18,r7
1010c998:	003f2306 	br	1010c628 <__alt_data_end+0xfffec628>
1010c99c:	24d0b03a 	or	r8,r4,r19
1010c9a0:	40001b1e 	bne	r8,zero,1010ca10 <__subdf3+0x560>
1010c9a4:	0005883a 	mov	r2,zero
1010c9a8:	0009883a 	mov	r4,zero
1010c9ac:	0021883a 	mov	r16,zero
1010c9b0:	003f4906 	br	1010c6d8 <__alt_data_end+0xfffec6d8>
1010c9b4:	010007c4 	movi	r4,31
1010c9b8:	20803a16 	blt	r4,r2,1010caa4 <__subdf3+0x5f4>
1010c9bc:	01000804 	movi	r4,32
1010c9c0:	2089c83a 	sub	r4,r4,r2
1010c9c4:	2912983a 	sll	r9,r5,r4
1010c9c8:	3090d83a 	srl	r8,r6,r2
1010c9cc:	3108983a 	sll	r4,r6,r4
1010c9d0:	2884d83a 	srl	r2,r5,r2
1010c9d4:	4a12b03a 	or	r9,r9,r8
1010c9d8:	2008c03a 	cmpne	r4,r4,zero
1010c9dc:	4912b03a 	or	r9,r9,r4
1010c9e0:	003f4e06 	br	1010c71c <__alt_data_end+0xfffec71c>
1010c9e4:	1c48b03a 	or	r4,r3,r17
1010c9e8:	20003c26 	beq	r4,zero,1010cadc <__subdf3+0x62c>
1010c9ec:	0084303a 	nor	r2,zero,r2
1010c9f0:	1000381e 	bne	r2,zero,1010cad4 <__subdf3+0x624>
1010c9f4:	3463c83a 	sub	r17,r6,r17
1010c9f8:	28c5c83a 	sub	r2,r5,r3
1010c9fc:	344d803a 	cmpltu	r6,r6,r17
1010ca00:	1187c83a 	sub	r3,r2,r6
1010ca04:	4821883a 	mov	r16,r9
1010ca08:	3825883a 	mov	r18,r7
1010ca0c:	003f0606 	br	1010c628 <__alt_data_end+0xfffec628>
1010ca10:	2023883a 	mov	r17,r4
1010ca14:	003f0906 	br	1010c63c <__alt_data_end+0xfffec63c>
1010ca18:	0101ffc4 	movi	r4,2047
1010ca1c:	813f3a1e 	bne	r16,r4,1010c708 <__alt_data_end+0xfffec708>
1010ca20:	003ec406 	br	1010c534 <__alt_data_end+0xfffec534>
1010ca24:	0005883a 	mov	r2,zero
1010ca28:	003fb106 	br	1010c8f0 <__alt_data_end+0xfffec8f0>
1010ca2c:	0005883a 	mov	r2,zero
1010ca30:	003fbc06 	br	1010c924 <__alt_data_end+0xfffec924>
1010ca34:	1c44b03a 	or	r2,r3,r17
1010ca38:	80008e1e 	bne	r16,zero,1010cc74 <__subdf3+0x7c4>
1010ca3c:	1000c826 	beq	r2,zero,1010cd60 <__subdf3+0x8b0>
1010ca40:	2984b03a 	or	r2,r5,r6
1010ca44:	103ebb26 	beq	r2,zero,1010c534 <__alt_data_end+0xfffec534>
1010ca48:	8989883a 	add	r4,r17,r6
1010ca4c:	1945883a 	add	r2,r3,r5
1010ca50:	2447803a 	cmpltu	r3,r4,r17
1010ca54:	1887883a 	add	r3,r3,r2
1010ca58:	1880202c 	andhi	r2,r3,128
1010ca5c:	2023883a 	mov	r17,r4
1010ca60:	103f1626 	beq	r2,zero,1010c6bc <__alt_data_end+0xfffec6bc>
1010ca64:	00bfe034 	movhi	r2,65408
1010ca68:	10bfffc4 	addi	r2,r2,-1
1010ca6c:	5021883a 	mov	r16,r10
1010ca70:	1886703a 	and	r3,r3,r2
1010ca74:	003eaf06 	br	1010c534 <__alt_data_end+0xfffec534>
1010ca78:	3825883a 	mov	r18,r7
1010ca7c:	003f0f06 	br	1010c6bc <__alt_data_end+0xfffec6bc>
1010ca80:	1c44b03a 	or	r2,r3,r17
1010ca84:	8000251e 	bne	r16,zero,1010cb1c <__subdf3+0x66c>
1010ca88:	1000661e 	bne	r2,zero,1010cc24 <__subdf3+0x774>
1010ca8c:	2990b03a 	or	r8,r5,r6
1010ca90:	40009626 	beq	r8,zero,1010ccec <__subdf3+0x83c>
1010ca94:	2807883a 	mov	r3,r5
1010ca98:	3023883a 	mov	r17,r6
1010ca9c:	3825883a 	mov	r18,r7
1010caa0:	003ea406 	br	1010c534 <__alt_data_end+0xfffec534>
1010caa4:	127ff804 	addi	r9,r2,-32
1010caa8:	01000804 	movi	r4,32
1010caac:	2a52d83a 	srl	r9,r5,r9
1010cab0:	11008c26 	beq	r2,r4,1010cce4 <__subdf3+0x834>
1010cab4:	01001004 	movi	r4,64
1010cab8:	2085c83a 	sub	r2,r4,r2
1010cabc:	2884983a 	sll	r2,r5,r2
1010cac0:	118cb03a 	or	r6,r2,r6
1010cac4:	300cc03a 	cmpne	r6,r6,zero
1010cac8:	4992b03a 	or	r9,r9,r6
1010cacc:	0005883a 	mov	r2,zero
1010cad0:	003f1206 	br	1010c71c <__alt_data_end+0xfffec71c>
1010cad4:	0101ffc4 	movi	r4,2047
1010cad8:	493f9c1e 	bne	r9,r4,1010c94c <__alt_data_end+0xfffec94c>
1010cadc:	2807883a 	mov	r3,r5
1010cae0:	3023883a 	mov	r17,r6
1010cae4:	4821883a 	mov	r16,r9
1010cae8:	3825883a 	mov	r18,r7
1010caec:	003e9106 	br	1010c534 <__alt_data_end+0xfffec534>
1010caf0:	80001f1e 	bne	r16,zero,1010cb70 <__subdf3+0x6c0>
1010caf4:	1c48b03a 	or	r4,r3,r17
1010caf8:	20005a26 	beq	r4,zero,1010cc64 <__subdf3+0x7b4>
1010cafc:	0084303a 	nor	r2,zero,r2
1010cb00:	1000561e 	bne	r2,zero,1010cc5c <__subdf3+0x7ac>
1010cb04:	89a3883a 	add	r17,r17,r6
1010cb08:	1945883a 	add	r2,r3,r5
1010cb0c:	898d803a 	cmpltu	r6,r17,r6
1010cb10:	3087883a 	add	r3,r6,r2
1010cb14:	4821883a 	mov	r16,r9
1010cb18:	003f0506 	br	1010c730 <__alt_data_end+0xfffec730>
1010cb1c:	10002b1e 	bne	r2,zero,1010cbcc <__subdf3+0x71c>
1010cb20:	2984b03a 	or	r2,r5,r6
1010cb24:	10008026 	beq	r2,zero,1010cd28 <__subdf3+0x878>
1010cb28:	2807883a 	mov	r3,r5
1010cb2c:	3023883a 	mov	r17,r6
1010cb30:	3825883a 	mov	r18,r7
1010cb34:	0401ffc4 	movi	r16,2047
1010cb38:	003e7e06 	br	1010c534 <__alt_data_end+0xfffec534>
1010cb3c:	3809883a 	mov	r4,r7
1010cb40:	0011883a 	mov	r8,zero
1010cb44:	0005883a 	mov	r2,zero
1010cb48:	003ee306 	br	1010c6d8 <__alt_data_end+0xfffec6d8>
1010cb4c:	1c62b03a 	or	r17,r3,r17
1010cb50:	8822c03a 	cmpne	r17,r17,zero
1010cb54:	0005883a 	mov	r2,zero
1010cb58:	003f8906 	br	1010c980 <__alt_data_end+0xfffec980>
1010cb5c:	3809883a 	mov	r4,r7
1010cb60:	4821883a 	mov	r16,r9
1010cb64:	0011883a 	mov	r8,zero
1010cb68:	0005883a 	mov	r2,zero
1010cb6c:	003eda06 	br	1010c6d8 <__alt_data_end+0xfffec6d8>
1010cb70:	0101ffc4 	movi	r4,2047
1010cb74:	49003b26 	beq	r9,r4,1010cc64 <__subdf3+0x7b4>
1010cb78:	0085c83a 	sub	r2,zero,r2
1010cb7c:	18c02034 	orhi	r3,r3,128
1010cb80:	01000e04 	movi	r4,56
1010cb84:	20806e16 	blt	r4,r2,1010cd40 <__subdf3+0x890>
1010cb88:	010007c4 	movi	r4,31
1010cb8c:	20807716 	blt	r4,r2,1010cd6c <__subdf3+0x8bc>
1010cb90:	01000804 	movi	r4,32
1010cb94:	2089c83a 	sub	r4,r4,r2
1010cb98:	1914983a 	sll	r10,r3,r4
1010cb9c:	8890d83a 	srl	r8,r17,r2
1010cba0:	8908983a 	sll	r4,r17,r4
1010cba4:	1884d83a 	srl	r2,r3,r2
1010cba8:	5222b03a 	or	r17,r10,r8
1010cbac:	2006c03a 	cmpne	r3,r4,zero
1010cbb0:	88e2b03a 	or	r17,r17,r3
1010cbb4:	89a3883a 	add	r17,r17,r6
1010cbb8:	1145883a 	add	r2,r2,r5
1010cbbc:	898d803a 	cmpltu	r6,r17,r6
1010cbc0:	3087883a 	add	r3,r6,r2
1010cbc4:	4821883a 	mov	r16,r9
1010cbc8:	003ed906 	br	1010c730 <__alt_data_end+0xfffec730>
1010cbcc:	2984b03a 	or	r2,r5,r6
1010cbd0:	10004226 	beq	r2,zero,1010ccdc <__subdf3+0x82c>
1010cbd4:	1808d0fa 	srli	r4,r3,3
1010cbd8:	8822d0fa 	srli	r17,r17,3
1010cbdc:	1806977a 	slli	r3,r3,29
1010cbe0:	2080022c 	andhi	r2,r4,8
1010cbe4:	1c62b03a 	or	r17,r3,r17
1010cbe8:	10000826 	beq	r2,zero,1010cc0c <__subdf3+0x75c>
1010cbec:	2812d0fa 	srli	r9,r5,3
1010cbf0:	4880022c 	andhi	r2,r9,8
1010cbf4:	1000051e 	bne	r2,zero,1010cc0c <__subdf3+0x75c>
1010cbf8:	300cd0fa 	srli	r6,r6,3
1010cbfc:	2804977a 	slli	r2,r5,29
1010cc00:	4809883a 	mov	r4,r9
1010cc04:	3825883a 	mov	r18,r7
1010cc08:	11a2b03a 	or	r17,r2,r6
1010cc0c:	8806d77a 	srli	r3,r17,29
1010cc10:	200890fa 	slli	r4,r4,3
1010cc14:	882290fa 	slli	r17,r17,3
1010cc18:	0401ffc4 	movi	r16,2047
1010cc1c:	1906b03a 	or	r3,r3,r4
1010cc20:	003e4406 	br	1010c534 <__alt_data_end+0xfffec534>
1010cc24:	2984b03a 	or	r2,r5,r6
1010cc28:	103e4226 	beq	r2,zero,1010c534 <__alt_data_end+0xfffec534>
1010cc2c:	8989c83a 	sub	r4,r17,r6
1010cc30:	8911803a 	cmpltu	r8,r17,r4
1010cc34:	1945c83a 	sub	r2,r3,r5
1010cc38:	1205c83a 	sub	r2,r2,r8
1010cc3c:	1200202c 	andhi	r8,r2,128
1010cc40:	403e9a26 	beq	r8,zero,1010c6ac <__alt_data_end+0xfffec6ac>
1010cc44:	3463c83a 	sub	r17,r6,r17
1010cc48:	28c5c83a 	sub	r2,r5,r3
1010cc4c:	344d803a 	cmpltu	r6,r6,r17
1010cc50:	1187c83a 	sub	r3,r2,r6
1010cc54:	3825883a 	mov	r18,r7
1010cc58:	003e3606 	br	1010c534 <__alt_data_end+0xfffec534>
1010cc5c:	0101ffc4 	movi	r4,2047
1010cc60:	493fc71e 	bne	r9,r4,1010cb80 <__alt_data_end+0xfffecb80>
1010cc64:	2807883a 	mov	r3,r5
1010cc68:	3023883a 	mov	r17,r6
1010cc6c:	4821883a 	mov	r16,r9
1010cc70:	003e3006 	br	1010c534 <__alt_data_end+0xfffec534>
1010cc74:	10003626 	beq	r2,zero,1010cd50 <__subdf3+0x8a0>
1010cc78:	2984b03a 	or	r2,r5,r6
1010cc7c:	10001726 	beq	r2,zero,1010ccdc <__subdf3+0x82c>
1010cc80:	1808d0fa 	srli	r4,r3,3
1010cc84:	8822d0fa 	srli	r17,r17,3
1010cc88:	1806977a 	slli	r3,r3,29
1010cc8c:	2080022c 	andhi	r2,r4,8
1010cc90:	1c62b03a 	or	r17,r3,r17
1010cc94:	10000726 	beq	r2,zero,1010ccb4 <__subdf3+0x804>
1010cc98:	2812d0fa 	srli	r9,r5,3
1010cc9c:	4880022c 	andhi	r2,r9,8
1010cca0:	1000041e 	bne	r2,zero,1010ccb4 <__subdf3+0x804>
1010cca4:	300cd0fa 	srli	r6,r6,3
1010cca8:	2804977a 	slli	r2,r5,29
1010ccac:	4809883a 	mov	r4,r9
1010ccb0:	11a2b03a 	or	r17,r2,r6
1010ccb4:	8806d77a 	srli	r3,r17,29
1010ccb8:	200890fa 	slli	r4,r4,3
1010ccbc:	882290fa 	slli	r17,r17,3
1010ccc0:	3825883a 	mov	r18,r7
1010ccc4:	1906b03a 	or	r3,r3,r4
1010ccc8:	0401ffc4 	movi	r16,2047
1010cccc:	003e1906 	br	1010c534 <__alt_data_end+0xfffec534>
1010ccd0:	000b883a 	mov	r5,zero
1010ccd4:	0005883a 	mov	r2,zero
1010ccd8:	003e2e06 	br	1010c594 <__alt_data_end+0xfffec594>
1010ccdc:	0401ffc4 	movi	r16,2047
1010cce0:	003e1406 	br	1010c534 <__alt_data_end+0xfffec534>
1010cce4:	0005883a 	mov	r2,zero
1010cce8:	003f7506 	br	1010cac0 <__alt_data_end+0xfffecac0>
1010ccec:	0005883a 	mov	r2,zero
1010ccf0:	0009883a 	mov	r4,zero
1010ccf4:	003e7806 	br	1010c6d8 <__alt_data_end+0xfffec6d8>
1010ccf8:	123ff804 	addi	r8,r2,-32
1010ccfc:	01000804 	movi	r4,32
1010cd00:	1a10d83a 	srl	r8,r3,r8
1010cd04:	11002526 	beq	r2,r4,1010cd9c <__subdf3+0x8ec>
1010cd08:	01001004 	movi	r4,64
1010cd0c:	2085c83a 	sub	r2,r4,r2
1010cd10:	1884983a 	sll	r2,r3,r2
1010cd14:	1444b03a 	or	r2,r2,r17
1010cd18:	1004c03a 	cmpne	r2,r2,zero
1010cd1c:	40a2b03a 	or	r17,r8,r2
1010cd20:	0005883a 	mov	r2,zero
1010cd24:	003f1606 	br	1010c980 <__alt_data_end+0xfffec980>
1010cd28:	02000434 	movhi	r8,16
1010cd2c:	0009883a 	mov	r4,zero
1010cd30:	423fffc4 	addi	r8,r8,-1
1010cd34:	00bfffc4 	movi	r2,-1
1010cd38:	0401ffc4 	movi	r16,2047
1010cd3c:	003e6606 	br	1010c6d8 <__alt_data_end+0xfffec6d8>
1010cd40:	1c62b03a 	or	r17,r3,r17
1010cd44:	8822c03a 	cmpne	r17,r17,zero
1010cd48:	0005883a 	mov	r2,zero
1010cd4c:	003f9906 	br	1010cbb4 <__alt_data_end+0xfffecbb4>
1010cd50:	2807883a 	mov	r3,r5
1010cd54:	3023883a 	mov	r17,r6
1010cd58:	0401ffc4 	movi	r16,2047
1010cd5c:	003df506 	br	1010c534 <__alt_data_end+0xfffec534>
1010cd60:	2807883a 	mov	r3,r5
1010cd64:	3023883a 	mov	r17,r6
1010cd68:	003df206 	br	1010c534 <__alt_data_end+0xfffec534>
1010cd6c:	123ff804 	addi	r8,r2,-32
1010cd70:	01000804 	movi	r4,32
1010cd74:	1a10d83a 	srl	r8,r3,r8
1010cd78:	11000a26 	beq	r2,r4,1010cda4 <__subdf3+0x8f4>
1010cd7c:	01001004 	movi	r4,64
1010cd80:	2085c83a 	sub	r2,r4,r2
1010cd84:	1884983a 	sll	r2,r3,r2
1010cd88:	1444b03a 	or	r2,r2,r17
1010cd8c:	1004c03a 	cmpne	r2,r2,zero
1010cd90:	40a2b03a 	or	r17,r8,r2
1010cd94:	0005883a 	mov	r2,zero
1010cd98:	003f8606 	br	1010cbb4 <__alt_data_end+0xfffecbb4>
1010cd9c:	0005883a 	mov	r2,zero
1010cda0:	003fdc06 	br	1010cd14 <__alt_data_end+0xfffecd14>
1010cda4:	0005883a 	mov	r2,zero
1010cda8:	003ff706 	br	1010cd88 <__alt_data_end+0xfffecd88>

1010cdac <__fixdfsi>:
1010cdac:	280cd53a 	srli	r6,r5,20
1010cdb0:	00c00434 	movhi	r3,16
1010cdb4:	18ffffc4 	addi	r3,r3,-1
1010cdb8:	3181ffcc 	andi	r6,r6,2047
1010cdbc:	01c0ff84 	movi	r7,1022
1010cdc0:	28c6703a 	and	r3,r5,r3
1010cdc4:	280ad7fa 	srli	r5,r5,31
1010cdc8:	3980120e 	bge	r7,r6,1010ce14 <__fixdfsi+0x68>
1010cdcc:	00810744 	movi	r2,1053
1010cdd0:	11800c16 	blt	r2,r6,1010ce04 <__fixdfsi+0x58>
1010cdd4:	00810cc4 	movi	r2,1075
1010cdd8:	1185c83a 	sub	r2,r2,r6
1010cddc:	01c007c4 	movi	r7,31
1010cde0:	18c00434 	orhi	r3,r3,16
1010cde4:	38800d16 	blt	r7,r2,1010ce1c <__fixdfsi+0x70>
1010cde8:	31befb44 	addi	r6,r6,-1043
1010cdec:	2084d83a 	srl	r2,r4,r2
1010cdf0:	1986983a 	sll	r3,r3,r6
1010cdf4:	1884b03a 	or	r2,r3,r2
1010cdf8:	28000726 	beq	r5,zero,1010ce18 <__fixdfsi+0x6c>
1010cdfc:	0085c83a 	sub	r2,zero,r2
1010ce00:	f800283a 	ret
1010ce04:	00a00034 	movhi	r2,32768
1010ce08:	10bfffc4 	addi	r2,r2,-1
1010ce0c:	2885883a 	add	r2,r5,r2
1010ce10:	f800283a 	ret
1010ce14:	0005883a 	mov	r2,zero
1010ce18:	f800283a 	ret
1010ce1c:	008104c4 	movi	r2,1043
1010ce20:	1185c83a 	sub	r2,r2,r6
1010ce24:	1884d83a 	srl	r2,r3,r2
1010ce28:	003ff306 	br	1010cdf8 <__alt_data_end+0xfffecdf8>

1010ce2c <__floatsidf>:
1010ce2c:	defffd04 	addi	sp,sp,-12
1010ce30:	dfc00215 	stw	ra,8(sp)
1010ce34:	dc400115 	stw	r17,4(sp)
1010ce38:	dc000015 	stw	r16,0(sp)
1010ce3c:	20002b26 	beq	r4,zero,1010ceec <__floatsidf+0xc0>
1010ce40:	2023883a 	mov	r17,r4
1010ce44:	2020d7fa 	srli	r16,r4,31
1010ce48:	20002d16 	blt	r4,zero,1010cf00 <__floatsidf+0xd4>
1010ce4c:	8809883a 	mov	r4,r17
1010ce50:	010cfb00 	call	1010cfb0 <__clzsi2>
1010ce54:	01410784 	movi	r5,1054
1010ce58:	288bc83a 	sub	r5,r5,r2
1010ce5c:	01010cc4 	movi	r4,1075
1010ce60:	2149c83a 	sub	r4,r4,r5
1010ce64:	00c007c4 	movi	r3,31
1010ce68:	1900160e 	bge	r3,r4,1010cec4 <__floatsidf+0x98>
1010ce6c:	00c104c4 	movi	r3,1043
1010ce70:	1947c83a 	sub	r3,r3,r5
1010ce74:	88c6983a 	sll	r3,r17,r3
1010ce78:	00800434 	movhi	r2,16
1010ce7c:	10bfffc4 	addi	r2,r2,-1
1010ce80:	1886703a 	and	r3,r3,r2
1010ce84:	2941ffcc 	andi	r5,r5,2047
1010ce88:	800d883a 	mov	r6,r16
1010ce8c:	0005883a 	mov	r2,zero
1010ce90:	280a953a 	slli	r5,r5,20
1010ce94:	31803fcc 	andi	r6,r6,255
1010ce98:	01000434 	movhi	r4,16
1010ce9c:	300c97fa 	slli	r6,r6,31
1010cea0:	213fffc4 	addi	r4,r4,-1
1010cea4:	1906703a 	and	r3,r3,r4
1010cea8:	1946b03a 	or	r3,r3,r5
1010ceac:	1986b03a 	or	r3,r3,r6
1010ceb0:	dfc00217 	ldw	ra,8(sp)
1010ceb4:	dc400117 	ldw	r17,4(sp)
1010ceb8:	dc000017 	ldw	r16,0(sp)
1010cebc:	dec00304 	addi	sp,sp,12
1010cec0:	f800283a 	ret
1010cec4:	00c002c4 	movi	r3,11
1010cec8:	1887c83a 	sub	r3,r3,r2
1010cecc:	88c6d83a 	srl	r3,r17,r3
1010ced0:	8904983a 	sll	r2,r17,r4
1010ced4:	01000434 	movhi	r4,16
1010ced8:	213fffc4 	addi	r4,r4,-1
1010cedc:	2941ffcc 	andi	r5,r5,2047
1010cee0:	1906703a 	and	r3,r3,r4
1010cee4:	800d883a 	mov	r6,r16
1010cee8:	003fe906 	br	1010ce90 <__alt_data_end+0xfffece90>
1010ceec:	000d883a 	mov	r6,zero
1010cef0:	000b883a 	mov	r5,zero
1010cef4:	0007883a 	mov	r3,zero
1010cef8:	0005883a 	mov	r2,zero
1010cefc:	003fe406 	br	1010ce90 <__alt_data_end+0xfffece90>
1010cf00:	0123c83a 	sub	r17,zero,r4
1010cf04:	003fd106 	br	1010ce4c <__alt_data_end+0xfffece4c>

1010cf08 <__floatunsidf>:
1010cf08:	defffe04 	addi	sp,sp,-8
1010cf0c:	dc000015 	stw	r16,0(sp)
1010cf10:	dfc00115 	stw	ra,4(sp)
1010cf14:	2021883a 	mov	r16,r4
1010cf18:	20002226 	beq	r4,zero,1010cfa4 <__floatunsidf+0x9c>
1010cf1c:	010cfb00 	call	1010cfb0 <__clzsi2>
1010cf20:	01010784 	movi	r4,1054
1010cf24:	2089c83a 	sub	r4,r4,r2
1010cf28:	01810cc4 	movi	r6,1075
1010cf2c:	310dc83a 	sub	r6,r6,r4
1010cf30:	00c007c4 	movi	r3,31
1010cf34:	1980120e 	bge	r3,r6,1010cf80 <__floatunsidf+0x78>
1010cf38:	00c104c4 	movi	r3,1043
1010cf3c:	1907c83a 	sub	r3,r3,r4
1010cf40:	80ca983a 	sll	r5,r16,r3
1010cf44:	00800434 	movhi	r2,16
1010cf48:	10bfffc4 	addi	r2,r2,-1
1010cf4c:	2101ffcc 	andi	r4,r4,2047
1010cf50:	0021883a 	mov	r16,zero
1010cf54:	288a703a 	and	r5,r5,r2
1010cf58:	2008953a 	slli	r4,r4,20
1010cf5c:	00c00434 	movhi	r3,16
1010cf60:	18ffffc4 	addi	r3,r3,-1
1010cf64:	28c6703a 	and	r3,r5,r3
1010cf68:	8005883a 	mov	r2,r16
1010cf6c:	1906b03a 	or	r3,r3,r4
1010cf70:	dfc00117 	ldw	ra,4(sp)
1010cf74:	dc000017 	ldw	r16,0(sp)
1010cf78:	dec00204 	addi	sp,sp,8
1010cf7c:	f800283a 	ret
1010cf80:	00c002c4 	movi	r3,11
1010cf84:	188bc83a 	sub	r5,r3,r2
1010cf88:	814ad83a 	srl	r5,r16,r5
1010cf8c:	00c00434 	movhi	r3,16
1010cf90:	18ffffc4 	addi	r3,r3,-1
1010cf94:	81a0983a 	sll	r16,r16,r6
1010cf98:	2101ffcc 	andi	r4,r4,2047
1010cf9c:	28ca703a 	and	r5,r5,r3
1010cfa0:	003fed06 	br	1010cf58 <__alt_data_end+0xfffecf58>
1010cfa4:	0009883a 	mov	r4,zero
1010cfa8:	000b883a 	mov	r5,zero
1010cfac:	003fea06 	br	1010cf58 <__alt_data_end+0xfffecf58>

1010cfb0 <__clzsi2>:
1010cfb0:	00bfffd4 	movui	r2,65535
1010cfb4:	11000536 	bltu	r2,r4,1010cfcc <__clzsi2+0x1c>
1010cfb8:	00803fc4 	movi	r2,255
1010cfbc:	11000f36 	bltu	r2,r4,1010cffc <__clzsi2+0x4c>
1010cfc0:	00800804 	movi	r2,32
1010cfc4:	0007883a 	mov	r3,zero
1010cfc8:	00000506 	br	1010cfe0 <__clzsi2+0x30>
1010cfcc:	00804034 	movhi	r2,256
1010cfd0:	10bfffc4 	addi	r2,r2,-1
1010cfd4:	11000c2e 	bgeu	r2,r4,1010d008 <__clzsi2+0x58>
1010cfd8:	00800204 	movi	r2,8
1010cfdc:	00c00604 	movi	r3,24
1010cfe0:	20c8d83a 	srl	r4,r4,r3
1010cfe4:	00c40474 	movhi	r3,4113
1010cfe8:	18fe2804 	addi	r3,r3,-1888
1010cfec:	1909883a 	add	r4,r3,r4
1010cff0:	20c00003 	ldbu	r3,0(r4)
1010cff4:	10c5c83a 	sub	r2,r2,r3
1010cff8:	f800283a 	ret
1010cffc:	00800604 	movi	r2,24
1010d000:	00c00204 	movi	r3,8
1010d004:	003ff606 	br	1010cfe0 <__alt_data_end+0xfffecfe0>
1010d008:	00800404 	movi	r2,16
1010d00c:	1007883a 	mov	r3,r2
1010d010:	003ff306 	br	1010cfe0 <__alt_data_end+0xfffecfe0>

1010d014 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d014:	defffe04 	addi	sp,sp,-8
1010d018:	dfc00115 	stw	ra,4(sp)
1010d01c:	df000015 	stw	fp,0(sp)
1010d020:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d024:	d0a00b17 	ldw	r2,-32724(gp)
1010d028:	10000326 	beq	r2,zero,1010d038 <alt_get_errno+0x24>
1010d02c:	d0a00b17 	ldw	r2,-32724(gp)
1010d030:	103ee83a 	callr	r2
1010d034:	00000106 	br	1010d03c <alt_get_errno+0x28>
1010d038:	d0a6d104 	addi	r2,gp,-25788
}
1010d03c:	e037883a 	mov	sp,fp
1010d040:	dfc00117 	ldw	ra,4(sp)
1010d044:	df000017 	ldw	fp,0(sp)
1010d048:	dec00204 	addi	sp,sp,8
1010d04c:	f800283a 	ret

1010d050 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010d050:	defffb04 	addi	sp,sp,-20
1010d054:	dfc00415 	stw	ra,16(sp)
1010d058:	df000315 	stw	fp,12(sp)
1010d05c:	df000304 	addi	fp,sp,12
1010d060:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010d064:	e0bfff17 	ldw	r2,-4(fp)
1010d068:	10000616 	blt	r2,zero,1010d084 <close+0x34>
1010d06c:	e0bfff17 	ldw	r2,-4(fp)
1010d070:	10c00324 	muli	r3,r2,12
1010d074:	00840474 	movhi	r2,4113
1010d078:	1080a804 	addi	r2,r2,672
1010d07c:	1885883a 	add	r2,r3,r2
1010d080:	00000106 	br	1010d088 <close+0x38>
1010d084:	0005883a 	mov	r2,zero
1010d088:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010d08c:	e0bffd17 	ldw	r2,-12(fp)
1010d090:	10001926 	beq	r2,zero,1010d0f8 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010d094:	e0bffd17 	ldw	r2,-12(fp)
1010d098:	10800017 	ldw	r2,0(r2)
1010d09c:	10800417 	ldw	r2,16(r2)
1010d0a0:	10000626 	beq	r2,zero,1010d0bc <close+0x6c>
1010d0a4:	e0bffd17 	ldw	r2,-12(fp)
1010d0a8:	10800017 	ldw	r2,0(r2)
1010d0ac:	10800417 	ldw	r2,16(r2)
1010d0b0:	e13ffd17 	ldw	r4,-12(fp)
1010d0b4:	103ee83a 	callr	r2
1010d0b8:	00000106 	br	1010d0c0 <close+0x70>
1010d0bc:	0005883a 	mov	r2,zero
1010d0c0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010d0c4:	e13fff17 	ldw	r4,-4(fp)
1010d0c8:	010d7100 	call	1010d710 <alt_release_fd>
    if (rval < 0)
1010d0cc:	e0bffe17 	ldw	r2,-8(fp)
1010d0d0:	1000070e 	bge	r2,zero,1010d0f0 <close+0xa0>
    {
      ALT_ERRNO = -rval;
1010d0d4:	010d0140 	call	1010d014 <alt_get_errno>
1010d0d8:	1007883a 	mov	r3,r2
1010d0dc:	e0bffe17 	ldw	r2,-8(fp)
1010d0e0:	0085c83a 	sub	r2,zero,r2
1010d0e4:	18800015 	stw	r2,0(r3)
      return -1;
1010d0e8:	00bfffc4 	movi	r2,-1
1010d0ec:	00000706 	br	1010d10c <close+0xbc>
    }
    return 0;
1010d0f0:	0005883a 	mov	r2,zero
1010d0f4:	00000506 	br	1010d10c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d0f8:	010d0140 	call	1010d014 <alt_get_errno>
1010d0fc:	1007883a 	mov	r3,r2
1010d100:	00801444 	movi	r2,81
1010d104:	18800015 	stw	r2,0(r3)
    return -1;
1010d108:	00bfffc4 	movi	r2,-1
  }
}
1010d10c:	e037883a 	mov	sp,fp
1010d110:	dfc00117 	ldw	ra,4(sp)
1010d114:	df000017 	ldw	fp,0(sp)
1010d118:	dec00204 	addi	sp,sp,8
1010d11c:	f800283a 	ret

1010d120 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010d120:	defffc04 	addi	sp,sp,-16
1010d124:	df000315 	stw	fp,12(sp)
1010d128:	df000304 	addi	fp,sp,12
1010d12c:	e13ffd15 	stw	r4,-12(fp)
1010d130:	e17ffe15 	stw	r5,-8(fp)
1010d134:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010d138:	e0bfff17 	ldw	r2,-4(fp)
}
1010d13c:	e037883a 	mov	sp,fp
1010d140:	df000017 	ldw	fp,0(sp)
1010d144:	dec00104 	addi	sp,sp,4
1010d148:	f800283a 	ret

1010d14c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d14c:	defffe04 	addi	sp,sp,-8
1010d150:	dfc00115 	stw	ra,4(sp)
1010d154:	df000015 	stw	fp,0(sp)
1010d158:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d15c:	d0a00b17 	ldw	r2,-32724(gp)
1010d160:	10000326 	beq	r2,zero,1010d170 <alt_get_errno+0x24>
1010d164:	d0a00b17 	ldw	r2,-32724(gp)
1010d168:	103ee83a 	callr	r2
1010d16c:	00000106 	br	1010d174 <alt_get_errno+0x28>
1010d170:	d0a6d104 	addi	r2,gp,-25788
}
1010d174:	e037883a 	mov	sp,fp
1010d178:	dfc00117 	ldw	ra,4(sp)
1010d17c:	df000017 	ldw	fp,0(sp)
1010d180:	dec00204 	addi	sp,sp,8
1010d184:	f800283a 	ret

1010d188 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010d188:	defffb04 	addi	sp,sp,-20
1010d18c:	dfc00415 	stw	ra,16(sp)
1010d190:	df000315 	stw	fp,12(sp)
1010d194:	df000304 	addi	fp,sp,12
1010d198:	e13ffe15 	stw	r4,-8(fp)
1010d19c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d1a0:	e0bffe17 	ldw	r2,-8(fp)
1010d1a4:	10000616 	blt	r2,zero,1010d1c0 <fstat+0x38>
1010d1a8:	e0bffe17 	ldw	r2,-8(fp)
1010d1ac:	10c00324 	muli	r3,r2,12
1010d1b0:	00840474 	movhi	r2,4113
1010d1b4:	1080a804 	addi	r2,r2,672
1010d1b8:	1885883a 	add	r2,r3,r2
1010d1bc:	00000106 	br	1010d1c4 <fstat+0x3c>
1010d1c0:	0005883a 	mov	r2,zero
1010d1c4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010d1c8:	e0bffd17 	ldw	r2,-12(fp)
1010d1cc:	10001026 	beq	r2,zero,1010d210 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010d1d0:	e0bffd17 	ldw	r2,-12(fp)
1010d1d4:	10800017 	ldw	r2,0(r2)
1010d1d8:	10800817 	ldw	r2,32(r2)
1010d1dc:	10000726 	beq	r2,zero,1010d1fc <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
1010d1e0:	e0bffd17 	ldw	r2,-12(fp)
1010d1e4:	10800017 	ldw	r2,0(r2)
1010d1e8:	10800817 	ldw	r2,32(r2)
1010d1ec:	e17fff17 	ldw	r5,-4(fp)
1010d1f0:	e13ffd17 	ldw	r4,-12(fp)
1010d1f4:	103ee83a 	callr	r2
1010d1f8:	00000a06 	br	1010d224 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010d1fc:	e0bfff17 	ldw	r2,-4(fp)
1010d200:	00c80004 	movi	r3,8192
1010d204:	10c00115 	stw	r3,4(r2)
      return 0;
1010d208:	0005883a 	mov	r2,zero
1010d20c:	00000506 	br	1010d224 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d210:	010d14c0 	call	1010d14c <alt_get_errno>
1010d214:	1007883a 	mov	r3,r2
1010d218:	00801444 	movi	r2,81
1010d21c:	18800015 	stw	r2,0(r3)
    return -1;
1010d220:	00bfffc4 	movi	r2,-1
  }
}
1010d224:	e037883a 	mov	sp,fp
1010d228:	dfc00117 	ldw	ra,4(sp)
1010d22c:	df000017 	ldw	fp,0(sp)
1010d230:	dec00204 	addi	sp,sp,8
1010d234:	f800283a 	ret

1010d238 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d238:	defffe04 	addi	sp,sp,-8
1010d23c:	dfc00115 	stw	ra,4(sp)
1010d240:	df000015 	stw	fp,0(sp)
1010d244:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d248:	d0a00b17 	ldw	r2,-32724(gp)
1010d24c:	10000326 	beq	r2,zero,1010d25c <alt_get_errno+0x24>
1010d250:	d0a00b17 	ldw	r2,-32724(gp)
1010d254:	103ee83a 	callr	r2
1010d258:	00000106 	br	1010d260 <alt_get_errno+0x28>
1010d25c:	d0a6d104 	addi	r2,gp,-25788
}
1010d260:	e037883a 	mov	sp,fp
1010d264:	dfc00117 	ldw	ra,4(sp)
1010d268:	df000017 	ldw	fp,0(sp)
1010d26c:	dec00204 	addi	sp,sp,8
1010d270:	f800283a 	ret

1010d274 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010d274:	deffed04 	addi	sp,sp,-76
1010d278:	dfc01215 	stw	ra,72(sp)
1010d27c:	df001115 	stw	fp,68(sp)
1010d280:	df001104 	addi	fp,sp,68
1010d284:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d288:	e0bfff17 	ldw	r2,-4(fp)
1010d28c:	10000616 	blt	r2,zero,1010d2a8 <isatty+0x34>
1010d290:	e0bfff17 	ldw	r2,-4(fp)
1010d294:	10c00324 	muli	r3,r2,12
1010d298:	00840474 	movhi	r2,4113
1010d29c:	1080a804 	addi	r2,r2,672
1010d2a0:	1885883a 	add	r2,r3,r2
1010d2a4:	00000106 	br	1010d2ac <isatty+0x38>
1010d2a8:	0005883a 	mov	r2,zero
1010d2ac:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010d2b0:	e0bfef17 	ldw	r2,-68(fp)
1010d2b4:	10000e26 	beq	r2,zero,1010d2f0 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010d2b8:	e0bfef17 	ldw	r2,-68(fp)
1010d2bc:	10800017 	ldw	r2,0(r2)
1010d2c0:	10800817 	ldw	r2,32(r2)
1010d2c4:	1000021e 	bne	r2,zero,1010d2d0 <isatty+0x5c>
    {
      return 1;
1010d2c8:	00800044 	movi	r2,1
1010d2cc:	00000d06 	br	1010d304 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010d2d0:	e0bff004 	addi	r2,fp,-64
1010d2d4:	100b883a 	mov	r5,r2
1010d2d8:	e13fff17 	ldw	r4,-4(fp)
1010d2dc:	010d1880 	call	1010d188 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010d2e0:	e0bff117 	ldw	r2,-60(fp)
1010d2e4:	10880020 	cmpeqi	r2,r2,8192
1010d2e8:	10803fcc 	andi	r2,r2,255
1010d2ec:	00000506 	br	1010d304 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d2f0:	010d2380 	call	1010d238 <alt_get_errno>
1010d2f4:	1007883a 	mov	r3,r2
1010d2f8:	00801444 	movi	r2,81
1010d2fc:	18800015 	stw	r2,0(r3)
    return 0;
1010d300:	0005883a 	mov	r2,zero
  }
}
1010d304:	e037883a 	mov	sp,fp
1010d308:	dfc00117 	ldw	ra,4(sp)
1010d30c:	df000017 	ldw	fp,0(sp)
1010d310:	dec00204 	addi	sp,sp,8
1010d314:	f800283a 	ret

1010d318 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010d318:	defffc04 	addi	sp,sp,-16
1010d31c:	df000315 	stw	fp,12(sp)
1010d320:	df000304 	addi	fp,sp,12
1010d324:	e13ffd15 	stw	r4,-12(fp)
1010d328:	e17ffe15 	stw	r5,-8(fp)
1010d32c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010d330:	e0fffe17 	ldw	r3,-8(fp)
1010d334:	e0bffd17 	ldw	r2,-12(fp)
1010d338:	18800c26 	beq	r3,r2,1010d36c <alt_load_section+0x54>
  {
    while( to != end )
1010d33c:	00000806 	br	1010d360 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010d340:	e0bffe17 	ldw	r2,-8(fp)
1010d344:	10c00104 	addi	r3,r2,4
1010d348:	e0fffe15 	stw	r3,-8(fp)
1010d34c:	e0fffd17 	ldw	r3,-12(fp)
1010d350:	19000104 	addi	r4,r3,4
1010d354:	e13ffd15 	stw	r4,-12(fp)
1010d358:	18c00017 	ldw	r3,0(r3)
1010d35c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010d360:	e0fffe17 	ldw	r3,-8(fp)
1010d364:	e0bfff17 	ldw	r2,-4(fp)
1010d368:	18bff51e 	bne	r3,r2,1010d340 <__alt_data_end+0xfffed340>
    {
      *to++ = *from++;
    }
  }
}
1010d36c:	0001883a 	nop
1010d370:	e037883a 	mov	sp,fp
1010d374:	df000017 	ldw	fp,0(sp)
1010d378:	dec00104 	addi	sp,sp,4
1010d37c:	f800283a 	ret

1010d380 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010d380:	defffe04 	addi	sp,sp,-8
1010d384:	dfc00115 	stw	ra,4(sp)
1010d388:	df000015 	stw	fp,0(sp)
1010d38c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010d390:	01840474 	movhi	r6,4113
1010d394:	31853004 	addi	r6,r6,5312
1010d398:	01440474 	movhi	r5,4113
1010d39c:	297e7504 	addi	r5,r5,-1580
1010d3a0:	01040474 	movhi	r4,4113
1010d3a4:	21053004 	addi	r4,r4,5312
1010d3a8:	010d3180 	call	1010d318 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010d3ac:	01840434 	movhi	r6,4112
1010d3b0:	31809104 	addi	r6,r6,580
1010d3b4:	01440434 	movhi	r5,4112
1010d3b8:	29400804 	addi	r5,r5,32
1010d3bc:	01040434 	movhi	r4,4112
1010d3c0:	21000804 	addi	r4,r4,32
1010d3c4:	010d3180 	call	1010d318 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010d3c8:	01840474 	movhi	r6,4113
1010d3cc:	31be7504 	addi	r6,r6,-1580
1010d3d0:	01440474 	movhi	r5,4113
1010d3d4:	297dad04 	addi	r5,r5,-2380
1010d3d8:	01040474 	movhi	r4,4113
1010d3dc:	213dad04 	addi	r4,r4,-2380
1010d3e0:	010d3180 	call	1010d318 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010d3e4:	010e5a00 	call	1010e5a0 <alt_dcache_flush_all>
  alt_icache_flush_all();
1010d3e8:	010e7880 	call	1010e788 <alt_icache_flush_all>
}
1010d3ec:	0001883a 	nop
1010d3f0:	e037883a 	mov	sp,fp
1010d3f4:	dfc00117 	ldw	ra,4(sp)
1010d3f8:	df000017 	ldw	fp,0(sp)
1010d3fc:	dec00204 	addi	sp,sp,8
1010d400:	f800283a 	ret

1010d404 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d404:	defffe04 	addi	sp,sp,-8
1010d408:	dfc00115 	stw	ra,4(sp)
1010d40c:	df000015 	stw	fp,0(sp)
1010d410:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d414:	d0a00b17 	ldw	r2,-32724(gp)
1010d418:	10000326 	beq	r2,zero,1010d428 <alt_get_errno+0x24>
1010d41c:	d0a00b17 	ldw	r2,-32724(gp)
1010d420:	103ee83a 	callr	r2
1010d424:	00000106 	br	1010d42c <alt_get_errno+0x28>
1010d428:	d0a6d104 	addi	r2,gp,-25788
}
1010d42c:	e037883a 	mov	sp,fp
1010d430:	dfc00117 	ldw	ra,4(sp)
1010d434:	df000017 	ldw	fp,0(sp)
1010d438:	dec00204 	addi	sp,sp,8
1010d43c:	f800283a 	ret

1010d440 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010d440:	defff904 	addi	sp,sp,-28
1010d444:	dfc00615 	stw	ra,24(sp)
1010d448:	df000515 	stw	fp,20(sp)
1010d44c:	df000504 	addi	fp,sp,20
1010d450:	e13ffd15 	stw	r4,-12(fp)
1010d454:	e17ffe15 	stw	r5,-8(fp)
1010d458:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010d45c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d460:	e0bffd17 	ldw	r2,-12(fp)
1010d464:	10000616 	blt	r2,zero,1010d480 <lseek+0x40>
1010d468:	e0bffd17 	ldw	r2,-12(fp)
1010d46c:	10c00324 	muli	r3,r2,12
1010d470:	00840474 	movhi	r2,4113
1010d474:	1080a804 	addi	r2,r2,672
1010d478:	1885883a 	add	r2,r3,r2
1010d47c:	00000106 	br	1010d484 <lseek+0x44>
1010d480:	0005883a 	mov	r2,zero
1010d484:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010d488:	e0bffc17 	ldw	r2,-16(fp)
1010d48c:	10001026 	beq	r2,zero,1010d4d0 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010d490:	e0bffc17 	ldw	r2,-16(fp)
1010d494:	10800017 	ldw	r2,0(r2)
1010d498:	10800717 	ldw	r2,28(r2)
1010d49c:	10000926 	beq	r2,zero,1010d4c4 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010d4a0:	e0bffc17 	ldw	r2,-16(fp)
1010d4a4:	10800017 	ldw	r2,0(r2)
1010d4a8:	10800717 	ldw	r2,28(r2)
1010d4ac:	e1bfff17 	ldw	r6,-4(fp)
1010d4b0:	e17ffe17 	ldw	r5,-8(fp)
1010d4b4:	e13ffc17 	ldw	r4,-16(fp)
1010d4b8:	103ee83a 	callr	r2
1010d4bc:	e0bffb15 	stw	r2,-20(fp)
1010d4c0:	00000506 	br	1010d4d8 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010d4c4:	00bfde84 	movi	r2,-134
1010d4c8:	e0bffb15 	stw	r2,-20(fp)
1010d4cc:	00000206 	br	1010d4d8 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
1010d4d0:	00bfebc4 	movi	r2,-81
1010d4d4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010d4d8:	e0bffb17 	ldw	r2,-20(fp)
1010d4dc:	1000070e 	bge	r2,zero,1010d4fc <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
1010d4e0:	010d4040 	call	1010d404 <alt_get_errno>
1010d4e4:	1007883a 	mov	r3,r2
1010d4e8:	e0bffb17 	ldw	r2,-20(fp)
1010d4ec:	0085c83a 	sub	r2,zero,r2
1010d4f0:	18800015 	stw	r2,0(r3)
    rc = -1;
1010d4f4:	00bfffc4 	movi	r2,-1
1010d4f8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010d4fc:	e0bffb17 	ldw	r2,-20(fp)
}
1010d500:	e037883a 	mov	sp,fp
1010d504:	dfc00117 	ldw	ra,4(sp)
1010d508:	df000017 	ldw	fp,0(sp)
1010d50c:	dec00204 	addi	sp,sp,8
1010d510:	f800283a 	ret

1010d514 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010d514:	defffd04 	addi	sp,sp,-12
1010d518:	dfc00215 	stw	ra,8(sp)
1010d51c:	df000115 	stw	fp,4(sp)
1010d520:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010d524:	0009883a 	mov	r4,zero
1010d528:	010d98c0 	call	1010d98c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010d52c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010d530:	010d9c40 	call	1010d9c4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010d534:	01840474 	movhi	r6,4113
1010d538:	31be6b04 	addi	r6,r6,-1620
1010d53c:	01440474 	movhi	r5,4113
1010d540:	297e6b04 	addi	r5,r5,-1620
1010d544:	01040474 	movhi	r4,4113
1010d548:	213e6b04 	addi	r4,r4,-1620
1010d54c:	010eb200 	call	1010eb20 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010d550:	010e6c80 	call	1010e6c8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010d554:	01040474 	movhi	r4,4113
1010d558:	2139ca04 	addi	r4,r4,-6360
1010d55c:	010f3200 	call	1010f320 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010d560:	d0a6d217 	ldw	r2,-25784(gp)
1010d564:	d0e6d317 	ldw	r3,-25780(gp)
1010d568:	d126d417 	ldw	r4,-25776(gp)
1010d56c:	200d883a 	mov	r6,r4
1010d570:	180b883a 	mov	r5,r3
1010d574:	1009883a 	mov	r4,r2
1010d578:	01006ac0 	call	101006ac <main>
1010d57c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010d580:	01000044 	movi	r4,1
1010d584:	010d0500 	call	1010d050 <close>
  exit (result);
1010d588:	e13fff17 	ldw	r4,-4(fp)
1010d58c:	010f3340 	call	1010f334 <exit>

1010d590 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010d590:	defffe04 	addi	sp,sp,-8
1010d594:	df000115 	stw	fp,4(sp)
1010d598:	df000104 	addi	fp,sp,4
1010d59c:	e13fff15 	stw	r4,-4(fp)
}
1010d5a0:	0001883a 	nop
1010d5a4:	e037883a 	mov	sp,fp
1010d5a8:	df000017 	ldw	fp,0(sp)
1010d5ac:	dec00104 	addi	sp,sp,4
1010d5b0:	f800283a 	ret

1010d5b4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010d5b4:	defffe04 	addi	sp,sp,-8
1010d5b8:	df000115 	stw	fp,4(sp)
1010d5bc:	df000104 	addi	fp,sp,4
1010d5c0:	e13fff15 	stw	r4,-4(fp)
}
1010d5c4:	0001883a 	nop
1010d5c8:	e037883a 	mov	sp,fp
1010d5cc:	df000017 	ldw	fp,0(sp)
1010d5d0:	dec00104 	addi	sp,sp,4
1010d5d4:	f800283a 	ret

1010d5d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d5d8:	defffe04 	addi	sp,sp,-8
1010d5dc:	dfc00115 	stw	ra,4(sp)
1010d5e0:	df000015 	stw	fp,0(sp)
1010d5e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d5e8:	d0a00b17 	ldw	r2,-32724(gp)
1010d5ec:	10000326 	beq	r2,zero,1010d5fc <alt_get_errno+0x24>
1010d5f0:	d0a00b17 	ldw	r2,-32724(gp)
1010d5f4:	103ee83a 	callr	r2
1010d5f8:	00000106 	br	1010d600 <alt_get_errno+0x28>
1010d5fc:	d0a6d104 	addi	r2,gp,-25788
}
1010d600:	e037883a 	mov	sp,fp
1010d604:	dfc00117 	ldw	ra,4(sp)
1010d608:	df000017 	ldw	fp,0(sp)
1010d60c:	dec00204 	addi	sp,sp,8
1010d610:	f800283a 	ret

1010d614 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010d614:	defff904 	addi	sp,sp,-28
1010d618:	dfc00615 	stw	ra,24(sp)
1010d61c:	df000515 	stw	fp,20(sp)
1010d620:	df000504 	addi	fp,sp,20
1010d624:	e13ffd15 	stw	r4,-12(fp)
1010d628:	e17ffe15 	stw	r5,-8(fp)
1010d62c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d630:	e0bffd17 	ldw	r2,-12(fp)
1010d634:	10000616 	blt	r2,zero,1010d650 <read+0x3c>
1010d638:	e0bffd17 	ldw	r2,-12(fp)
1010d63c:	10c00324 	muli	r3,r2,12
1010d640:	00840474 	movhi	r2,4113
1010d644:	1080a804 	addi	r2,r2,672
1010d648:	1885883a 	add	r2,r3,r2
1010d64c:	00000106 	br	1010d654 <read+0x40>
1010d650:	0005883a 	mov	r2,zero
1010d654:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010d658:	e0bffb17 	ldw	r2,-20(fp)
1010d65c:	10002226 	beq	r2,zero,1010d6e8 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d660:	e0bffb17 	ldw	r2,-20(fp)
1010d664:	10800217 	ldw	r2,8(r2)
1010d668:	108000cc 	andi	r2,r2,3
1010d66c:	10800060 	cmpeqi	r2,r2,1
1010d670:	1000181e 	bne	r2,zero,1010d6d4 <read+0xc0>
        (fd->dev->read))
1010d674:	e0bffb17 	ldw	r2,-20(fp)
1010d678:	10800017 	ldw	r2,0(r2)
1010d67c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d680:	10001426 	beq	r2,zero,1010d6d4 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010d684:	e0bffb17 	ldw	r2,-20(fp)
1010d688:	10800017 	ldw	r2,0(r2)
1010d68c:	10800517 	ldw	r2,20(r2)
1010d690:	e0ffff17 	ldw	r3,-4(fp)
1010d694:	180d883a 	mov	r6,r3
1010d698:	e17ffe17 	ldw	r5,-8(fp)
1010d69c:	e13ffb17 	ldw	r4,-20(fp)
1010d6a0:	103ee83a 	callr	r2
1010d6a4:	e0bffc15 	stw	r2,-16(fp)
1010d6a8:	e0bffc17 	ldw	r2,-16(fp)
1010d6ac:	1000070e 	bge	r2,zero,1010d6cc <read+0xb8>
        {
          ALT_ERRNO = -rval;
1010d6b0:	010d5d80 	call	1010d5d8 <alt_get_errno>
1010d6b4:	1007883a 	mov	r3,r2
1010d6b8:	e0bffc17 	ldw	r2,-16(fp)
1010d6bc:	0085c83a 	sub	r2,zero,r2
1010d6c0:	18800015 	stw	r2,0(r3)
          return -1;
1010d6c4:	00bfffc4 	movi	r2,-1
1010d6c8:	00000c06 	br	1010d6fc <read+0xe8>
        }
        return rval;
1010d6cc:	e0bffc17 	ldw	r2,-16(fp)
1010d6d0:	00000a06 	br	1010d6fc <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010d6d4:	010d5d80 	call	1010d5d8 <alt_get_errno>
1010d6d8:	1007883a 	mov	r3,r2
1010d6dc:	00800344 	movi	r2,13
1010d6e0:	18800015 	stw	r2,0(r3)
1010d6e4:	00000406 	br	1010d6f8 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010d6e8:	010d5d80 	call	1010d5d8 <alt_get_errno>
1010d6ec:	1007883a 	mov	r3,r2
1010d6f0:	00801444 	movi	r2,81
1010d6f4:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010d6f8:	00bfffc4 	movi	r2,-1
}
1010d6fc:	e037883a 	mov	sp,fp
1010d700:	dfc00117 	ldw	ra,4(sp)
1010d704:	df000017 	ldw	fp,0(sp)
1010d708:	dec00204 	addi	sp,sp,8
1010d70c:	f800283a 	ret

1010d710 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010d710:	defffe04 	addi	sp,sp,-8
1010d714:	df000115 	stw	fp,4(sp)
1010d718:	df000104 	addi	fp,sp,4
1010d71c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
1010d720:	e0bfff17 	ldw	r2,-4(fp)
1010d724:	108000d0 	cmplti	r2,r2,3
1010d728:	10000d1e 	bne	r2,zero,1010d760 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
1010d72c:	00840474 	movhi	r2,4113
1010d730:	1080a804 	addi	r2,r2,672
1010d734:	e0ffff17 	ldw	r3,-4(fp)
1010d738:	18c00324 	muli	r3,r3,12
1010d73c:	10c5883a 	add	r2,r2,r3
1010d740:	10800204 	addi	r2,r2,8
1010d744:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010d748:	00840474 	movhi	r2,4113
1010d74c:	1080a804 	addi	r2,r2,672
1010d750:	e0ffff17 	ldw	r3,-4(fp)
1010d754:	18c00324 	muli	r3,r3,12
1010d758:	10c5883a 	add	r2,r2,r3
1010d75c:	10000015 	stw	zero,0(r2)
  }
}
1010d760:	0001883a 	nop
1010d764:	e037883a 	mov	sp,fp
1010d768:	df000017 	ldw	fp,0(sp)
1010d76c:	dec00104 	addi	sp,sp,4
1010d770:	f800283a 	ret

1010d774 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010d774:	defff904 	addi	sp,sp,-28
1010d778:	df000615 	stw	fp,24(sp)
1010d77c:	df000604 	addi	fp,sp,24
1010d780:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010d784:	0005303a 	rdctl	r2,status
1010d788:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010d78c:	e0fffe17 	ldw	r3,-8(fp)
1010d790:	00bfff84 	movi	r2,-2
1010d794:	1884703a 	and	r2,r3,r2
1010d798:	1001703a 	wrctl	status,r2
  
  return context;
1010d79c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010d7a0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010d7a4:	d0a00c17 	ldw	r2,-32720(gp)
1010d7a8:	10c000c4 	addi	r3,r2,3
1010d7ac:	00bfff04 	movi	r2,-4
1010d7b0:	1884703a 	and	r2,r3,r2
1010d7b4:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010d7b8:	d0e00c17 	ldw	r3,-32720(gp)
1010d7bc:	e0bfff17 	ldw	r2,-4(fp)
1010d7c0:	1887883a 	add	r3,r3,r2
1010d7c4:	008404b4 	movhi	r2,4114
1010d7c8:	10800004 	addi	r2,r2,0
1010d7cc:	10c0062e 	bgeu	r2,r3,1010d7e8 <sbrk+0x74>
1010d7d0:	e0bffb17 	ldw	r2,-20(fp)
1010d7d4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010d7d8:	e0bffa17 	ldw	r2,-24(fp)
1010d7dc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010d7e0:	00bfffc4 	movi	r2,-1
1010d7e4:	00000b06 	br	1010d814 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010d7e8:	d0a00c17 	ldw	r2,-32720(gp)
1010d7ec:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010d7f0:	d0e00c17 	ldw	r3,-32720(gp)
1010d7f4:	e0bfff17 	ldw	r2,-4(fp)
1010d7f8:	1885883a 	add	r2,r3,r2
1010d7fc:	d0a00c15 	stw	r2,-32720(gp)
1010d800:	e0bffb17 	ldw	r2,-20(fp)
1010d804:	e0bffc15 	stw	r2,-16(fp)
1010d808:	e0bffc17 	ldw	r2,-16(fp)
1010d80c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010d810:	e0bffd17 	ldw	r2,-12(fp)
} 
1010d814:	e037883a 	mov	sp,fp
1010d818:	df000017 	ldw	fp,0(sp)
1010d81c:	dec00104 	addi	sp,sp,4
1010d820:	f800283a 	ret

1010d824 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d824:	defffe04 	addi	sp,sp,-8
1010d828:	dfc00115 	stw	ra,4(sp)
1010d82c:	df000015 	stw	fp,0(sp)
1010d830:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d834:	d0a00b17 	ldw	r2,-32724(gp)
1010d838:	10000326 	beq	r2,zero,1010d848 <alt_get_errno+0x24>
1010d83c:	d0a00b17 	ldw	r2,-32724(gp)
1010d840:	103ee83a 	callr	r2
1010d844:	00000106 	br	1010d84c <alt_get_errno+0x28>
1010d848:	d0a6d104 	addi	r2,gp,-25788
}
1010d84c:	e037883a 	mov	sp,fp
1010d850:	dfc00117 	ldw	ra,4(sp)
1010d854:	df000017 	ldw	fp,0(sp)
1010d858:	dec00204 	addi	sp,sp,8
1010d85c:	f800283a 	ret

1010d860 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010d860:	defff904 	addi	sp,sp,-28
1010d864:	dfc00615 	stw	ra,24(sp)
1010d868:	df000515 	stw	fp,20(sp)
1010d86c:	df000504 	addi	fp,sp,20
1010d870:	e13ffd15 	stw	r4,-12(fp)
1010d874:	e17ffe15 	stw	r5,-8(fp)
1010d878:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d87c:	e0bffd17 	ldw	r2,-12(fp)
1010d880:	10000616 	blt	r2,zero,1010d89c <write+0x3c>
1010d884:	e0bffd17 	ldw	r2,-12(fp)
1010d888:	10c00324 	muli	r3,r2,12
1010d88c:	00840474 	movhi	r2,4113
1010d890:	1080a804 	addi	r2,r2,672
1010d894:	1885883a 	add	r2,r3,r2
1010d898:	00000106 	br	1010d8a0 <write+0x40>
1010d89c:	0005883a 	mov	r2,zero
1010d8a0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010d8a4:	e0bffb17 	ldw	r2,-20(fp)
1010d8a8:	10002126 	beq	r2,zero,1010d930 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010d8ac:	e0bffb17 	ldw	r2,-20(fp)
1010d8b0:	10800217 	ldw	r2,8(r2)
1010d8b4:	108000cc 	andi	r2,r2,3
1010d8b8:	10001826 	beq	r2,zero,1010d91c <write+0xbc>
1010d8bc:	e0bffb17 	ldw	r2,-20(fp)
1010d8c0:	10800017 	ldw	r2,0(r2)
1010d8c4:	10800617 	ldw	r2,24(r2)
1010d8c8:	10001426 	beq	r2,zero,1010d91c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010d8cc:	e0bffb17 	ldw	r2,-20(fp)
1010d8d0:	10800017 	ldw	r2,0(r2)
1010d8d4:	10800617 	ldw	r2,24(r2)
1010d8d8:	e0ffff17 	ldw	r3,-4(fp)
1010d8dc:	180d883a 	mov	r6,r3
1010d8e0:	e17ffe17 	ldw	r5,-8(fp)
1010d8e4:	e13ffb17 	ldw	r4,-20(fp)
1010d8e8:	103ee83a 	callr	r2
1010d8ec:	e0bffc15 	stw	r2,-16(fp)
1010d8f0:	e0bffc17 	ldw	r2,-16(fp)
1010d8f4:	1000070e 	bge	r2,zero,1010d914 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1010d8f8:	010d8240 	call	1010d824 <alt_get_errno>
1010d8fc:	1007883a 	mov	r3,r2
1010d900:	e0bffc17 	ldw	r2,-16(fp)
1010d904:	0085c83a 	sub	r2,zero,r2
1010d908:	18800015 	stw	r2,0(r3)
        return -1;
1010d90c:	00bfffc4 	movi	r2,-1
1010d910:	00000c06 	br	1010d944 <write+0xe4>
      }
      return rval;
1010d914:	e0bffc17 	ldw	r2,-16(fp)
1010d918:	00000a06 	br	1010d944 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010d91c:	010d8240 	call	1010d824 <alt_get_errno>
1010d920:	1007883a 	mov	r3,r2
1010d924:	00800344 	movi	r2,13
1010d928:	18800015 	stw	r2,0(r3)
1010d92c:	00000406 	br	1010d940 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010d930:	010d8240 	call	1010d824 <alt_get_errno>
1010d934:	1007883a 	mov	r3,r2
1010d938:	00801444 	movi	r2,81
1010d93c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010d940:	00bfffc4 	movi	r2,-1
}
1010d944:	e037883a 	mov	sp,fp
1010d948:	dfc00117 	ldw	ra,4(sp)
1010d94c:	df000017 	ldw	fp,0(sp)
1010d950:	dec00204 	addi	sp,sp,8
1010d954:	f800283a 	ret

1010d958 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010d958:	defffd04 	addi	sp,sp,-12
1010d95c:	dfc00215 	stw	ra,8(sp)
1010d960:	df000115 	stw	fp,4(sp)
1010d964:	df000104 	addi	fp,sp,4
1010d968:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010d96c:	d1600804 	addi	r5,gp,-32736
1010d970:	e13fff17 	ldw	r4,-4(fp)
1010d974:	010e6240 	call	1010e624 <alt_dev_llist_insert>
}
1010d978:	e037883a 	mov	sp,fp
1010d97c:	dfc00117 	ldw	ra,4(sp)
1010d980:	df000017 	ldw	fp,0(sp)
1010d984:	dec00204 	addi	sp,sp,8
1010d988:	f800283a 	ret

1010d98c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010d98c:	defffd04 	addi	sp,sp,-12
1010d990:	dfc00215 	stw	ra,8(sp)
1010d994:	df000115 	stw	fp,4(sp)
1010d998:	df000104 	addi	fp,sp,4
1010d99c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010d9a0:	010ef940 	call	1010ef94 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010d9a4:	00800044 	movi	r2,1
1010d9a8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010d9ac:	0001883a 	nop
1010d9b0:	e037883a 	mov	sp,fp
1010d9b4:	dfc00117 	ldw	ra,4(sp)
1010d9b8:	df000017 	ldw	fp,0(sp)
1010d9bc:	dec00204 	addi	sp,sp,8
1010d9c0:	f800283a 	ret

1010d9c4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010d9c4:	defffe04 	addi	sp,sp,-8
1010d9c8:	dfc00115 	stw	ra,4(sp)
1010d9cc:	df000015 	stw	fp,0(sp)
1010d9d0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010d9d4:	000d883a 	mov	r6,zero
1010d9d8:	000b883a 	mov	r5,zero
1010d9dc:	01040474 	movhi	r4,4113
1010d9e0:	21011204 	addi	r4,r4,1096
1010d9e4:	010db700 	call	1010db70 <altera_avalon_jtag_uart_init>
1010d9e8:	01040474 	movhi	r4,4113
1010d9ec:	21010804 	addi	r4,r4,1056
1010d9f0:	010d9580 	call	1010d958 <alt_dev_reg>
}
1010d9f4:	0001883a 	nop
1010d9f8:	e037883a 	mov	sp,fp
1010d9fc:	dfc00117 	ldw	ra,4(sp)
1010da00:	df000017 	ldw	fp,0(sp)
1010da04:	dec00204 	addi	sp,sp,8
1010da08:	f800283a 	ret

1010da0c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010da0c:	defffa04 	addi	sp,sp,-24
1010da10:	dfc00515 	stw	ra,20(sp)
1010da14:	df000415 	stw	fp,16(sp)
1010da18:	df000404 	addi	fp,sp,16
1010da1c:	e13ffd15 	stw	r4,-12(fp)
1010da20:	e17ffe15 	stw	r5,-8(fp)
1010da24:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010da28:	e0bffd17 	ldw	r2,-12(fp)
1010da2c:	10800017 	ldw	r2,0(r2)
1010da30:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010da34:	e0bffc17 	ldw	r2,-16(fp)
1010da38:	10c00a04 	addi	r3,r2,40
1010da3c:	e0bffd17 	ldw	r2,-12(fp)
1010da40:	10800217 	ldw	r2,8(r2)
1010da44:	100f883a 	mov	r7,r2
1010da48:	e1bfff17 	ldw	r6,-4(fp)
1010da4c:	e17ffe17 	ldw	r5,-8(fp)
1010da50:	1809883a 	mov	r4,r3
1010da54:	010e0340 	call	1010e034 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010da58:	e037883a 	mov	sp,fp
1010da5c:	dfc00117 	ldw	ra,4(sp)
1010da60:	df000017 	ldw	fp,0(sp)
1010da64:	dec00204 	addi	sp,sp,8
1010da68:	f800283a 	ret

1010da6c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010da6c:	defffa04 	addi	sp,sp,-24
1010da70:	dfc00515 	stw	ra,20(sp)
1010da74:	df000415 	stw	fp,16(sp)
1010da78:	df000404 	addi	fp,sp,16
1010da7c:	e13ffd15 	stw	r4,-12(fp)
1010da80:	e17ffe15 	stw	r5,-8(fp)
1010da84:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010da88:	e0bffd17 	ldw	r2,-12(fp)
1010da8c:	10800017 	ldw	r2,0(r2)
1010da90:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010da94:	e0bffc17 	ldw	r2,-16(fp)
1010da98:	10c00a04 	addi	r3,r2,40
1010da9c:	e0bffd17 	ldw	r2,-12(fp)
1010daa0:	10800217 	ldw	r2,8(r2)
1010daa4:	100f883a 	mov	r7,r2
1010daa8:	e1bfff17 	ldw	r6,-4(fp)
1010daac:	e17ffe17 	ldw	r5,-8(fp)
1010dab0:	1809883a 	mov	r4,r3
1010dab4:	010e2500 	call	1010e250 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010dab8:	e037883a 	mov	sp,fp
1010dabc:	dfc00117 	ldw	ra,4(sp)
1010dac0:	df000017 	ldw	fp,0(sp)
1010dac4:	dec00204 	addi	sp,sp,8
1010dac8:	f800283a 	ret

1010dacc <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010dacc:	defffc04 	addi	sp,sp,-16
1010dad0:	dfc00315 	stw	ra,12(sp)
1010dad4:	df000215 	stw	fp,8(sp)
1010dad8:	df000204 	addi	fp,sp,8
1010dadc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010dae0:	e0bfff17 	ldw	r2,-4(fp)
1010dae4:	10800017 	ldw	r2,0(r2)
1010dae8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010daec:	e0bffe17 	ldw	r2,-8(fp)
1010daf0:	10c00a04 	addi	r3,r2,40
1010daf4:	e0bfff17 	ldw	r2,-4(fp)
1010daf8:	10800217 	ldw	r2,8(r2)
1010dafc:	100b883a 	mov	r5,r2
1010db00:	1809883a 	mov	r4,r3
1010db04:	010dedc0 	call	1010dedc <altera_avalon_jtag_uart_close>
}
1010db08:	e037883a 	mov	sp,fp
1010db0c:	dfc00117 	ldw	ra,4(sp)
1010db10:	df000017 	ldw	fp,0(sp)
1010db14:	dec00204 	addi	sp,sp,8
1010db18:	f800283a 	ret

1010db1c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010db1c:	defffa04 	addi	sp,sp,-24
1010db20:	dfc00515 	stw	ra,20(sp)
1010db24:	df000415 	stw	fp,16(sp)
1010db28:	df000404 	addi	fp,sp,16
1010db2c:	e13ffd15 	stw	r4,-12(fp)
1010db30:	e17ffe15 	stw	r5,-8(fp)
1010db34:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010db38:	e0bffd17 	ldw	r2,-12(fp)
1010db3c:	10800017 	ldw	r2,0(r2)
1010db40:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010db44:	e0bffc17 	ldw	r2,-16(fp)
1010db48:	10800a04 	addi	r2,r2,40
1010db4c:	e1bfff17 	ldw	r6,-4(fp)
1010db50:	e17ffe17 	ldw	r5,-8(fp)
1010db54:	1009883a 	mov	r4,r2
1010db58:	010df440 	call	1010df44 <altera_avalon_jtag_uart_ioctl>
}
1010db5c:	e037883a 	mov	sp,fp
1010db60:	dfc00117 	ldw	ra,4(sp)
1010db64:	df000017 	ldw	fp,0(sp)
1010db68:	dec00204 	addi	sp,sp,8
1010db6c:	f800283a 	ret

1010db70 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010db70:	defffa04 	addi	sp,sp,-24
1010db74:	dfc00515 	stw	ra,20(sp)
1010db78:	df000415 	stw	fp,16(sp)
1010db7c:	df000404 	addi	fp,sp,16
1010db80:	e13ffd15 	stw	r4,-12(fp)
1010db84:	e17ffe15 	stw	r5,-8(fp)
1010db88:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010db8c:	e0bffd17 	ldw	r2,-12(fp)
1010db90:	00c00044 	movi	r3,1
1010db94:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010db98:	e0bffd17 	ldw	r2,-12(fp)
1010db9c:	10800017 	ldw	r2,0(r2)
1010dba0:	10800104 	addi	r2,r2,4
1010dba4:	1007883a 	mov	r3,r2
1010dba8:	e0bffd17 	ldw	r2,-12(fp)
1010dbac:	10800817 	ldw	r2,32(r2)
1010dbb0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010dbb4:	e0bffe17 	ldw	r2,-8(fp)
1010dbb8:	e0ffff17 	ldw	r3,-4(fp)
1010dbbc:	d8000015 	stw	zero,0(sp)
1010dbc0:	e1fffd17 	ldw	r7,-12(fp)
1010dbc4:	01840474 	movhi	r6,4113
1010dbc8:	31b70c04 	addi	r6,r6,-9168
1010dbcc:	180b883a 	mov	r5,r3
1010dbd0:	1009883a 	mov	r4,r2
1010dbd4:	010e7bc0 	call	1010e7bc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010dbd8:	e0bffd17 	ldw	r2,-12(fp)
1010dbdc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010dbe0:	e0bffd17 	ldw	r2,-12(fp)
1010dbe4:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010dbe8:	d0e6d617 	ldw	r3,-25768(gp)
1010dbec:	e1fffd17 	ldw	r7,-12(fp)
1010dbf0:	01840474 	movhi	r6,4113
1010dbf4:	31b78f04 	addi	r6,r6,-8644
1010dbf8:	180b883a 	mov	r5,r3
1010dbfc:	1009883a 	mov	r4,r2
1010dc00:	010e4740 	call	1010e474 <alt_alarm_start>
1010dc04:	1000040e 	bge	r2,zero,1010dc18 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010dc08:	e0fffd17 	ldw	r3,-12(fp)
1010dc0c:	00a00034 	movhi	r2,32768
1010dc10:	10bfffc4 	addi	r2,r2,-1
1010dc14:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010dc18:	0001883a 	nop
1010dc1c:	e037883a 	mov	sp,fp
1010dc20:	dfc00117 	ldw	ra,4(sp)
1010dc24:	df000017 	ldw	fp,0(sp)
1010dc28:	dec00204 	addi	sp,sp,8
1010dc2c:	f800283a 	ret

1010dc30 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010dc30:	defff804 	addi	sp,sp,-32
1010dc34:	df000715 	stw	fp,28(sp)
1010dc38:	df000704 	addi	fp,sp,28
1010dc3c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010dc40:	e0bfff17 	ldw	r2,-4(fp)
1010dc44:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010dc48:	e0bffb17 	ldw	r2,-20(fp)
1010dc4c:	10800017 	ldw	r2,0(r2)
1010dc50:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010dc54:	e0bffc17 	ldw	r2,-16(fp)
1010dc58:	10800104 	addi	r2,r2,4
1010dc5c:	10800037 	ldwio	r2,0(r2)
1010dc60:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010dc64:	e0bffd17 	ldw	r2,-12(fp)
1010dc68:	1080c00c 	andi	r2,r2,768
1010dc6c:	10006d26 	beq	r2,zero,1010de24 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010dc70:	e0bffd17 	ldw	r2,-12(fp)
1010dc74:	1080400c 	andi	r2,r2,256
1010dc78:	10003526 	beq	r2,zero,1010dd50 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010dc7c:	00800074 	movhi	r2,1
1010dc80:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dc84:	e0bffb17 	ldw	r2,-20(fp)
1010dc88:	10800a17 	ldw	r2,40(r2)
1010dc8c:	10800044 	addi	r2,r2,1
1010dc90:	1081ffcc 	andi	r2,r2,2047
1010dc94:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010dc98:	e0bffb17 	ldw	r2,-20(fp)
1010dc9c:	10c00b17 	ldw	r3,44(r2)
1010dca0:	e0bffe17 	ldw	r2,-8(fp)
1010dca4:	18801526 	beq	r3,r2,1010dcfc <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010dca8:	e0bffc17 	ldw	r2,-16(fp)
1010dcac:	10800037 	ldwio	r2,0(r2)
1010dcb0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010dcb4:	e0bff917 	ldw	r2,-28(fp)
1010dcb8:	10a0000c 	andi	r2,r2,32768
1010dcbc:	10001126 	beq	r2,zero,1010dd04 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010dcc0:	e0bffb17 	ldw	r2,-20(fp)
1010dcc4:	10800a17 	ldw	r2,40(r2)
1010dcc8:	e0fff917 	ldw	r3,-28(fp)
1010dccc:	1809883a 	mov	r4,r3
1010dcd0:	e0fffb17 	ldw	r3,-20(fp)
1010dcd4:	1885883a 	add	r2,r3,r2
1010dcd8:	10800e04 	addi	r2,r2,56
1010dcdc:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dce0:	e0bffb17 	ldw	r2,-20(fp)
1010dce4:	10800a17 	ldw	r2,40(r2)
1010dce8:	10800044 	addi	r2,r2,1
1010dcec:	10c1ffcc 	andi	r3,r2,2047
1010dcf0:	e0bffb17 	ldw	r2,-20(fp)
1010dcf4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010dcf8:	003fe206 	br	1010dc84 <__alt_data_end+0xfffedc84>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010dcfc:	0001883a 	nop
1010dd00:	00000106 	br	1010dd08 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010dd04:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010dd08:	e0bff917 	ldw	r2,-28(fp)
1010dd0c:	10bfffec 	andhi	r2,r2,65535
1010dd10:	10000f26 	beq	r2,zero,1010dd50 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010dd14:	e0bffb17 	ldw	r2,-20(fp)
1010dd18:	10c00817 	ldw	r3,32(r2)
1010dd1c:	00bfff84 	movi	r2,-2
1010dd20:	1886703a 	and	r3,r3,r2
1010dd24:	e0bffb17 	ldw	r2,-20(fp)
1010dd28:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010dd2c:	e0bffc17 	ldw	r2,-16(fp)
1010dd30:	10800104 	addi	r2,r2,4
1010dd34:	1007883a 	mov	r3,r2
1010dd38:	e0bffb17 	ldw	r2,-20(fp)
1010dd3c:	10800817 	ldw	r2,32(r2)
1010dd40:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010dd44:	e0bffc17 	ldw	r2,-16(fp)
1010dd48:	10800104 	addi	r2,r2,4
1010dd4c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010dd50:	e0bffd17 	ldw	r2,-12(fp)
1010dd54:	1080800c 	andi	r2,r2,512
1010dd58:	103fbe26 	beq	r2,zero,1010dc54 <__alt_data_end+0xfffedc54>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010dd5c:	e0bffd17 	ldw	r2,-12(fp)
1010dd60:	1004d43a 	srli	r2,r2,16
1010dd64:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010dd68:	00001406 	br	1010ddbc <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010dd6c:	e0bffc17 	ldw	r2,-16(fp)
1010dd70:	e0fffb17 	ldw	r3,-20(fp)
1010dd74:	18c00d17 	ldw	r3,52(r3)
1010dd78:	e13ffb17 	ldw	r4,-20(fp)
1010dd7c:	20c7883a 	add	r3,r4,r3
1010dd80:	18c20e04 	addi	r3,r3,2104
1010dd84:	18c00003 	ldbu	r3,0(r3)
1010dd88:	18c03fcc 	andi	r3,r3,255
1010dd8c:	18c0201c 	xori	r3,r3,128
1010dd90:	18ffe004 	addi	r3,r3,-128
1010dd94:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dd98:	e0bffb17 	ldw	r2,-20(fp)
1010dd9c:	10800d17 	ldw	r2,52(r2)
1010dda0:	10800044 	addi	r2,r2,1
1010dda4:	10c1ffcc 	andi	r3,r2,2047
1010dda8:	e0bffb17 	ldw	r2,-20(fp)
1010ddac:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010ddb0:	e0bffa17 	ldw	r2,-24(fp)
1010ddb4:	10bfffc4 	addi	r2,r2,-1
1010ddb8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010ddbc:	e0bffa17 	ldw	r2,-24(fp)
1010ddc0:	10000526 	beq	r2,zero,1010ddd8 <altera_avalon_jtag_uart_irq+0x1a8>
1010ddc4:	e0bffb17 	ldw	r2,-20(fp)
1010ddc8:	10c00d17 	ldw	r3,52(r2)
1010ddcc:	e0bffb17 	ldw	r2,-20(fp)
1010ddd0:	10800c17 	ldw	r2,48(r2)
1010ddd4:	18bfe51e 	bne	r3,r2,1010dd6c <__alt_data_end+0xfffedd6c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010ddd8:	e0bffa17 	ldw	r2,-24(fp)
1010dddc:	103f9d26 	beq	r2,zero,1010dc54 <__alt_data_end+0xfffedc54>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010dde0:	e0bffb17 	ldw	r2,-20(fp)
1010dde4:	10c00817 	ldw	r3,32(r2)
1010dde8:	00bfff44 	movi	r2,-3
1010ddec:	1886703a 	and	r3,r3,r2
1010ddf0:	e0bffb17 	ldw	r2,-20(fp)
1010ddf4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010ddf8:	e0bffb17 	ldw	r2,-20(fp)
1010ddfc:	10800017 	ldw	r2,0(r2)
1010de00:	10800104 	addi	r2,r2,4
1010de04:	1007883a 	mov	r3,r2
1010de08:	e0bffb17 	ldw	r2,-20(fp)
1010de0c:	10800817 	ldw	r2,32(r2)
1010de10:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010de14:	e0bffc17 	ldw	r2,-16(fp)
1010de18:	10800104 	addi	r2,r2,4
1010de1c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010de20:	003f8c06 	br	1010dc54 <__alt_data_end+0xfffedc54>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010de24:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010de28:	0001883a 	nop
1010de2c:	e037883a 	mov	sp,fp
1010de30:	df000017 	ldw	fp,0(sp)
1010de34:	dec00104 	addi	sp,sp,4
1010de38:	f800283a 	ret

1010de3c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010de3c:	defff804 	addi	sp,sp,-32
1010de40:	df000715 	stw	fp,28(sp)
1010de44:	df000704 	addi	fp,sp,28
1010de48:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010de4c:	e0bffb17 	ldw	r2,-20(fp)
1010de50:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010de54:	e0bff917 	ldw	r2,-28(fp)
1010de58:	10800017 	ldw	r2,0(r2)
1010de5c:	10800104 	addi	r2,r2,4
1010de60:	10800037 	ldwio	r2,0(r2)
1010de64:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010de68:	e0bffa17 	ldw	r2,-24(fp)
1010de6c:	1081000c 	andi	r2,r2,1024
1010de70:	10000b26 	beq	r2,zero,1010dea0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010de74:	e0bff917 	ldw	r2,-28(fp)
1010de78:	10800017 	ldw	r2,0(r2)
1010de7c:	10800104 	addi	r2,r2,4
1010de80:	1007883a 	mov	r3,r2
1010de84:	e0bff917 	ldw	r2,-28(fp)
1010de88:	10800817 	ldw	r2,32(r2)
1010de8c:	10810014 	ori	r2,r2,1024
1010de90:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010de94:	e0bff917 	ldw	r2,-28(fp)
1010de98:	10000915 	stw	zero,36(r2)
1010de9c:	00000a06 	br	1010dec8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010dea0:	e0bff917 	ldw	r2,-28(fp)
1010dea4:	10c00917 	ldw	r3,36(r2)
1010dea8:	00a00034 	movhi	r2,32768
1010deac:	10bfff04 	addi	r2,r2,-4
1010deb0:	10c00536 	bltu	r2,r3,1010dec8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010deb4:	e0bff917 	ldw	r2,-28(fp)
1010deb8:	10800917 	ldw	r2,36(r2)
1010debc:	10c00044 	addi	r3,r2,1
1010dec0:	e0bff917 	ldw	r2,-28(fp)
1010dec4:	10c00915 	stw	r3,36(r2)
1010dec8:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010decc:	e037883a 	mov	sp,fp
1010ded0:	df000017 	ldw	fp,0(sp)
1010ded4:	dec00104 	addi	sp,sp,4
1010ded8:	f800283a 	ret

1010dedc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010dedc:	defffd04 	addi	sp,sp,-12
1010dee0:	df000215 	stw	fp,8(sp)
1010dee4:	df000204 	addi	fp,sp,8
1010dee8:	e13ffe15 	stw	r4,-8(fp)
1010deec:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010def0:	00000506 	br	1010df08 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010def4:	e0bfff17 	ldw	r2,-4(fp)
1010def8:	1090000c 	andi	r2,r2,16384
1010defc:	10000226 	beq	r2,zero,1010df08 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010df00:	00bffd44 	movi	r2,-11
1010df04:	00000b06 	br	1010df34 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010df08:	e0bffe17 	ldw	r2,-8(fp)
1010df0c:	10c00d17 	ldw	r3,52(r2)
1010df10:	e0bffe17 	ldw	r2,-8(fp)
1010df14:	10800c17 	ldw	r2,48(r2)
1010df18:	18800526 	beq	r3,r2,1010df30 <altera_avalon_jtag_uart_close+0x54>
1010df1c:	e0bffe17 	ldw	r2,-8(fp)
1010df20:	10c00917 	ldw	r3,36(r2)
1010df24:	e0bffe17 	ldw	r2,-8(fp)
1010df28:	10800117 	ldw	r2,4(r2)
1010df2c:	18bff136 	bltu	r3,r2,1010def4 <__alt_data_end+0xfffedef4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010df30:	0005883a 	mov	r2,zero
}
1010df34:	e037883a 	mov	sp,fp
1010df38:	df000017 	ldw	fp,0(sp)
1010df3c:	dec00104 	addi	sp,sp,4
1010df40:	f800283a 	ret

1010df44 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010df44:	defffa04 	addi	sp,sp,-24
1010df48:	df000515 	stw	fp,20(sp)
1010df4c:	df000504 	addi	fp,sp,20
1010df50:	e13ffd15 	stw	r4,-12(fp)
1010df54:	e17ffe15 	stw	r5,-8(fp)
1010df58:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010df5c:	00bff9c4 	movi	r2,-25
1010df60:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010df64:	e0bffe17 	ldw	r2,-8(fp)
1010df68:	10da8060 	cmpeqi	r3,r2,27137
1010df6c:	1800031e 	bne	r3,zero,1010df7c <altera_avalon_jtag_uart_ioctl+0x38>
1010df70:	109a80a0 	cmpeqi	r2,r2,27138
1010df74:	1000181e 	bne	r2,zero,1010dfd8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010df78:	00002906 	br	1010e020 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010df7c:	e0bffd17 	ldw	r2,-12(fp)
1010df80:	10c00117 	ldw	r3,4(r2)
1010df84:	00a00034 	movhi	r2,32768
1010df88:	10bfffc4 	addi	r2,r2,-1
1010df8c:	18802126 	beq	r3,r2,1010e014 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010df90:	e0bfff17 	ldw	r2,-4(fp)
1010df94:	10800017 	ldw	r2,0(r2)
1010df98:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010df9c:	e0bffc17 	ldw	r2,-16(fp)
1010dfa0:	10800090 	cmplti	r2,r2,2
1010dfa4:	1000061e 	bne	r2,zero,1010dfc0 <altera_avalon_jtag_uart_ioctl+0x7c>
1010dfa8:	e0fffc17 	ldw	r3,-16(fp)
1010dfac:	00a00034 	movhi	r2,32768
1010dfb0:	10bfffc4 	addi	r2,r2,-1
1010dfb4:	18800226 	beq	r3,r2,1010dfc0 <altera_avalon_jtag_uart_ioctl+0x7c>
1010dfb8:	e0bffc17 	ldw	r2,-16(fp)
1010dfbc:	00000206 	br	1010dfc8 <altera_avalon_jtag_uart_ioctl+0x84>
1010dfc0:	00a00034 	movhi	r2,32768
1010dfc4:	10bfff84 	addi	r2,r2,-2
1010dfc8:	e0fffd17 	ldw	r3,-12(fp)
1010dfcc:	18800115 	stw	r2,4(r3)
      rc = 0;
1010dfd0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010dfd4:	00000f06 	br	1010e014 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010dfd8:	e0bffd17 	ldw	r2,-12(fp)
1010dfdc:	10c00117 	ldw	r3,4(r2)
1010dfe0:	00a00034 	movhi	r2,32768
1010dfe4:	10bfffc4 	addi	r2,r2,-1
1010dfe8:	18800c26 	beq	r3,r2,1010e01c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010dfec:	e0bffd17 	ldw	r2,-12(fp)
1010dff0:	10c00917 	ldw	r3,36(r2)
1010dff4:	e0bffd17 	ldw	r2,-12(fp)
1010dff8:	10800117 	ldw	r2,4(r2)
1010dffc:	1885803a 	cmpltu	r2,r3,r2
1010e000:	10c03fcc 	andi	r3,r2,255
1010e004:	e0bfff17 	ldw	r2,-4(fp)
1010e008:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010e00c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e010:	00000206 	br	1010e01c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010e014:	0001883a 	nop
1010e018:	00000106 	br	1010e020 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010e01c:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010e020:	e0bffb17 	ldw	r2,-20(fp)
}
1010e024:	e037883a 	mov	sp,fp
1010e028:	df000017 	ldw	fp,0(sp)
1010e02c:	dec00104 	addi	sp,sp,4
1010e030:	f800283a 	ret

1010e034 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010e034:	defff304 	addi	sp,sp,-52
1010e038:	dfc00c15 	stw	ra,48(sp)
1010e03c:	df000b15 	stw	fp,44(sp)
1010e040:	df000b04 	addi	fp,sp,44
1010e044:	e13ffc15 	stw	r4,-16(fp)
1010e048:	e17ffd15 	stw	r5,-12(fp)
1010e04c:	e1bffe15 	stw	r6,-8(fp)
1010e050:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010e054:	e0bffd17 	ldw	r2,-12(fp)
1010e058:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e05c:	00004706 	br	1010e17c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010e060:	e0bffc17 	ldw	r2,-16(fp)
1010e064:	10800a17 	ldw	r2,40(r2)
1010e068:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010e06c:	e0bffc17 	ldw	r2,-16(fp)
1010e070:	10800b17 	ldw	r2,44(r2)
1010e074:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010e078:	e0fff717 	ldw	r3,-36(fp)
1010e07c:	e0bff817 	ldw	r2,-32(fp)
1010e080:	18800536 	bltu	r3,r2,1010e098 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010e084:	e0fff717 	ldw	r3,-36(fp)
1010e088:	e0bff817 	ldw	r2,-32(fp)
1010e08c:	1885c83a 	sub	r2,r3,r2
1010e090:	e0bff615 	stw	r2,-40(fp)
1010e094:	00000406 	br	1010e0a8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010e098:	00c20004 	movi	r3,2048
1010e09c:	e0bff817 	ldw	r2,-32(fp)
1010e0a0:	1885c83a 	sub	r2,r3,r2
1010e0a4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e0a8:	e0bff617 	ldw	r2,-40(fp)
1010e0ac:	10001e26 	beq	r2,zero,1010e128 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010e0b0:	e0fffe17 	ldw	r3,-8(fp)
1010e0b4:	e0bff617 	ldw	r2,-40(fp)
1010e0b8:	1880022e 	bgeu	r3,r2,1010e0c4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010e0bc:	e0bffe17 	ldw	r2,-8(fp)
1010e0c0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010e0c4:	e0bffc17 	ldw	r2,-16(fp)
1010e0c8:	10c00e04 	addi	r3,r2,56
1010e0cc:	e0bff817 	ldw	r2,-32(fp)
1010e0d0:	1885883a 	add	r2,r3,r2
1010e0d4:	e1bff617 	ldw	r6,-40(fp)
1010e0d8:	100b883a 	mov	r5,r2
1010e0dc:	e13ff517 	ldw	r4,-44(fp)
1010e0e0:	01061c00 	call	101061c0 <memcpy>
      ptr   += n;
1010e0e4:	e0fff517 	ldw	r3,-44(fp)
1010e0e8:	e0bff617 	ldw	r2,-40(fp)
1010e0ec:	1885883a 	add	r2,r3,r2
1010e0f0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010e0f4:	e0fffe17 	ldw	r3,-8(fp)
1010e0f8:	e0bff617 	ldw	r2,-40(fp)
1010e0fc:	1885c83a 	sub	r2,r3,r2
1010e100:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e104:	e0fff817 	ldw	r3,-32(fp)
1010e108:	e0bff617 	ldw	r2,-40(fp)
1010e10c:	1885883a 	add	r2,r3,r2
1010e110:	10c1ffcc 	andi	r3,r2,2047
1010e114:	e0bffc17 	ldw	r2,-16(fp)
1010e118:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010e11c:	e0bffe17 	ldw	r2,-8(fp)
1010e120:	00bfcf16 	blt	zero,r2,1010e060 <__alt_data_end+0xfffee060>
1010e124:	00000106 	br	1010e12c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010e128:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010e12c:	e0fff517 	ldw	r3,-44(fp)
1010e130:	e0bffd17 	ldw	r2,-12(fp)
1010e134:	1880141e 	bne	r3,r2,1010e188 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010e138:	e0bfff17 	ldw	r2,-4(fp)
1010e13c:	1090000c 	andi	r2,r2,16384
1010e140:	1000131e 	bne	r2,zero,1010e190 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010e144:	0001883a 	nop
1010e148:	e0bffc17 	ldw	r2,-16(fp)
1010e14c:	10c00a17 	ldw	r3,40(r2)
1010e150:	e0bff717 	ldw	r2,-36(fp)
1010e154:	1880051e 	bne	r3,r2,1010e16c <altera_avalon_jtag_uart_read+0x138>
1010e158:	e0bffc17 	ldw	r2,-16(fp)
1010e15c:	10c00917 	ldw	r3,36(r2)
1010e160:	e0bffc17 	ldw	r2,-16(fp)
1010e164:	10800117 	ldw	r2,4(r2)
1010e168:	18bff736 	bltu	r3,r2,1010e148 <__alt_data_end+0xfffee148>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010e16c:	e0bffc17 	ldw	r2,-16(fp)
1010e170:	10c00a17 	ldw	r3,40(r2)
1010e174:	e0bff717 	ldw	r2,-36(fp)
1010e178:	18800726 	beq	r3,r2,1010e198 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e17c:	e0bffe17 	ldw	r2,-8(fp)
1010e180:	00bfb716 	blt	zero,r2,1010e060 <__alt_data_end+0xfffee060>
1010e184:	00000506 	br	1010e19c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010e188:	0001883a 	nop
1010e18c:	00000306 	br	1010e19c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010e190:	0001883a 	nop
1010e194:	00000106 	br	1010e19c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010e198:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010e19c:	e0fff517 	ldw	r3,-44(fp)
1010e1a0:	e0bffd17 	ldw	r2,-12(fp)
1010e1a4:	18801826 	beq	r3,r2,1010e208 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e1a8:	0005303a 	rdctl	r2,status
1010e1ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e1b0:	e0fffb17 	ldw	r3,-20(fp)
1010e1b4:	00bfff84 	movi	r2,-2
1010e1b8:	1884703a 	and	r2,r3,r2
1010e1bc:	1001703a 	wrctl	status,r2
  
  return context;
1010e1c0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010e1c4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e1c8:	e0bffc17 	ldw	r2,-16(fp)
1010e1cc:	10800817 	ldw	r2,32(r2)
1010e1d0:	10c00054 	ori	r3,r2,1
1010e1d4:	e0bffc17 	ldw	r2,-16(fp)
1010e1d8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e1dc:	e0bffc17 	ldw	r2,-16(fp)
1010e1e0:	10800017 	ldw	r2,0(r2)
1010e1e4:	10800104 	addi	r2,r2,4
1010e1e8:	1007883a 	mov	r3,r2
1010e1ec:	e0bffc17 	ldw	r2,-16(fp)
1010e1f0:	10800817 	ldw	r2,32(r2)
1010e1f4:	18800035 	stwio	r2,0(r3)
1010e1f8:	e0bffa17 	ldw	r2,-24(fp)
1010e1fc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e200:	e0bff917 	ldw	r2,-28(fp)
1010e204:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010e208:	e0fff517 	ldw	r3,-44(fp)
1010e20c:	e0bffd17 	ldw	r2,-12(fp)
1010e210:	18800426 	beq	r3,r2,1010e224 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010e214:	e0fff517 	ldw	r3,-44(fp)
1010e218:	e0bffd17 	ldw	r2,-12(fp)
1010e21c:	1885c83a 	sub	r2,r3,r2
1010e220:	00000606 	br	1010e23c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010e224:	e0bfff17 	ldw	r2,-4(fp)
1010e228:	1090000c 	andi	r2,r2,16384
1010e22c:	10000226 	beq	r2,zero,1010e238 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010e230:	00bffd44 	movi	r2,-11
1010e234:	00000106 	br	1010e23c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010e238:	00bffec4 	movi	r2,-5
}
1010e23c:	e037883a 	mov	sp,fp
1010e240:	dfc00117 	ldw	ra,4(sp)
1010e244:	df000017 	ldw	fp,0(sp)
1010e248:	dec00204 	addi	sp,sp,8
1010e24c:	f800283a 	ret

1010e250 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010e250:	defff304 	addi	sp,sp,-52
1010e254:	dfc00c15 	stw	ra,48(sp)
1010e258:	df000b15 	stw	fp,44(sp)
1010e25c:	df000b04 	addi	fp,sp,44
1010e260:	e13ffc15 	stw	r4,-16(fp)
1010e264:	e17ffd15 	stw	r5,-12(fp)
1010e268:	e1bffe15 	stw	r6,-8(fp)
1010e26c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010e270:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010e274:	e0bffd17 	ldw	r2,-12(fp)
1010e278:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e27c:	00003706 	br	1010e35c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010e280:	e0bffc17 	ldw	r2,-16(fp)
1010e284:	10800c17 	ldw	r2,48(r2)
1010e288:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010e28c:	e0bffc17 	ldw	r2,-16(fp)
1010e290:	10800d17 	ldw	r2,52(r2)
1010e294:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010e298:	e0fff917 	ldw	r3,-28(fp)
1010e29c:	e0bff517 	ldw	r2,-44(fp)
1010e2a0:	1880062e 	bgeu	r3,r2,1010e2bc <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010e2a4:	e0fff517 	ldw	r3,-44(fp)
1010e2a8:	e0bff917 	ldw	r2,-28(fp)
1010e2ac:	1885c83a 	sub	r2,r3,r2
1010e2b0:	10bfffc4 	addi	r2,r2,-1
1010e2b4:	e0bff615 	stw	r2,-40(fp)
1010e2b8:	00000b06 	br	1010e2e8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010e2bc:	e0bff517 	ldw	r2,-44(fp)
1010e2c0:	10000526 	beq	r2,zero,1010e2d8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010e2c4:	00c20004 	movi	r3,2048
1010e2c8:	e0bff917 	ldw	r2,-28(fp)
1010e2cc:	1885c83a 	sub	r2,r3,r2
1010e2d0:	e0bff615 	stw	r2,-40(fp)
1010e2d4:	00000406 	br	1010e2e8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010e2d8:	00c1ffc4 	movi	r3,2047
1010e2dc:	e0bff917 	ldw	r2,-28(fp)
1010e2e0:	1885c83a 	sub	r2,r3,r2
1010e2e4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e2e8:	e0bff617 	ldw	r2,-40(fp)
1010e2ec:	10001e26 	beq	r2,zero,1010e368 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010e2f0:	e0fffe17 	ldw	r3,-8(fp)
1010e2f4:	e0bff617 	ldw	r2,-40(fp)
1010e2f8:	1880022e 	bgeu	r3,r2,1010e304 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010e2fc:	e0bffe17 	ldw	r2,-8(fp)
1010e300:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010e304:	e0bffc17 	ldw	r2,-16(fp)
1010e308:	10c20e04 	addi	r3,r2,2104
1010e30c:	e0bff917 	ldw	r2,-28(fp)
1010e310:	1885883a 	add	r2,r3,r2
1010e314:	e1bff617 	ldw	r6,-40(fp)
1010e318:	e17ffd17 	ldw	r5,-12(fp)
1010e31c:	1009883a 	mov	r4,r2
1010e320:	01061c00 	call	101061c0 <memcpy>
      ptr   += n;
1010e324:	e0fffd17 	ldw	r3,-12(fp)
1010e328:	e0bff617 	ldw	r2,-40(fp)
1010e32c:	1885883a 	add	r2,r3,r2
1010e330:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010e334:	e0fffe17 	ldw	r3,-8(fp)
1010e338:	e0bff617 	ldw	r2,-40(fp)
1010e33c:	1885c83a 	sub	r2,r3,r2
1010e340:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e344:	e0fff917 	ldw	r3,-28(fp)
1010e348:	e0bff617 	ldw	r2,-40(fp)
1010e34c:	1885883a 	add	r2,r3,r2
1010e350:	10c1ffcc 	andi	r3,r2,2047
1010e354:	e0bffc17 	ldw	r2,-16(fp)
1010e358:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e35c:	e0bffe17 	ldw	r2,-8(fp)
1010e360:	00bfc716 	blt	zero,r2,1010e280 <__alt_data_end+0xfffee280>
1010e364:	00000106 	br	1010e36c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010e368:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e36c:	0005303a 	rdctl	r2,status
1010e370:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e374:	e0fffb17 	ldw	r3,-20(fp)
1010e378:	00bfff84 	movi	r2,-2
1010e37c:	1884703a 	and	r2,r3,r2
1010e380:	1001703a 	wrctl	status,r2
  
  return context;
1010e384:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010e388:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e38c:	e0bffc17 	ldw	r2,-16(fp)
1010e390:	10800817 	ldw	r2,32(r2)
1010e394:	10c00094 	ori	r3,r2,2
1010e398:	e0bffc17 	ldw	r2,-16(fp)
1010e39c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e3a0:	e0bffc17 	ldw	r2,-16(fp)
1010e3a4:	10800017 	ldw	r2,0(r2)
1010e3a8:	10800104 	addi	r2,r2,4
1010e3ac:	1007883a 	mov	r3,r2
1010e3b0:	e0bffc17 	ldw	r2,-16(fp)
1010e3b4:	10800817 	ldw	r2,32(r2)
1010e3b8:	18800035 	stwio	r2,0(r3)
1010e3bc:	e0bffa17 	ldw	r2,-24(fp)
1010e3c0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e3c4:	e0bff817 	ldw	r2,-32(fp)
1010e3c8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010e3cc:	e0bffe17 	ldw	r2,-8(fp)
1010e3d0:	0080100e 	bge	zero,r2,1010e414 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010e3d4:	e0bfff17 	ldw	r2,-4(fp)
1010e3d8:	1090000c 	andi	r2,r2,16384
1010e3dc:	1000101e 	bne	r2,zero,1010e420 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010e3e0:	0001883a 	nop
1010e3e4:	e0bffc17 	ldw	r2,-16(fp)
1010e3e8:	10c00d17 	ldw	r3,52(r2)
1010e3ec:	e0bff517 	ldw	r2,-44(fp)
1010e3f0:	1880051e 	bne	r3,r2,1010e408 <altera_avalon_jtag_uart_write+0x1b8>
1010e3f4:	e0bffc17 	ldw	r2,-16(fp)
1010e3f8:	10c00917 	ldw	r3,36(r2)
1010e3fc:	e0bffc17 	ldw	r2,-16(fp)
1010e400:	10800117 	ldw	r2,4(r2)
1010e404:	18bff736 	bltu	r3,r2,1010e3e4 <__alt_data_end+0xfffee3e4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010e408:	e0bffc17 	ldw	r2,-16(fp)
1010e40c:	10800917 	ldw	r2,36(r2)
1010e410:	1000051e 	bne	r2,zero,1010e428 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010e414:	e0bffe17 	ldw	r2,-8(fp)
1010e418:	00bfd016 	blt	zero,r2,1010e35c <__alt_data_end+0xfffee35c>
1010e41c:	00000306 	br	1010e42c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010e420:	0001883a 	nop
1010e424:	00000106 	br	1010e42c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010e428:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010e42c:	e0fffd17 	ldw	r3,-12(fp)
1010e430:	e0bff717 	ldw	r2,-36(fp)
1010e434:	18800426 	beq	r3,r2,1010e448 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010e438:	e0fffd17 	ldw	r3,-12(fp)
1010e43c:	e0bff717 	ldw	r2,-36(fp)
1010e440:	1885c83a 	sub	r2,r3,r2
1010e444:	00000606 	br	1010e460 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010e448:	e0bfff17 	ldw	r2,-4(fp)
1010e44c:	1090000c 	andi	r2,r2,16384
1010e450:	10000226 	beq	r2,zero,1010e45c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010e454:	00bffd44 	movi	r2,-11
1010e458:	00000106 	br	1010e460 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010e45c:	00bffec4 	movi	r2,-5
}
1010e460:	e037883a 	mov	sp,fp
1010e464:	dfc00117 	ldw	ra,4(sp)
1010e468:	df000017 	ldw	fp,0(sp)
1010e46c:	dec00204 	addi	sp,sp,8
1010e470:	f800283a 	ret

1010e474 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010e474:	defff504 	addi	sp,sp,-44
1010e478:	df000a15 	stw	fp,40(sp)
1010e47c:	df000a04 	addi	fp,sp,40
1010e480:	e13ffc15 	stw	r4,-16(fp)
1010e484:	e17ffd15 	stw	r5,-12(fp)
1010e488:	e1bffe15 	stw	r6,-8(fp)
1010e48c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010e490:	e03ff615 	stw	zero,-40(fp)
1010e494:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
1010e498:	10003c26 	beq	r2,zero,1010e58c <alt_alarm_start+0x118>
  {
    if (alarm)
1010e49c:	e0bffc17 	ldw	r2,-16(fp)
1010e4a0:	10003826 	beq	r2,zero,1010e584 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1010e4a4:	e0bffc17 	ldw	r2,-16(fp)
1010e4a8:	e0fffe17 	ldw	r3,-8(fp)
1010e4ac:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010e4b0:	e0bffc17 	ldw	r2,-16(fp)
1010e4b4:	e0ffff17 	ldw	r3,-4(fp)
1010e4b8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e4bc:	0005303a 	rdctl	r2,status
1010e4c0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e4c4:	e0fff917 	ldw	r3,-28(fp)
1010e4c8:	00bfff84 	movi	r2,-2
1010e4cc:	1884703a 	and	r2,r3,r2
1010e4d0:	1001703a 	wrctl	status,r2
  
  return context;
1010e4d4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010e4d8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010e4dc:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
1010e4e0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010e4e4:	e0fffd17 	ldw	r3,-12(fp)
1010e4e8:	e0bff617 	ldw	r2,-40(fp)
1010e4ec:	1885883a 	add	r2,r3,r2
1010e4f0:	10c00044 	addi	r3,r2,1
1010e4f4:	e0bffc17 	ldw	r2,-16(fp)
1010e4f8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010e4fc:	e0bffc17 	ldw	r2,-16(fp)
1010e500:	10c00217 	ldw	r3,8(r2)
1010e504:	e0bff617 	ldw	r2,-40(fp)
1010e508:	1880042e 	bgeu	r3,r2,1010e51c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1010e50c:	e0bffc17 	ldw	r2,-16(fp)
1010e510:	00c00044 	movi	r3,1
1010e514:	10c00405 	stb	r3,16(r2)
1010e518:	00000206 	br	1010e524 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1010e51c:	e0bffc17 	ldw	r2,-16(fp)
1010e520:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010e524:	e0bffc17 	ldw	r2,-16(fp)
1010e528:	d0e00e04 	addi	r3,gp,-32712
1010e52c:	e0fffa15 	stw	r3,-24(fp)
1010e530:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e534:	e0bffb17 	ldw	r2,-20(fp)
1010e538:	e0fffa17 	ldw	r3,-24(fp)
1010e53c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e540:	e0bffa17 	ldw	r2,-24(fp)
1010e544:	10c00017 	ldw	r3,0(r2)
1010e548:	e0bffb17 	ldw	r2,-20(fp)
1010e54c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e550:	e0bffa17 	ldw	r2,-24(fp)
1010e554:	10800017 	ldw	r2,0(r2)
1010e558:	e0fffb17 	ldw	r3,-20(fp)
1010e55c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e560:	e0bffa17 	ldw	r2,-24(fp)
1010e564:	e0fffb17 	ldw	r3,-20(fp)
1010e568:	10c00015 	stw	r3,0(r2)
1010e56c:	e0bff817 	ldw	r2,-32(fp)
1010e570:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e574:	e0bff717 	ldw	r2,-36(fp)
1010e578:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010e57c:	0005883a 	mov	r2,zero
1010e580:	00000306 	br	1010e590 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1010e584:	00bffa84 	movi	r2,-22
1010e588:	00000106 	br	1010e590 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1010e58c:	00bfde84 	movi	r2,-134
  }
}
1010e590:	e037883a 	mov	sp,fp
1010e594:	df000017 	ldw	fp,0(sp)
1010e598:	dec00104 	addi	sp,sp,4
1010e59c:	f800283a 	ret

1010e5a0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010e5a0:	defffe04 	addi	sp,sp,-8
1010e5a4:	df000115 	stw	fp,4(sp)
1010e5a8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e5ac:	e03fff15 	stw	zero,-4(fp)
1010e5b0:	00000506 	br	1010e5c8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
1010e5b4:	e0bfff17 	ldw	r2,-4(fp)
1010e5b8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e5bc:	e0bfff17 	ldw	r2,-4(fp)
1010e5c0:	10800804 	addi	r2,r2,32
1010e5c4:	e0bfff15 	stw	r2,-4(fp)
1010e5c8:	e0bfff17 	ldw	r2,-4(fp)
1010e5cc:	10820030 	cmpltui	r2,r2,2048
1010e5d0:	103ff81e 	bne	r2,zero,1010e5b4 <__alt_data_end+0xfffee5b4>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010e5d4:	0001883a 	nop
1010e5d8:	e037883a 	mov	sp,fp
1010e5dc:	df000017 	ldw	fp,0(sp)
1010e5e0:	dec00104 	addi	sp,sp,4
1010e5e4:	f800283a 	ret

1010e5e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e5e8:	defffe04 	addi	sp,sp,-8
1010e5ec:	dfc00115 	stw	ra,4(sp)
1010e5f0:	df000015 	stw	fp,0(sp)
1010e5f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e5f8:	d0a00b17 	ldw	r2,-32724(gp)
1010e5fc:	10000326 	beq	r2,zero,1010e60c <alt_get_errno+0x24>
1010e600:	d0a00b17 	ldw	r2,-32724(gp)
1010e604:	103ee83a 	callr	r2
1010e608:	00000106 	br	1010e610 <alt_get_errno+0x28>
1010e60c:	d0a6d104 	addi	r2,gp,-25788
}
1010e610:	e037883a 	mov	sp,fp
1010e614:	dfc00117 	ldw	ra,4(sp)
1010e618:	df000017 	ldw	fp,0(sp)
1010e61c:	dec00204 	addi	sp,sp,8
1010e620:	f800283a 	ret

1010e624 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010e624:	defffa04 	addi	sp,sp,-24
1010e628:	dfc00515 	stw	ra,20(sp)
1010e62c:	df000415 	stw	fp,16(sp)
1010e630:	df000404 	addi	fp,sp,16
1010e634:	e13ffe15 	stw	r4,-8(fp)
1010e638:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010e63c:	e0bffe17 	ldw	r2,-8(fp)
1010e640:	10000326 	beq	r2,zero,1010e650 <alt_dev_llist_insert+0x2c>
1010e644:	e0bffe17 	ldw	r2,-8(fp)
1010e648:	10800217 	ldw	r2,8(r2)
1010e64c:	1000061e 	bne	r2,zero,1010e668 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010e650:	010e5e80 	call	1010e5e8 <alt_get_errno>
1010e654:	1007883a 	mov	r3,r2
1010e658:	00800584 	movi	r2,22
1010e65c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010e660:	00bffa84 	movi	r2,-22
1010e664:	00001306 	br	1010e6b4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010e668:	e0bffe17 	ldw	r2,-8(fp)
1010e66c:	e0ffff17 	ldw	r3,-4(fp)
1010e670:	e0fffc15 	stw	r3,-16(fp)
1010e674:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e678:	e0bffd17 	ldw	r2,-12(fp)
1010e67c:	e0fffc17 	ldw	r3,-16(fp)
1010e680:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e684:	e0bffc17 	ldw	r2,-16(fp)
1010e688:	10c00017 	ldw	r3,0(r2)
1010e68c:	e0bffd17 	ldw	r2,-12(fp)
1010e690:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e694:	e0bffc17 	ldw	r2,-16(fp)
1010e698:	10800017 	ldw	r2,0(r2)
1010e69c:	e0fffd17 	ldw	r3,-12(fp)
1010e6a0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e6a4:	e0bffc17 	ldw	r2,-16(fp)
1010e6a8:	e0fffd17 	ldw	r3,-12(fp)
1010e6ac:	10c00015 	stw	r3,0(r2)

  return 0;  
1010e6b0:	0005883a 	mov	r2,zero
}
1010e6b4:	e037883a 	mov	sp,fp
1010e6b8:	dfc00117 	ldw	ra,4(sp)
1010e6bc:	df000017 	ldw	fp,0(sp)
1010e6c0:	dec00204 	addi	sp,sp,8
1010e6c4:	f800283a 	ret

1010e6c8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010e6c8:	defffd04 	addi	sp,sp,-12
1010e6cc:	dfc00215 	stw	ra,8(sp)
1010e6d0:	df000115 	stw	fp,4(sp)
1010e6d4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e6d8:	00840474 	movhi	r2,4113
1010e6dc:	10bdac04 	addi	r2,r2,-2384
1010e6e0:	e0bfff15 	stw	r2,-4(fp)
1010e6e4:	00000606 	br	1010e700 <_do_ctors+0x38>
        (*ctor) (); 
1010e6e8:	e0bfff17 	ldw	r2,-4(fp)
1010e6ec:	10800017 	ldw	r2,0(r2)
1010e6f0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e6f4:	e0bfff17 	ldw	r2,-4(fp)
1010e6f8:	10bfff04 	addi	r2,r2,-4
1010e6fc:	e0bfff15 	stw	r2,-4(fp)
1010e700:	e0ffff17 	ldw	r3,-4(fp)
1010e704:	00840474 	movhi	r2,4113
1010e708:	10bdad04 	addi	r2,r2,-2380
1010e70c:	18bff62e 	bgeu	r3,r2,1010e6e8 <__alt_data_end+0xfffee6e8>
        (*ctor) (); 
}
1010e710:	0001883a 	nop
1010e714:	e037883a 	mov	sp,fp
1010e718:	dfc00117 	ldw	ra,4(sp)
1010e71c:	df000017 	ldw	fp,0(sp)
1010e720:	dec00204 	addi	sp,sp,8
1010e724:	f800283a 	ret

1010e728 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010e728:	defffd04 	addi	sp,sp,-12
1010e72c:	dfc00215 	stw	ra,8(sp)
1010e730:	df000115 	stw	fp,4(sp)
1010e734:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e738:	00840474 	movhi	r2,4113
1010e73c:	10bdac04 	addi	r2,r2,-2384
1010e740:	e0bfff15 	stw	r2,-4(fp)
1010e744:	00000606 	br	1010e760 <_do_dtors+0x38>
        (*dtor) (); 
1010e748:	e0bfff17 	ldw	r2,-4(fp)
1010e74c:	10800017 	ldw	r2,0(r2)
1010e750:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e754:	e0bfff17 	ldw	r2,-4(fp)
1010e758:	10bfff04 	addi	r2,r2,-4
1010e75c:	e0bfff15 	stw	r2,-4(fp)
1010e760:	e0ffff17 	ldw	r3,-4(fp)
1010e764:	00840474 	movhi	r2,4113
1010e768:	10bdad04 	addi	r2,r2,-2380
1010e76c:	18bff62e 	bgeu	r3,r2,1010e748 <__alt_data_end+0xfffee748>
        (*dtor) (); 
}
1010e770:	0001883a 	nop
1010e774:	e037883a 	mov	sp,fp
1010e778:	dfc00117 	ldw	ra,4(sp)
1010e77c:	df000017 	ldw	fp,0(sp)
1010e780:	dec00204 	addi	sp,sp,8
1010e784:	f800283a 	ret

1010e788 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010e788:	defffe04 	addi	sp,sp,-8
1010e78c:	dfc00115 	stw	ra,4(sp)
1010e790:	df000015 	stw	fp,0(sp)
1010e794:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
1010e798:	01440004 	movi	r5,4096
1010e79c:	0009883a 	mov	r4,zero
1010e7a0:	010f1f40 	call	1010f1f4 <alt_icache_flush>
#endif
}
1010e7a4:	0001883a 	nop
1010e7a8:	e037883a 	mov	sp,fp
1010e7ac:	dfc00117 	ldw	ra,4(sp)
1010e7b0:	df000017 	ldw	fp,0(sp)
1010e7b4:	dec00204 	addi	sp,sp,8
1010e7b8:	f800283a 	ret

1010e7bc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010e7bc:	defff904 	addi	sp,sp,-28
1010e7c0:	dfc00615 	stw	ra,24(sp)
1010e7c4:	df000515 	stw	fp,20(sp)
1010e7c8:	df000504 	addi	fp,sp,20
1010e7cc:	e13ffc15 	stw	r4,-16(fp)
1010e7d0:	e17ffd15 	stw	r5,-12(fp)
1010e7d4:	e1bffe15 	stw	r6,-8(fp)
1010e7d8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010e7dc:	e0800217 	ldw	r2,8(fp)
1010e7e0:	d8800015 	stw	r2,0(sp)
1010e7e4:	e1ffff17 	ldw	r7,-4(fp)
1010e7e8:	e1bffe17 	ldw	r6,-8(fp)
1010e7ec:	e17ffd17 	ldw	r5,-12(fp)
1010e7f0:	e13ffc17 	ldw	r4,-16(fp)
1010e7f4:	010e96c0 	call	1010e96c <alt_iic_isr_register>
}  
1010e7f8:	e037883a 	mov	sp,fp
1010e7fc:	dfc00117 	ldw	ra,4(sp)
1010e800:	df000017 	ldw	fp,0(sp)
1010e804:	dec00204 	addi	sp,sp,8
1010e808:	f800283a 	ret

1010e80c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010e80c:	defff904 	addi	sp,sp,-28
1010e810:	df000615 	stw	fp,24(sp)
1010e814:	df000604 	addi	fp,sp,24
1010e818:	e13ffe15 	stw	r4,-8(fp)
1010e81c:	e17fff15 	stw	r5,-4(fp)
1010e820:	e0bfff17 	ldw	r2,-4(fp)
1010e824:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e828:	0005303a 	rdctl	r2,status
1010e82c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e830:	e0fffb17 	ldw	r3,-20(fp)
1010e834:	00bfff84 	movi	r2,-2
1010e838:	1884703a 	and	r2,r3,r2
1010e83c:	1001703a 	wrctl	status,r2
  
  return context;
1010e840:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010e844:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010e848:	00c00044 	movi	r3,1
1010e84c:	e0bffa17 	ldw	r2,-24(fp)
1010e850:	1884983a 	sll	r2,r3,r2
1010e854:	1007883a 	mov	r3,r2
1010e858:	d0a6d517 	ldw	r2,-25772(gp)
1010e85c:	1884b03a 	or	r2,r3,r2
1010e860:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010e864:	d0a6d517 	ldw	r2,-25772(gp)
1010e868:	100170fa 	wrctl	ienable,r2
1010e86c:	e0bffc17 	ldw	r2,-16(fp)
1010e870:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e874:	e0bffd17 	ldw	r2,-12(fp)
1010e878:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010e87c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010e880:	0001883a 	nop
}
1010e884:	e037883a 	mov	sp,fp
1010e888:	df000017 	ldw	fp,0(sp)
1010e88c:	dec00104 	addi	sp,sp,4
1010e890:	f800283a 	ret

1010e894 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010e894:	defff904 	addi	sp,sp,-28
1010e898:	df000615 	stw	fp,24(sp)
1010e89c:	df000604 	addi	fp,sp,24
1010e8a0:	e13ffe15 	stw	r4,-8(fp)
1010e8a4:	e17fff15 	stw	r5,-4(fp)
1010e8a8:	e0bfff17 	ldw	r2,-4(fp)
1010e8ac:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e8b0:	0005303a 	rdctl	r2,status
1010e8b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e8b8:	e0fffb17 	ldw	r3,-20(fp)
1010e8bc:	00bfff84 	movi	r2,-2
1010e8c0:	1884703a 	and	r2,r3,r2
1010e8c4:	1001703a 	wrctl	status,r2
  
  return context;
1010e8c8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010e8cc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010e8d0:	00c00044 	movi	r3,1
1010e8d4:	e0bffa17 	ldw	r2,-24(fp)
1010e8d8:	1884983a 	sll	r2,r3,r2
1010e8dc:	0084303a 	nor	r2,zero,r2
1010e8e0:	1007883a 	mov	r3,r2
1010e8e4:	d0a6d517 	ldw	r2,-25772(gp)
1010e8e8:	1884703a 	and	r2,r3,r2
1010e8ec:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010e8f0:	d0a6d517 	ldw	r2,-25772(gp)
1010e8f4:	100170fa 	wrctl	ienable,r2
1010e8f8:	e0bffc17 	ldw	r2,-16(fp)
1010e8fc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e900:	e0bffd17 	ldw	r2,-12(fp)
1010e904:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010e908:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010e90c:	0001883a 	nop
}
1010e910:	e037883a 	mov	sp,fp
1010e914:	df000017 	ldw	fp,0(sp)
1010e918:	dec00104 	addi	sp,sp,4
1010e91c:	f800283a 	ret

1010e920 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010e920:	defffc04 	addi	sp,sp,-16
1010e924:	df000315 	stw	fp,12(sp)
1010e928:	df000304 	addi	fp,sp,12
1010e92c:	e13ffe15 	stw	r4,-8(fp)
1010e930:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010e934:	000530fa 	rdctl	r2,ienable
1010e938:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010e93c:	00c00044 	movi	r3,1
1010e940:	e0bfff17 	ldw	r2,-4(fp)
1010e944:	1884983a 	sll	r2,r3,r2
1010e948:	1007883a 	mov	r3,r2
1010e94c:	e0bffd17 	ldw	r2,-12(fp)
1010e950:	1884703a 	and	r2,r3,r2
1010e954:	1004c03a 	cmpne	r2,r2,zero
1010e958:	10803fcc 	andi	r2,r2,255
}
1010e95c:	e037883a 	mov	sp,fp
1010e960:	df000017 	ldw	fp,0(sp)
1010e964:	dec00104 	addi	sp,sp,4
1010e968:	f800283a 	ret

1010e96c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010e96c:	defff504 	addi	sp,sp,-44
1010e970:	dfc00a15 	stw	ra,40(sp)
1010e974:	df000915 	stw	fp,36(sp)
1010e978:	df000904 	addi	fp,sp,36
1010e97c:	e13ffc15 	stw	r4,-16(fp)
1010e980:	e17ffd15 	stw	r5,-12(fp)
1010e984:	e1bffe15 	stw	r6,-8(fp)
1010e988:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010e98c:	00bffa84 	movi	r2,-22
1010e990:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010e994:	e0bffd17 	ldw	r2,-12(fp)
1010e998:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010e99c:	e0bff817 	ldw	r2,-32(fp)
1010e9a0:	10800808 	cmpgei	r2,r2,32
1010e9a4:	1000271e 	bne	r2,zero,1010ea44 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e9a8:	0005303a 	rdctl	r2,status
1010e9ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e9b0:	e0fffb17 	ldw	r3,-20(fp)
1010e9b4:	00bfff84 	movi	r2,-2
1010e9b8:	1884703a 	and	r2,r3,r2
1010e9bc:	1001703a 	wrctl	status,r2
  
  return context;
1010e9c0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010e9c4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010e9c8:	00840474 	movhi	r2,4113
1010e9cc:	108c0304 	addi	r2,r2,12300
1010e9d0:	e0fff817 	ldw	r3,-32(fp)
1010e9d4:	180690fa 	slli	r3,r3,3
1010e9d8:	10c5883a 	add	r2,r2,r3
1010e9dc:	e0fffe17 	ldw	r3,-8(fp)
1010e9e0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010e9e4:	00840474 	movhi	r2,4113
1010e9e8:	108c0304 	addi	r2,r2,12300
1010e9ec:	e0fff817 	ldw	r3,-32(fp)
1010e9f0:	180690fa 	slli	r3,r3,3
1010e9f4:	10c5883a 	add	r2,r2,r3
1010e9f8:	10800104 	addi	r2,r2,4
1010e9fc:	e0ffff17 	ldw	r3,-4(fp)
1010ea00:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010ea04:	e0bffe17 	ldw	r2,-8(fp)
1010ea08:	10000526 	beq	r2,zero,1010ea20 <alt_iic_isr_register+0xb4>
1010ea0c:	e0bff817 	ldw	r2,-32(fp)
1010ea10:	100b883a 	mov	r5,r2
1010ea14:	e13ffc17 	ldw	r4,-16(fp)
1010ea18:	010e80c0 	call	1010e80c <alt_ic_irq_enable>
1010ea1c:	00000406 	br	1010ea30 <alt_iic_isr_register+0xc4>
1010ea20:	e0bff817 	ldw	r2,-32(fp)
1010ea24:	100b883a 	mov	r5,r2
1010ea28:	e13ffc17 	ldw	r4,-16(fp)
1010ea2c:	010e8940 	call	1010e894 <alt_ic_irq_disable>
1010ea30:	e0bff715 	stw	r2,-36(fp)
1010ea34:	e0bffa17 	ldw	r2,-24(fp)
1010ea38:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ea3c:	e0bff917 	ldw	r2,-28(fp)
1010ea40:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010ea44:	e0bff717 	ldw	r2,-36(fp)
}
1010ea48:	e037883a 	mov	sp,fp
1010ea4c:	dfc00117 	ldw	ra,4(sp)
1010ea50:	df000017 	ldw	fp,0(sp)
1010ea54:	dec00204 	addi	sp,sp,8
1010ea58:	f800283a 	ret

1010ea5c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010ea5c:	defff904 	addi	sp,sp,-28
1010ea60:	dfc00615 	stw	ra,24(sp)
1010ea64:	df000515 	stw	fp,20(sp)
1010ea68:	df000504 	addi	fp,sp,20
1010ea6c:	e13ffc15 	stw	r4,-16(fp)
1010ea70:	e17ffd15 	stw	r5,-12(fp)
1010ea74:	e1bffe15 	stw	r6,-8(fp)
1010ea78:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
1010ea7c:	e1bfff17 	ldw	r6,-4(fp)
1010ea80:	e17ffe17 	ldw	r5,-8(fp)
1010ea84:	e13ffd17 	ldw	r4,-12(fp)
1010ea88:	010ec9c0 	call	1010ec9c <open>
1010ea8c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
1010ea90:	e0bffb17 	ldw	r2,-20(fp)
1010ea94:	10001c16 	blt	r2,zero,1010eb08 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
1010ea98:	00840474 	movhi	r2,4113
1010ea9c:	1080a804 	addi	r2,r2,672
1010eaa0:	e0fffb17 	ldw	r3,-20(fp)
1010eaa4:	18c00324 	muli	r3,r3,12
1010eaa8:	10c5883a 	add	r2,r2,r3
1010eaac:	10c00017 	ldw	r3,0(r2)
1010eab0:	e0bffc17 	ldw	r2,-16(fp)
1010eab4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010eab8:	00840474 	movhi	r2,4113
1010eabc:	1080a804 	addi	r2,r2,672
1010eac0:	e0fffb17 	ldw	r3,-20(fp)
1010eac4:	18c00324 	muli	r3,r3,12
1010eac8:	10c5883a 	add	r2,r2,r3
1010eacc:	10800104 	addi	r2,r2,4
1010ead0:	10c00017 	ldw	r3,0(r2)
1010ead4:	e0bffc17 	ldw	r2,-16(fp)
1010ead8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010eadc:	00840474 	movhi	r2,4113
1010eae0:	1080a804 	addi	r2,r2,672
1010eae4:	e0fffb17 	ldw	r3,-20(fp)
1010eae8:	18c00324 	muli	r3,r3,12
1010eaec:	10c5883a 	add	r2,r2,r3
1010eaf0:	10800204 	addi	r2,r2,8
1010eaf4:	10c00017 	ldw	r3,0(r2)
1010eaf8:	e0bffc17 	ldw	r2,-16(fp)
1010eafc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010eb00:	e13ffb17 	ldw	r4,-20(fp)
1010eb04:	010d7100 	call	1010d710 <alt_release_fd>
  }
} 
1010eb08:	0001883a 	nop
1010eb0c:	e037883a 	mov	sp,fp
1010eb10:	dfc00117 	ldw	ra,4(sp)
1010eb14:	df000017 	ldw	fp,0(sp)
1010eb18:	dec00204 	addi	sp,sp,8
1010eb1c:	f800283a 	ret

1010eb20 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010eb20:	defffb04 	addi	sp,sp,-20
1010eb24:	dfc00415 	stw	ra,16(sp)
1010eb28:	df000315 	stw	fp,12(sp)
1010eb2c:	df000304 	addi	fp,sp,12
1010eb30:	e13ffd15 	stw	r4,-12(fp)
1010eb34:	e17ffe15 	stw	r5,-8(fp)
1010eb38:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010eb3c:	01c07fc4 	movi	r7,511
1010eb40:	01800044 	movi	r6,1
1010eb44:	e17ffd17 	ldw	r5,-12(fp)
1010eb48:	01040474 	movhi	r4,4113
1010eb4c:	2100ab04 	addi	r4,r4,684
1010eb50:	010ea5c0 	call	1010ea5c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010eb54:	01c07fc4 	movi	r7,511
1010eb58:	000d883a 	mov	r6,zero
1010eb5c:	e17ffe17 	ldw	r5,-8(fp)
1010eb60:	01040474 	movhi	r4,4113
1010eb64:	2100a804 	addi	r4,r4,672
1010eb68:	010ea5c0 	call	1010ea5c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010eb6c:	01c07fc4 	movi	r7,511
1010eb70:	01800044 	movi	r6,1
1010eb74:	e17fff17 	ldw	r5,-4(fp)
1010eb78:	01040474 	movhi	r4,4113
1010eb7c:	2100ae04 	addi	r4,r4,696
1010eb80:	010ea5c0 	call	1010ea5c <alt_open_fd>
}  
1010eb84:	0001883a 	nop
1010eb88:	e037883a 	mov	sp,fp
1010eb8c:	dfc00117 	ldw	ra,4(sp)
1010eb90:	df000017 	ldw	fp,0(sp)
1010eb94:	dec00204 	addi	sp,sp,8
1010eb98:	f800283a 	ret

1010eb9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010eb9c:	defffe04 	addi	sp,sp,-8
1010eba0:	dfc00115 	stw	ra,4(sp)
1010eba4:	df000015 	stw	fp,0(sp)
1010eba8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010ebac:	d0a00b17 	ldw	r2,-32724(gp)
1010ebb0:	10000326 	beq	r2,zero,1010ebc0 <alt_get_errno+0x24>
1010ebb4:	d0a00b17 	ldw	r2,-32724(gp)
1010ebb8:	103ee83a 	callr	r2
1010ebbc:	00000106 	br	1010ebc4 <alt_get_errno+0x28>
1010ebc0:	d0a6d104 	addi	r2,gp,-25788
}
1010ebc4:	e037883a 	mov	sp,fp
1010ebc8:	dfc00117 	ldw	ra,4(sp)
1010ebcc:	df000017 	ldw	fp,0(sp)
1010ebd0:	dec00204 	addi	sp,sp,8
1010ebd4:	f800283a 	ret

1010ebd8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010ebd8:	defffd04 	addi	sp,sp,-12
1010ebdc:	df000215 	stw	fp,8(sp)
1010ebe0:	df000204 	addi	fp,sp,8
1010ebe4:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010ebe8:	e0bfff17 	ldw	r2,-4(fp)
1010ebec:	10800217 	ldw	r2,8(r2)
1010ebf0:	10d00034 	orhi	r3,r2,16384
1010ebf4:	e0bfff17 	ldw	r2,-4(fp)
1010ebf8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010ebfc:	e03ffe15 	stw	zero,-8(fp)
1010ec00:	00001d06 	br	1010ec78 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010ec04:	00840474 	movhi	r2,4113
1010ec08:	1080a804 	addi	r2,r2,672
1010ec0c:	e0fffe17 	ldw	r3,-8(fp)
1010ec10:	18c00324 	muli	r3,r3,12
1010ec14:	10c5883a 	add	r2,r2,r3
1010ec18:	10c00017 	ldw	r3,0(r2)
1010ec1c:	e0bfff17 	ldw	r2,-4(fp)
1010ec20:	10800017 	ldw	r2,0(r2)
1010ec24:	1880111e 	bne	r3,r2,1010ec6c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010ec28:	00840474 	movhi	r2,4113
1010ec2c:	1080a804 	addi	r2,r2,672
1010ec30:	e0fffe17 	ldw	r3,-8(fp)
1010ec34:	18c00324 	muli	r3,r3,12
1010ec38:	10c5883a 	add	r2,r2,r3
1010ec3c:	10800204 	addi	r2,r2,8
1010ec40:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010ec44:	1000090e 	bge	r2,zero,1010ec6c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010ec48:	e0bffe17 	ldw	r2,-8(fp)
1010ec4c:	10c00324 	muli	r3,r2,12
1010ec50:	00840474 	movhi	r2,4113
1010ec54:	1080a804 	addi	r2,r2,672
1010ec58:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010ec5c:	e0bfff17 	ldw	r2,-4(fp)
1010ec60:	18800226 	beq	r3,r2,1010ec6c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010ec64:	00bffcc4 	movi	r2,-13
1010ec68:	00000806 	br	1010ec8c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010ec6c:	e0bffe17 	ldw	r2,-8(fp)
1010ec70:	10800044 	addi	r2,r2,1
1010ec74:	e0bffe15 	stw	r2,-8(fp)
1010ec78:	d0a00a17 	ldw	r2,-32728(gp)
1010ec7c:	1007883a 	mov	r3,r2
1010ec80:	e0bffe17 	ldw	r2,-8(fp)
1010ec84:	18bfdf2e 	bgeu	r3,r2,1010ec04 <__alt_data_end+0xfffeec04>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010ec88:	0005883a 	mov	r2,zero
}
1010ec8c:	e037883a 	mov	sp,fp
1010ec90:	df000017 	ldw	fp,0(sp)
1010ec94:	dec00104 	addi	sp,sp,4
1010ec98:	f800283a 	ret

1010ec9c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010ec9c:	defff604 	addi	sp,sp,-40
1010eca0:	dfc00915 	stw	ra,36(sp)
1010eca4:	df000815 	stw	fp,32(sp)
1010eca8:	df000804 	addi	fp,sp,32
1010ecac:	e13ffd15 	stw	r4,-12(fp)
1010ecb0:	e17ffe15 	stw	r5,-8(fp)
1010ecb4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010ecb8:	00bfffc4 	movi	r2,-1
1010ecbc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010ecc0:	00bffb44 	movi	r2,-19
1010ecc4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010ecc8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010eccc:	d1600804 	addi	r5,gp,-32736
1010ecd0:	e13ffd17 	ldw	r4,-12(fp)
1010ecd4:	010efb80 	call	1010efb8 <alt_find_dev>
1010ecd8:	e0bff815 	stw	r2,-32(fp)
1010ecdc:	e0bff817 	ldw	r2,-32(fp)
1010ece0:	1000051e 	bne	r2,zero,1010ecf8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010ece4:	e13ffd17 	ldw	r4,-12(fp)
1010ece8:	010f0480 	call	1010f048 <alt_find_file>
1010ecec:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010ecf0:	00800044 	movi	r2,1
1010ecf4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010ecf8:	e0bff817 	ldw	r2,-32(fp)
1010ecfc:	10002926 	beq	r2,zero,1010eda4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010ed00:	e13ff817 	ldw	r4,-32(fp)
1010ed04:	010f1500 	call	1010f150 <alt_get_fd>
1010ed08:	e0bff915 	stw	r2,-28(fp)
1010ed0c:	e0bff917 	ldw	r2,-28(fp)
1010ed10:	1000030e 	bge	r2,zero,1010ed20 <open+0x84>
    {
      status = index;
1010ed14:	e0bff917 	ldw	r2,-28(fp)
1010ed18:	e0bffa15 	stw	r2,-24(fp)
1010ed1c:	00002306 	br	1010edac <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
1010ed20:	e0bff917 	ldw	r2,-28(fp)
1010ed24:	10c00324 	muli	r3,r2,12
1010ed28:	00840474 	movhi	r2,4113
1010ed2c:	1080a804 	addi	r2,r2,672
1010ed30:	1885883a 	add	r2,r3,r2
1010ed34:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010ed38:	e0fffe17 	ldw	r3,-8(fp)
1010ed3c:	00900034 	movhi	r2,16384
1010ed40:	10bfffc4 	addi	r2,r2,-1
1010ed44:	1886703a 	and	r3,r3,r2
1010ed48:	e0bffc17 	ldw	r2,-16(fp)
1010ed4c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010ed50:	e0bffb17 	ldw	r2,-20(fp)
1010ed54:	1000051e 	bne	r2,zero,1010ed6c <open+0xd0>
1010ed58:	e13ffc17 	ldw	r4,-16(fp)
1010ed5c:	010ebd80 	call	1010ebd8 <alt_file_locked>
1010ed60:	e0bffa15 	stw	r2,-24(fp)
1010ed64:	e0bffa17 	ldw	r2,-24(fp)
1010ed68:	10001016 	blt	r2,zero,1010edac <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010ed6c:	e0bff817 	ldw	r2,-32(fp)
1010ed70:	10800317 	ldw	r2,12(r2)
1010ed74:	10000826 	beq	r2,zero,1010ed98 <open+0xfc>
1010ed78:	e0bff817 	ldw	r2,-32(fp)
1010ed7c:	10800317 	ldw	r2,12(r2)
1010ed80:	e1ffff17 	ldw	r7,-4(fp)
1010ed84:	e1bffe17 	ldw	r6,-8(fp)
1010ed88:	e17ffd17 	ldw	r5,-12(fp)
1010ed8c:	e13ffc17 	ldw	r4,-16(fp)
1010ed90:	103ee83a 	callr	r2
1010ed94:	00000106 	br	1010ed9c <open+0x100>
1010ed98:	0005883a 	mov	r2,zero
1010ed9c:	e0bffa15 	stw	r2,-24(fp)
1010eda0:	00000206 	br	1010edac <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010eda4:	00bffb44 	movi	r2,-19
1010eda8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010edac:	e0bffa17 	ldw	r2,-24(fp)
1010edb0:	1000090e 	bge	r2,zero,1010edd8 <open+0x13c>
  {
    alt_release_fd (index);  
1010edb4:	e13ff917 	ldw	r4,-28(fp)
1010edb8:	010d7100 	call	1010d710 <alt_release_fd>
    ALT_ERRNO = -status;
1010edbc:	010eb9c0 	call	1010eb9c <alt_get_errno>
1010edc0:	1007883a 	mov	r3,r2
1010edc4:	e0bffa17 	ldw	r2,-24(fp)
1010edc8:	0085c83a 	sub	r2,zero,r2
1010edcc:	18800015 	stw	r2,0(r3)
    return -1;
1010edd0:	00bfffc4 	movi	r2,-1
1010edd4:	00000106 	br	1010eddc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
1010edd8:	e0bff917 	ldw	r2,-28(fp)
}
1010eddc:	e037883a 	mov	sp,fp
1010ede0:	dfc00117 	ldw	ra,4(sp)
1010ede4:	df000017 	ldw	fp,0(sp)
1010ede8:	dec00204 	addi	sp,sp,8
1010edec:	f800283a 	ret

1010edf0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010edf0:	defffa04 	addi	sp,sp,-24
1010edf4:	df000515 	stw	fp,20(sp)
1010edf8:	df000504 	addi	fp,sp,20
1010edfc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ee00:	0005303a 	rdctl	r2,status
1010ee04:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ee08:	e0fffc17 	ldw	r3,-16(fp)
1010ee0c:	00bfff84 	movi	r2,-2
1010ee10:	1884703a 	and	r2,r3,r2
1010ee14:	1001703a 	wrctl	status,r2
  
  return context;
1010ee18:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010ee1c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010ee20:	e0bfff17 	ldw	r2,-4(fp)
1010ee24:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010ee28:	e0bffd17 	ldw	r2,-12(fp)
1010ee2c:	10800017 	ldw	r2,0(r2)
1010ee30:	e0fffd17 	ldw	r3,-12(fp)
1010ee34:	18c00117 	ldw	r3,4(r3)
1010ee38:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010ee3c:	e0bffd17 	ldw	r2,-12(fp)
1010ee40:	10800117 	ldw	r2,4(r2)
1010ee44:	e0fffd17 	ldw	r3,-12(fp)
1010ee48:	18c00017 	ldw	r3,0(r3)
1010ee4c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010ee50:	e0bffd17 	ldw	r2,-12(fp)
1010ee54:	e0fffd17 	ldw	r3,-12(fp)
1010ee58:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010ee5c:	e0bffd17 	ldw	r2,-12(fp)
1010ee60:	e0fffd17 	ldw	r3,-12(fp)
1010ee64:	10c00015 	stw	r3,0(r2)
1010ee68:	e0bffb17 	ldw	r2,-20(fp)
1010ee6c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ee70:	e0bffe17 	ldw	r2,-8(fp)
1010ee74:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010ee78:	0001883a 	nop
1010ee7c:	e037883a 	mov	sp,fp
1010ee80:	df000017 	ldw	fp,0(sp)
1010ee84:	dec00104 	addi	sp,sp,4
1010ee88:	f800283a 	ret

1010ee8c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010ee8c:	defffb04 	addi	sp,sp,-20
1010ee90:	dfc00415 	stw	ra,16(sp)
1010ee94:	df000315 	stw	fp,12(sp)
1010ee98:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010ee9c:	d0a00e17 	ldw	r2,-32712(gp)
1010eea0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010eea4:	d0a6d717 	ldw	r2,-25764(gp)
1010eea8:	10800044 	addi	r2,r2,1
1010eeac:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010eeb0:	00002e06 	br	1010ef6c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010eeb4:	e0bffd17 	ldw	r2,-12(fp)
1010eeb8:	10800017 	ldw	r2,0(r2)
1010eebc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010eec0:	e0bffd17 	ldw	r2,-12(fp)
1010eec4:	10800403 	ldbu	r2,16(r2)
1010eec8:	10803fcc 	andi	r2,r2,255
1010eecc:	10000426 	beq	r2,zero,1010eee0 <alt_tick+0x54>
1010eed0:	d0a6d717 	ldw	r2,-25764(gp)
1010eed4:	1000021e 	bne	r2,zero,1010eee0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010eed8:	e0bffd17 	ldw	r2,-12(fp)
1010eedc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010eee0:	e0bffd17 	ldw	r2,-12(fp)
1010eee4:	10800217 	ldw	r2,8(r2)
1010eee8:	d0e6d717 	ldw	r3,-25764(gp)
1010eeec:	18801d36 	bltu	r3,r2,1010ef64 <alt_tick+0xd8>
1010eef0:	e0bffd17 	ldw	r2,-12(fp)
1010eef4:	10800403 	ldbu	r2,16(r2)
1010eef8:	10803fcc 	andi	r2,r2,255
1010eefc:	1000191e 	bne	r2,zero,1010ef64 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010ef00:	e0bffd17 	ldw	r2,-12(fp)
1010ef04:	10800317 	ldw	r2,12(r2)
1010ef08:	e0fffd17 	ldw	r3,-12(fp)
1010ef0c:	18c00517 	ldw	r3,20(r3)
1010ef10:	1809883a 	mov	r4,r3
1010ef14:	103ee83a 	callr	r2
1010ef18:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010ef1c:	e0bfff17 	ldw	r2,-4(fp)
1010ef20:	1000031e 	bne	r2,zero,1010ef30 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010ef24:	e13ffd17 	ldw	r4,-12(fp)
1010ef28:	010edf00 	call	1010edf0 <alt_alarm_stop>
1010ef2c:	00000d06 	br	1010ef64 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010ef30:	e0bffd17 	ldw	r2,-12(fp)
1010ef34:	10c00217 	ldw	r3,8(r2)
1010ef38:	e0bfff17 	ldw	r2,-4(fp)
1010ef3c:	1887883a 	add	r3,r3,r2
1010ef40:	e0bffd17 	ldw	r2,-12(fp)
1010ef44:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010ef48:	e0bffd17 	ldw	r2,-12(fp)
1010ef4c:	10c00217 	ldw	r3,8(r2)
1010ef50:	d0a6d717 	ldw	r2,-25764(gp)
1010ef54:	1880032e 	bgeu	r3,r2,1010ef64 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010ef58:	e0bffd17 	ldw	r2,-12(fp)
1010ef5c:	00c00044 	movi	r3,1
1010ef60:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010ef64:	e0bffe17 	ldw	r2,-8(fp)
1010ef68:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010ef6c:	e0fffd17 	ldw	r3,-12(fp)
1010ef70:	d0a00e04 	addi	r2,gp,-32712
1010ef74:	18bfcf1e 	bne	r3,r2,1010eeb4 <__alt_data_end+0xfffeeeb4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010ef78:	0001883a 	nop
}
1010ef7c:	0001883a 	nop
1010ef80:	e037883a 	mov	sp,fp
1010ef84:	dfc00117 	ldw	ra,4(sp)
1010ef88:	df000017 	ldw	fp,0(sp)
1010ef8c:	dec00204 	addi	sp,sp,8
1010ef90:	f800283a 	ret

1010ef94 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010ef94:	deffff04 	addi	sp,sp,-4
1010ef98:	df000015 	stw	fp,0(sp)
1010ef9c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010efa0:	000170fa 	wrctl	ienable,zero
}
1010efa4:	0001883a 	nop
1010efa8:	e037883a 	mov	sp,fp
1010efac:	df000017 	ldw	fp,0(sp)
1010efb0:	dec00104 	addi	sp,sp,4
1010efb4:	f800283a 	ret

1010efb8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010efb8:	defffa04 	addi	sp,sp,-24
1010efbc:	dfc00515 	stw	ra,20(sp)
1010efc0:	df000415 	stw	fp,16(sp)
1010efc4:	df000404 	addi	fp,sp,16
1010efc8:	e13ffe15 	stw	r4,-8(fp)
1010efcc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010efd0:	e0bfff17 	ldw	r2,-4(fp)
1010efd4:	10800017 	ldw	r2,0(r2)
1010efd8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010efdc:	e13ffe17 	ldw	r4,-8(fp)
1010efe0:	01008340 	call	10100834 <strlen>
1010efe4:	10800044 	addi	r2,r2,1
1010efe8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010efec:	00000d06 	br	1010f024 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010eff0:	e0bffc17 	ldw	r2,-16(fp)
1010eff4:	10800217 	ldw	r2,8(r2)
1010eff8:	e0fffd17 	ldw	r3,-12(fp)
1010effc:	180d883a 	mov	r6,r3
1010f000:	e17ffe17 	ldw	r5,-8(fp)
1010f004:	1009883a 	mov	r4,r2
1010f008:	010f36c0 	call	1010f36c <memcmp>
1010f00c:	1000021e 	bne	r2,zero,1010f018 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010f010:	e0bffc17 	ldw	r2,-16(fp)
1010f014:	00000706 	br	1010f034 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010f018:	e0bffc17 	ldw	r2,-16(fp)
1010f01c:	10800017 	ldw	r2,0(r2)
1010f020:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f024:	e0fffc17 	ldw	r3,-16(fp)
1010f028:	e0bfff17 	ldw	r2,-4(fp)
1010f02c:	18bff01e 	bne	r3,r2,1010eff0 <__alt_data_end+0xfffeeff0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010f030:	0005883a 	mov	r2,zero
}
1010f034:	e037883a 	mov	sp,fp
1010f038:	dfc00117 	ldw	ra,4(sp)
1010f03c:	df000017 	ldw	fp,0(sp)
1010f040:	dec00204 	addi	sp,sp,8
1010f044:	f800283a 	ret

1010f048 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010f048:	defffb04 	addi	sp,sp,-20
1010f04c:	dfc00415 	stw	ra,16(sp)
1010f050:	df000315 	stw	fp,12(sp)
1010f054:	df000304 	addi	fp,sp,12
1010f058:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010f05c:	d0a00617 	ldw	r2,-32744(gp)
1010f060:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f064:	00003106 	br	1010f12c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1010f068:	e0bffd17 	ldw	r2,-12(fp)
1010f06c:	10800217 	ldw	r2,8(r2)
1010f070:	1009883a 	mov	r4,r2
1010f074:	01008340 	call	10100834 <strlen>
1010f078:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1010f07c:	e0bffd17 	ldw	r2,-12(fp)
1010f080:	10c00217 	ldw	r3,8(r2)
1010f084:	e0bffe17 	ldw	r2,-8(fp)
1010f088:	10bfffc4 	addi	r2,r2,-1
1010f08c:	1885883a 	add	r2,r3,r2
1010f090:	10800003 	ldbu	r2,0(r2)
1010f094:	10803fcc 	andi	r2,r2,255
1010f098:	1080201c 	xori	r2,r2,128
1010f09c:	10bfe004 	addi	r2,r2,-128
1010f0a0:	10800bd8 	cmpnei	r2,r2,47
1010f0a4:	1000031e 	bne	r2,zero,1010f0b4 <alt_find_file+0x6c>
    {
      len -= 1;
1010f0a8:	e0bffe17 	ldw	r2,-8(fp)
1010f0ac:	10bfffc4 	addi	r2,r2,-1
1010f0b0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f0b4:	e0bffe17 	ldw	r2,-8(fp)
1010f0b8:	e0ffff17 	ldw	r3,-4(fp)
1010f0bc:	1885883a 	add	r2,r3,r2
1010f0c0:	10800003 	ldbu	r2,0(r2)
1010f0c4:	10803fcc 	andi	r2,r2,255
1010f0c8:	1080201c 	xori	r2,r2,128
1010f0cc:	10bfe004 	addi	r2,r2,-128
1010f0d0:	10800be0 	cmpeqi	r2,r2,47
1010f0d4:	1000081e 	bne	r2,zero,1010f0f8 <alt_find_file+0xb0>
1010f0d8:	e0bffe17 	ldw	r2,-8(fp)
1010f0dc:	e0ffff17 	ldw	r3,-4(fp)
1010f0e0:	1885883a 	add	r2,r3,r2
1010f0e4:	10800003 	ldbu	r2,0(r2)
1010f0e8:	10803fcc 	andi	r2,r2,255
1010f0ec:	1080201c 	xori	r2,r2,128
1010f0f0:	10bfe004 	addi	r2,r2,-128
1010f0f4:	10000a1e 	bne	r2,zero,1010f120 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1010f0f8:	e0bffd17 	ldw	r2,-12(fp)
1010f0fc:	10800217 	ldw	r2,8(r2)
1010f100:	e0fffe17 	ldw	r3,-8(fp)
1010f104:	180d883a 	mov	r6,r3
1010f108:	e17fff17 	ldw	r5,-4(fp)
1010f10c:	1009883a 	mov	r4,r2
1010f110:	010f36c0 	call	1010f36c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f114:	1000021e 	bne	r2,zero,1010f120 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1010f118:	e0bffd17 	ldw	r2,-12(fp)
1010f11c:	00000706 	br	1010f13c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1010f120:	e0bffd17 	ldw	r2,-12(fp)
1010f124:	10800017 	ldw	r2,0(r2)
1010f128:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f12c:	e0fffd17 	ldw	r3,-12(fp)
1010f130:	d0a00604 	addi	r2,gp,-32744
1010f134:	18bfcc1e 	bne	r3,r2,1010f068 <__alt_data_end+0xfffef068>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1010f138:	0005883a 	mov	r2,zero
}
1010f13c:	e037883a 	mov	sp,fp
1010f140:	dfc00117 	ldw	ra,4(sp)
1010f144:	df000017 	ldw	fp,0(sp)
1010f148:	dec00204 	addi	sp,sp,8
1010f14c:	f800283a 	ret

1010f150 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1010f150:	defffc04 	addi	sp,sp,-16
1010f154:	df000315 	stw	fp,12(sp)
1010f158:	df000304 	addi	fp,sp,12
1010f15c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
1010f160:	00bffa04 	movi	r2,-24
1010f164:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f168:	e03ffd15 	stw	zero,-12(fp)
1010f16c:	00001906 	br	1010f1d4 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
1010f170:	00840474 	movhi	r2,4113
1010f174:	1080a804 	addi	r2,r2,672
1010f178:	e0fffd17 	ldw	r3,-12(fp)
1010f17c:	18c00324 	muli	r3,r3,12
1010f180:	10c5883a 	add	r2,r2,r3
1010f184:	10800017 	ldw	r2,0(r2)
1010f188:	10000f1e 	bne	r2,zero,1010f1c8 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
1010f18c:	00840474 	movhi	r2,4113
1010f190:	1080a804 	addi	r2,r2,672
1010f194:	e0fffd17 	ldw	r3,-12(fp)
1010f198:	18c00324 	muli	r3,r3,12
1010f19c:	10c5883a 	add	r2,r2,r3
1010f1a0:	e0ffff17 	ldw	r3,-4(fp)
1010f1a4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1010f1a8:	d0e00a17 	ldw	r3,-32728(gp)
1010f1ac:	e0bffd17 	ldw	r2,-12(fp)
1010f1b0:	1880020e 	bge	r3,r2,1010f1bc <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
1010f1b4:	e0bffd17 	ldw	r2,-12(fp)
1010f1b8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
1010f1bc:	e0bffd17 	ldw	r2,-12(fp)
1010f1c0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
1010f1c4:	00000606 	br	1010f1e0 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f1c8:	e0bffd17 	ldw	r2,-12(fp)
1010f1cc:	10800044 	addi	r2,r2,1
1010f1d0:	e0bffd15 	stw	r2,-12(fp)
1010f1d4:	e0bffd17 	ldw	r2,-12(fp)
1010f1d8:	10800810 	cmplti	r2,r2,32
1010f1dc:	103fe41e 	bne	r2,zero,1010f170 <__alt_data_end+0xfffef170>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1010f1e0:	e0bffe17 	ldw	r2,-8(fp)
}
1010f1e4:	e037883a 	mov	sp,fp
1010f1e8:	df000017 	ldw	fp,0(sp)
1010f1ec:	dec00104 	addi	sp,sp,4
1010f1f0:	f800283a 	ret

1010f1f4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
1010f1f4:	defffb04 	addi	sp,sp,-20
1010f1f8:	df000415 	stw	fp,16(sp)
1010f1fc:	df000404 	addi	fp,sp,16
1010f200:	e13ffe15 	stw	r4,-8(fp)
1010f204:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
1010f208:	e0bfff17 	ldw	r2,-4(fp)
1010f20c:	10840070 	cmpltui	r2,r2,4097
1010f210:	1000021e 	bne	r2,zero,1010f21c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
1010f214:	00840004 	movi	r2,4096
1010f218:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
1010f21c:	e0fffe17 	ldw	r3,-8(fp)
1010f220:	e0bfff17 	ldw	r2,-4(fp)
1010f224:	1885883a 	add	r2,r3,r2
1010f228:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f22c:	e0bffe17 	ldw	r2,-8(fp)
1010f230:	e0bffc15 	stw	r2,-16(fp)
1010f234:	00000506 	br	1010f24c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
1010f238:	e0bffc17 	ldw	r2,-16(fp)
1010f23c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f240:	e0bffc17 	ldw	r2,-16(fp)
1010f244:	10800804 	addi	r2,r2,32
1010f248:	e0bffc15 	stw	r2,-16(fp)
1010f24c:	e0fffc17 	ldw	r3,-16(fp)
1010f250:	e0bffd17 	ldw	r2,-12(fp)
1010f254:	18bff836 	bltu	r3,r2,1010f238 <__alt_data_end+0xfffef238>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
1010f258:	e0bffe17 	ldw	r2,-8(fp)
1010f25c:	108007cc 	andi	r2,r2,31
1010f260:	10000226 	beq	r2,zero,1010f26c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
1010f264:	e0bffc17 	ldw	r2,-16(fp)
1010f268:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
1010f26c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
1010f270:	0001883a 	nop
1010f274:	e037883a 	mov	sp,fp
1010f278:	df000017 	ldw	fp,0(sp)
1010f27c:	dec00104 	addi	sp,sp,4
1010f280:	f800283a 	ret

1010f284 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1010f284:	defffe04 	addi	sp,sp,-8
1010f288:	df000115 	stw	fp,4(sp)
1010f28c:	df000104 	addi	fp,sp,4
1010f290:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1010f294:	e0bfff17 	ldw	r2,-4(fp)
1010f298:	10bffe84 	addi	r2,r2,-6
1010f29c:	10c00428 	cmpgeui	r3,r2,16
1010f2a0:	18001a1e 	bne	r3,zero,1010f30c <alt_exception_cause_generated_bad_addr+0x88>
1010f2a4:	100690ba 	slli	r3,r2,2
1010f2a8:	00840474 	movhi	r2,4113
1010f2ac:	10bcaf04 	addi	r2,r2,-3396
1010f2b0:	1885883a 	add	r2,r3,r2
1010f2b4:	10800017 	ldw	r2,0(r2)
1010f2b8:	1000683a 	jmp	r2
1010f2bc:	1010f2fc 	xorhi	zero,r2,17355
1010f2c0:	1010f2fc 	xorhi	zero,r2,17355
1010f2c4:	1010f30c 	andi	zero,r2,17356
1010f2c8:	1010f30c 	andi	zero,r2,17356
1010f2cc:	1010f30c 	andi	zero,r2,17356
1010f2d0:	1010f2fc 	xorhi	zero,r2,17355
1010f2d4:	1010f304 	addi	zero,r2,17356
1010f2d8:	1010f30c 	andi	zero,r2,17356
1010f2dc:	1010f2fc 	xorhi	zero,r2,17355
1010f2e0:	1010f2fc 	xorhi	zero,r2,17355
1010f2e4:	1010f30c 	andi	zero,r2,17356
1010f2e8:	1010f2fc 	xorhi	zero,r2,17355
1010f2ec:	1010f304 	addi	zero,r2,17356
1010f2f0:	1010f30c 	andi	zero,r2,17356
1010f2f4:	1010f30c 	andi	zero,r2,17356
1010f2f8:	1010f2fc 	xorhi	zero,r2,17355
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1010f2fc:	00800044 	movi	r2,1
1010f300:	00000306 	br	1010f310 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1010f304:	0005883a 	mov	r2,zero
1010f308:	00000106 	br	1010f310 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1010f30c:	0005883a 	mov	r2,zero
  }
}
1010f310:	e037883a 	mov	sp,fp
1010f314:	df000017 	ldw	fp,0(sp)
1010f318:	dec00104 	addi	sp,sp,4
1010f31c:	f800283a 	ret

1010f320 <atexit>:
1010f320:	200b883a 	mov	r5,r4
1010f324:	000f883a 	mov	r7,zero
1010f328:	000d883a 	mov	r6,zero
1010f32c:	0009883a 	mov	r4,zero
1010f330:	010f3e81 	jmpi	1010f3e8 <__register_exitproc>

1010f334 <exit>:
1010f334:	defffe04 	addi	sp,sp,-8
1010f338:	000b883a 	mov	r5,zero
1010f33c:	dc000015 	stw	r16,0(sp)
1010f340:	dfc00115 	stw	ra,4(sp)
1010f344:	2021883a 	mov	r16,r4
1010f348:	010f5000 	call	1010f500 <__call_exitprocs>
1010f34c:	00840474 	movhi	r2,4113
1010f350:	10852004 	addi	r2,r2,5248
1010f354:	11000017 	ldw	r4,0(r2)
1010f358:	20800f17 	ldw	r2,60(r4)
1010f35c:	10000126 	beq	r2,zero,1010f364 <exit+0x30>
1010f360:	103ee83a 	callr	r2
1010f364:	8009883a 	mov	r4,r16
1010f368:	010f6800 	call	1010f680 <_exit>

1010f36c <memcmp>:
1010f36c:	01c000c4 	movi	r7,3
1010f370:	3980192e 	bgeu	r7,r6,1010f3d8 <memcmp+0x6c>
1010f374:	2144b03a 	or	r2,r4,r5
1010f378:	11c4703a 	and	r2,r2,r7
1010f37c:	10000f26 	beq	r2,zero,1010f3bc <memcmp+0x50>
1010f380:	20800003 	ldbu	r2,0(r4)
1010f384:	28c00003 	ldbu	r3,0(r5)
1010f388:	10c0151e 	bne	r2,r3,1010f3e0 <memcmp+0x74>
1010f38c:	31bfff84 	addi	r6,r6,-2
1010f390:	01ffffc4 	movi	r7,-1
1010f394:	00000406 	br	1010f3a8 <memcmp+0x3c>
1010f398:	20800003 	ldbu	r2,0(r4)
1010f39c:	28c00003 	ldbu	r3,0(r5)
1010f3a0:	31bfffc4 	addi	r6,r6,-1
1010f3a4:	10c00e1e 	bne	r2,r3,1010f3e0 <memcmp+0x74>
1010f3a8:	21000044 	addi	r4,r4,1
1010f3ac:	29400044 	addi	r5,r5,1
1010f3b0:	31fff91e 	bne	r6,r7,1010f398 <__alt_data_end+0xfffef398>
1010f3b4:	0005883a 	mov	r2,zero
1010f3b8:	f800283a 	ret
1010f3bc:	20c00017 	ldw	r3,0(r4)
1010f3c0:	28800017 	ldw	r2,0(r5)
1010f3c4:	18bfee1e 	bne	r3,r2,1010f380 <__alt_data_end+0xfffef380>
1010f3c8:	31bfff04 	addi	r6,r6,-4
1010f3cc:	21000104 	addi	r4,r4,4
1010f3d0:	29400104 	addi	r5,r5,4
1010f3d4:	39bff936 	bltu	r7,r6,1010f3bc <__alt_data_end+0xfffef3bc>
1010f3d8:	303fe91e 	bne	r6,zero,1010f380 <__alt_data_end+0xfffef380>
1010f3dc:	003ff506 	br	1010f3b4 <__alt_data_end+0xfffef3b4>
1010f3e0:	10c5c83a 	sub	r2,r2,r3
1010f3e4:	f800283a 	ret

1010f3e8 <__register_exitproc>:
1010f3e8:	defffa04 	addi	sp,sp,-24
1010f3ec:	dc000315 	stw	r16,12(sp)
1010f3f0:	04040474 	movhi	r16,4113
1010f3f4:	84052004 	addi	r16,r16,5248
1010f3f8:	80c00017 	ldw	r3,0(r16)
1010f3fc:	dc400415 	stw	r17,16(sp)
1010f400:	dfc00515 	stw	ra,20(sp)
1010f404:	18805217 	ldw	r2,328(r3)
1010f408:	2023883a 	mov	r17,r4
1010f40c:	10003726 	beq	r2,zero,1010f4ec <__register_exitproc+0x104>
1010f410:	10c00117 	ldw	r3,4(r2)
1010f414:	010007c4 	movi	r4,31
1010f418:	20c00e16 	blt	r4,r3,1010f454 <__register_exitproc+0x6c>
1010f41c:	1a000044 	addi	r8,r3,1
1010f420:	8800221e 	bne	r17,zero,1010f4ac <__register_exitproc+0xc4>
1010f424:	18c00084 	addi	r3,r3,2
1010f428:	18c7883a 	add	r3,r3,r3
1010f42c:	18c7883a 	add	r3,r3,r3
1010f430:	12000115 	stw	r8,4(r2)
1010f434:	10c7883a 	add	r3,r2,r3
1010f438:	19400015 	stw	r5,0(r3)
1010f43c:	0005883a 	mov	r2,zero
1010f440:	dfc00517 	ldw	ra,20(sp)
1010f444:	dc400417 	ldw	r17,16(sp)
1010f448:	dc000317 	ldw	r16,12(sp)
1010f44c:	dec00604 	addi	sp,sp,24
1010f450:	f800283a 	ret
1010f454:	00800034 	movhi	r2,0
1010f458:	10800004 	addi	r2,r2,0
1010f45c:	10002626 	beq	r2,zero,1010f4f8 <__register_exitproc+0x110>
1010f460:	01006404 	movi	r4,400
1010f464:	d9400015 	stw	r5,0(sp)
1010f468:	d9800115 	stw	r6,4(sp)
1010f46c:	d9c00215 	stw	r7,8(sp)
1010f470:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010f474:	d9400017 	ldw	r5,0(sp)
1010f478:	d9800117 	ldw	r6,4(sp)
1010f47c:	d9c00217 	ldw	r7,8(sp)
1010f480:	10001d26 	beq	r2,zero,1010f4f8 <__register_exitproc+0x110>
1010f484:	81000017 	ldw	r4,0(r16)
1010f488:	10000115 	stw	zero,4(r2)
1010f48c:	02000044 	movi	r8,1
1010f490:	22405217 	ldw	r9,328(r4)
1010f494:	0007883a 	mov	r3,zero
1010f498:	12400015 	stw	r9,0(r2)
1010f49c:	20805215 	stw	r2,328(r4)
1010f4a0:	10006215 	stw	zero,392(r2)
1010f4a4:	10006315 	stw	zero,396(r2)
1010f4a8:	883fde26 	beq	r17,zero,1010f424 <__alt_data_end+0xfffef424>
1010f4ac:	18c9883a 	add	r4,r3,r3
1010f4b0:	2109883a 	add	r4,r4,r4
1010f4b4:	1109883a 	add	r4,r2,r4
1010f4b8:	21802215 	stw	r6,136(r4)
1010f4bc:	01800044 	movi	r6,1
1010f4c0:	12406217 	ldw	r9,392(r2)
1010f4c4:	30cc983a 	sll	r6,r6,r3
1010f4c8:	4992b03a 	or	r9,r9,r6
1010f4cc:	12406215 	stw	r9,392(r2)
1010f4d0:	21c04215 	stw	r7,264(r4)
1010f4d4:	01000084 	movi	r4,2
1010f4d8:	893fd21e 	bne	r17,r4,1010f424 <__alt_data_end+0xfffef424>
1010f4dc:	11006317 	ldw	r4,396(r2)
1010f4e0:	218cb03a 	or	r6,r4,r6
1010f4e4:	11806315 	stw	r6,396(r2)
1010f4e8:	003fce06 	br	1010f424 <__alt_data_end+0xfffef424>
1010f4ec:	18805304 	addi	r2,r3,332
1010f4f0:	18805215 	stw	r2,328(r3)
1010f4f4:	003fc606 	br	1010f410 <__alt_data_end+0xfffef410>
1010f4f8:	00bfffc4 	movi	r2,-1
1010f4fc:	003fd006 	br	1010f440 <__alt_data_end+0xfffef440>

1010f500 <__call_exitprocs>:
1010f500:	defff504 	addi	sp,sp,-44
1010f504:	df000915 	stw	fp,36(sp)
1010f508:	dd400615 	stw	r21,24(sp)
1010f50c:	dc800315 	stw	r18,12(sp)
1010f510:	dfc00a15 	stw	ra,40(sp)
1010f514:	ddc00815 	stw	r23,32(sp)
1010f518:	dd800715 	stw	r22,28(sp)
1010f51c:	dd000515 	stw	r20,20(sp)
1010f520:	dcc00415 	stw	r19,16(sp)
1010f524:	dc400215 	stw	r17,8(sp)
1010f528:	dc000115 	stw	r16,4(sp)
1010f52c:	d9000015 	stw	r4,0(sp)
1010f530:	2839883a 	mov	fp,r5
1010f534:	04800044 	movi	r18,1
1010f538:	057fffc4 	movi	r21,-1
1010f53c:	00840474 	movhi	r2,4113
1010f540:	10852004 	addi	r2,r2,5248
1010f544:	12000017 	ldw	r8,0(r2)
1010f548:	45005217 	ldw	r20,328(r8)
1010f54c:	44c05204 	addi	r19,r8,328
1010f550:	a0001c26 	beq	r20,zero,1010f5c4 <__call_exitprocs+0xc4>
1010f554:	a0800117 	ldw	r2,4(r20)
1010f558:	15ffffc4 	addi	r23,r2,-1
1010f55c:	b8000d16 	blt	r23,zero,1010f594 <__call_exitprocs+0x94>
1010f560:	14000044 	addi	r16,r2,1
1010f564:	8421883a 	add	r16,r16,r16
1010f568:	8421883a 	add	r16,r16,r16
1010f56c:	84402004 	addi	r17,r16,128
1010f570:	a463883a 	add	r17,r20,r17
1010f574:	a421883a 	add	r16,r20,r16
1010f578:	e0001e26 	beq	fp,zero,1010f5f4 <__call_exitprocs+0xf4>
1010f57c:	80804017 	ldw	r2,256(r16)
1010f580:	e0801c26 	beq	fp,r2,1010f5f4 <__call_exitprocs+0xf4>
1010f584:	bdffffc4 	addi	r23,r23,-1
1010f588:	843fff04 	addi	r16,r16,-4
1010f58c:	8c7fff04 	addi	r17,r17,-4
1010f590:	bd7ff91e 	bne	r23,r21,1010f578 <__alt_data_end+0xfffef578>
1010f594:	00800034 	movhi	r2,0
1010f598:	10800004 	addi	r2,r2,0
1010f59c:	10000926 	beq	r2,zero,1010f5c4 <__call_exitprocs+0xc4>
1010f5a0:	a0800117 	ldw	r2,4(r20)
1010f5a4:	1000301e 	bne	r2,zero,1010f668 <__call_exitprocs+0x168>
1010f5a8:	a0800017 	ldw	r2,0(r20)
1010f5ac:	10003226 	beq	r2,zero,1010f678 <__call_exitprocs+0x178>
1010f5b0:	a009883a 	mov	r4,r20
1010f5b4:	98800015 	stw	r2,0(r19)
1010f5b8:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010f5bc:	9d000017 	ldw	r20,0(r19)
1010f5c0:	a03fe41e 	bne	r20,zero,1010f554 <__alt_data_end+0xfffef554>
1010f5c4:	dfc00a17 	ldw	ra,40(sp)
1010f5c8:	df000917 	ldw	fp,36(sp)
1010f5cc:	ddc00817 	ldw	r23,32(sp)
1010f5d0:	dd800717 	ldw	r22,28(sp)
1010f5d4:	dd400617 	ldw	r21,24(sp)
1010f5d8:	dd000517 	ldw	r20,20(sp)
1010f5dc:	dcc00417 	ldw	r19,16(sp)
1010f5e0:	dc800317 	ldw	r18,12(sp)
1010f5e4:	dc400217 	ldw	r17,8(sp)
1010f5e8:	dc000117 	ldw	r16,4(sp)
1010f5ec:	dec00b04 	addi	sp,sp,44
1010f5f0:	f800283a 	ret
1010f5f4:	a0800117 	ldw	r2,4(r20)
1010f5f8:	80c00017 	ldw	r3,0(r16)
1010f5fc:	10bfffc4 	addi	r2,r2,-1
1010f600:	15c01426 	beq	r2,r23,1010f654 <__call_exitprocs+0x154>
1010f604:	80000015 	stw	zero,0(r16)
1010f608:	183fde26 	beq	r3,zero,1010f584 <__alt_data_end+0xfffef584>
1010f60c:	95c8983a 	sll	r4,r18,r23
1010f610:	a0806217 	ldw	r2,392(r20)
1010f614:	a5800117 	ldw	r22,4(r20)
1010f618:	2084703a 	and	r2,r4,r2
1010f61c:	10000b26 	beq	r2,zero,1010f64c <__call_exitprocs+0x14c>
1010f620:	a0806317 	ldw	r2,396(r20)
1010f624:	2088703a 	and	r4,r4,r2
1010f628:	20000c1e 	bne	r4,zero,1010f65c <__call_exitprocs+0x15c>
1010f62c:	89400017 	ldw	r5,0(r17)
1010f630:	d9000017 	ldw	r4,0(sp)
1010f634:	183ee83a 	callr	r3
1010f638:	a0800117 	ldw	r2,4(r20)
1010f63c:	15bfbf1e 	bne	r2,r22,1010f53c <__alt_data_end+0xfffef53c>
1010f640:	98800017 	ldw	r2,0(r19)
1010f644:	153fcf26 	beq	r2,r20,1010f584 <__alt_data_end+0xfffef584>
1010f648:	003fbc06 	br	1010f53c <__alt_data_end+0xfffef53c>
1010f64c:	183ee83a 	callr	r3
1010f650:	003ff906 	br	1010f638 <__alt_data_end+0xfffef638>
1010f654:	a5c00115 	stw	r23,4(r20)
1010f658:	003feb06 	br	1010f608 <__alt_data_end+0xfffef608>
1010f65c:	89000017 	ldw	r4,0(r17)
1010f660:	183ee83a 	callr	r3
1010f664:	003ff406 	br	1010f638 <__alt_data_end+0xfffef638>
1010f668:	a0800017 	ldw	r2,0(r20)
1010f66c:	a027883a 	mov	r19,r20
1010f670:	1029883a 	mov	r20,r2
1010f674:	003fb606 	br	1010f550 <__alt_data_end+0xfffef550>
1010f678:	0005883a 	mov	r2,zero
1010f67c:	003ffb06 	br	1010f66c <__alt_data_end+0xfffef66c>

1010f680 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1010f680:	defffd04 	addi	sp,sp,-12
1010f684:	df000215 	stw	fp,8(sp)
1010f688:	df000204 	addi	fp,sp,8
1010f68c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1010f690:	0001883a 	nop
1010f694:	e0bfff17 	ldw	r2,-4(fp)
1010f698:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1010f69c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1010f6a0:	10000226 	beq	r2,zero,1010f6ac <_exit+0x2c>
    ALT_SIM_FAIL();
1010f6a4:	002af070 	cmpltui	zero,zero,43969
1010f6a8:	00000106 	br	1010f6b0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1010f6ac:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1010f6b0:	003fff06 	br	1010f6b0 <__alt_data_end+0xfffef6b0>
